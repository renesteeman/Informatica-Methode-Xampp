-- phpMyAdmin SQL Dump
-- version 4.7.4
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Gegenereerd op: 19 apr 2019 om 12:53
-- Serverversie: 10.1.28-MariaDB
-- PHP-versie: 7.1.11

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `inforca`
--

-- --------------------------------------------------------

--
-- Tabelstructuur voor tabel `groepen`
--

CREATE TABLE `groepen` (
  `id` int(11) NOT NULL,
  `naam` tinytext COLLATE utf8_bin NOT NULL,
  `beschrijving` text COLLATE utf8_bin NOT NULL,
  `link` tinytext COLLATE utf8_bin NOT NULL,
  `school` tinytext COLLATE utf8_bin NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Gegevens worden geëxporteerd voor tabel `groepen`
--

INSERT INTO `groepen` (`id`, `naam`, `beschrijving`, `link`, `school`) VALUES
(1, 'test', 'Dit is een demo', 'https://github.com/renesteeman/Informatica-Methode-Xampp', 'test');

-- --------------------------------------------------------

--
-- Tabelstructuur voor tabel `planner`
--

CREATE TABLE `planner` (
  `id` int(11) NOT NULL,
  `titel` tinytext COLLATE utf8_bin NOT NULL,
  `beschrijving` text COLLATE utf8_bin NOT NULL,
  `progressie` tinytext COLLATE utf8_bin,
  `school` tinytext COLLATE utf8_bin NOT NULL,
  `klas` tinytext COLLATE utf8_bin,
  `datum` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Gegevens worden geëxporteerd voor tabel `planner`
--

INSERT INTO `planner` (`id`, `titel`, `beschrijving`, `progressie`, `school`, `klas`, `datum`) VALUES
(35, 'test1', 'test1', 'H1, ', 'test', 'A', '2019-08-29'),
(36, 'test2', 'test2', 'H1, H2, H5, H3, ', 'test', 'H51', '2018-08-30'),
(39, 'c', 'c', 'H1, H2, H3, H6, ', 'test', 'c', '2018-08-17'),
(40, 'opdracht', 'opdracht', 'H1, H2, ', 'test', 'klas1', '2018-09-17'),
(41, 'test', 'test', '', 'test', 'test', '1970-01-01'),
(42, 'test V', 'V1', 'V1, ', 'test', 'B', '2019-11-20');

-- --------------------------------------------------------

--
-- Tabelstructuur voor tabel `progressie`
--

CREATE TABLE `progressie` (
  `userid` int(11) NOT NULL,
  `H1` tinytext COLLATE utf8_bin,
  `H2` tinytext COLLATE utf8_bin,
  `H3` tinytext COLLATE utf8_bin,
  `H4` tinytext COLLATE utf8_bin,
  `H5` tinytext COLLATE utf8_bin,
  `H6` tinytext COLLATE utf8_bin,
  `V1` tinytext COLLATE utf8_bin,
  `V2` tinytext COLLATE utf8_bin,
  `V3` tinytext COLLATE utf8_bin,
  `V4` tinytext COLLATE utf8_bin,
  `V5` tinytext COLLATE utf8_bin,
  `B1` tinytext COLLATE utf8_bin,
  `B2` tinytext COLLATE utf8_bin
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Gegevens worden geëxporteerd voor tabel `progressie`
--

INSERT INTO `progressie` (`userid`, `H1`, `H2`, `H3`, `H4`, `H5`, `H6`, `V1`, `V2`, `V3`, `V4`, `V5`, `B1`, `B2`) VALUES
(341, '11111', '1001', NULL, '1111', '111011', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
(345, NULL, NULL, NULL, NULL, NULL, NULL, '1', NULL, NULL, NULL, '1010', '000100', NULL),
(353, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
(359, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '10101', NULL),
(361, '1000010', '0001110', NULL, NULL, NULL, NULL, '1    1', '11110', '11110', NULL, '1111', '000100', '011110'),
(953, '110000', '1000000', '000110000', '111100', NULL, NULL, '1100000', NULL, NULL, NULL, NULL, '111000', '011110'),
(960, '111111', NULL, NULL, NULL, NULL, NULL, '1111111', NULL, NULL, NULL, NULL, '111111', NULL);

-- --------------------------------------------------------

--
-- Tabelstructuur voor tabel `quiz_results`
--

CREATE TABLE `quiz_results` (
  `id` int(11) NOT NULL,
  `userid` int(11) NOT NULL,
  `hoofdstuk` tinytext COLLATE utf8_bin NOT NULL,
  `cijfer` float NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Gegevens worden geëxporteerd voor tabel `quiz_results`
--

INSERT INTO `quiz_results` (`id`, `userid`, `hoofdstuk`, `cijfer`) VALUES
(6, 361, 'H1', 10),
(7, 360, 'B1', 4),
(8, 361, 'H2', 10),
(11, 361, 'V4', 4),
(12, 958, 'H1', 10),
(13, 953, 'H1', 2.5),
(14, 960, 'H3', 9),
(15, 960, 'H1', 9),
(16, 960, 'V1', 9),
(17, 960, 'B1', 9),
(18, 953, 'H5', 10),
(19, 953, 'H4', 10),
(20, 953, 'V2', 10),
(21, 953, 'V3', 10),
(22, 953, 'B2', 10);

-- --------------------------------------------------------

--
-- Tabelstructuur voor tabel `quiz_vragen`
--

CREATE TABLE `quiz_vragen` (
  `questionID` int(11) NOT NULL,
  `quizID` int(11) NOT NULL,
  `vraag` tinytext COLLATE utf8_bin NOT NULL,
  `optie1` tinytext COLLATE utf8_bin NOT NULL,
  `optie2` tinytext COLLATE utf8_bin NOT NULL,
  `optie3` tinytext COLLATE utf8_bin NOT NULL,
  `optie4` tinytext COLLATE utf8_bin NOT NULL,
  `antwoord` tinyint(4) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- --------------------------------------------------------

--
-- Tabelstructuur voor tabel `theorie`
--

CREATE TABLE `theorie` (
  `theory_id` int(11) NOT NULL,
  `school` tinytext COLLATE utf8_bin NOT NULL,
  `hoofdstuk` tinytext COLLATE utf8_bin NOT NULL,
  `paragraaf` tinytext COLLATE utf8_bin NOT NULL,
  `hoofdstuk_naam` tinytext COLLATE utf8_bin NOT NULL,
  `paragraaf_naam` tinytext COLLATE utf8_bin NOT NULL,
  `main` text COLLATE utf8_bin NOT NULL,
  `questions` text COLLATE utf8_bin,
  `answers` text COLLATE utf8_bin
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Gegevens worden geëxporteerd voor tabel `theorie`
--

INSERT INTO `theorie` (`theory_id`, `school`, `hoofdstuk`, `paragraaf`, `hoofdstuk_naam`, `paragraaf_naam`, `main`, `questions`, `answers`) VALUES
(1, 'Inforca', 'H1', '1', 'Werking computer', 'Het binair systeem', '<p>Een computer \'begrijpt\' alleen nullen en enen. Informatie wordt in een computer altijd door middel van deze twee getallen opgeslagen. Of het nou gaat om letters, programma\'s of het beeld, het zijn allemaal nullen en enen.</p>\r\n\r\n			<p>Een bit heeft twee mogelijke waardes: 1 en 0. Een 1 geeft de aanwezigheid en 0 de afwezigheid van stroom aan. Er kan met dit binair systeem, een systeem met twee waarden, van alles worden weergegeven.</p>\r\n\r\n			<p>Dit binaire systeem werkt het beste als er meerdere 0\'en en 1\'en elkaar opvolgen, om zo voor veel mogelijkheden te zorgen. Hiermee kunnen dus ook grote hoeveelheden gegevens, oftewel data worden opgeslagen.</p>\r\n\r\n			<p>In het binair stelsel wordt van rechts naar links geteld. De waarde van een 1 wordt steeds groter als het verder links staat. In dit voorbeeld kun je zien hoe je in het binair stelsel tot 10 telt (met stappen van 1) en beginnend bij 0.</p>\r\n\r\n			<p>0, 1, 10, 11, 100, 101, 110, 111, 1000, 1001, 1010.</p>\r\n\r\n			<p>Alle 1\'en en 0\'en geven een volledige waarde weer. De waarde van de 1 wordt bepaald door de plek die deze binnen de reeks heeft. Helemaal rechts is het 1 waard en voor elke plek dat deze verder naar links staat verdubbeld zijn waarde. Een paar voorbeelden zijn:</p>\r\n\r\n			<p>Een 1 op de tweede plek van rechts is 2 waard, dus 10 in binair stelsel is 2 in het decimaal systeem.</p>\r\n\r\n			<p>Een 1 op de derde plek is 4 waard, dus een 100 in het binair stelsel is 4 in het decimaal systeem.</p>\r\n\r\n			<p>Een 1 op de vierde plek is 8 waard, dus een 1000 in het binair stelsel is 8 in het decimaal systeem.</p>\r\n\r\n			<p>Je kunt ook een 0 hieraan toevoegen. Dit hebt je bijvoorbeeld nodig om 5 weer te geven in decimaal, 101. Een vijf in binair is dus eigenlijk een vier en een, zoals twaalf in decimaal eigenlijk tien en twee is. Een 0 kan dus de waarde van een 1 verhogen, door de 1 naar links te \'duwen\'.</p>', '<ol>\r\n				<li>\r\n					Hoe wordt een nul en een één door een computer begrepen?\r\n				</li>\r\n				<li>\r\n					Vertaal 001, 011, 1001001 naar het decimale systeem (\'normale\' getallen)\r\n				</li>\r\n				<li>\r\n					Vertaal 5, 20 en 40 naar binair\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					Wel stroom = 1, geen stroom = 0\r\n				</li>\r\n				<li>\r\n					1, 3, 73\r\n				</li>\r\n				<li>\r\n					101, 10100, 101000\r\n				</li>\r\n			</ol>'),
(2, 'Inforca', 'H1', '2', 'Werking computer', 'Binair rekenen', '<p>Optellen</p>\r\n\r\n			<p>Optellen in binair is niet ingewikkeld. Je telt het bovenste en het onderste getal bij elkaar op en in het geval van 1+1 krijg je dan 10 als uitkomst. Het is alleen zo dat je bij het optellen van binaire getallen vaker iets moet onthouden, omdat het vaker boven de grenswaarde (meer dan 1) uitkomt.</p>\r\n\r\n			<img src=\"./afbeeldingen/additie.svg\" class=\"theorieImage\" />\r\n\r\n			<p>Decimaal: 108+49 = 157, dus het klopt.</p>\r\n\r\n			<p>Getallen met elkaar verminderen</p>\r\n\r\n			<p>Ook dit is niet ingewikkeld. Je haalt steeds het onderste getal van het bovenste getal af. Als je op -1 uitkomt \'leen\' je van het volgende nummer.</p>\r\n\r\n			<img src=\"./afbeeldingen/aftrekken.svg\" class=\"theorieImage\" />\r\n\r\n			<p>Vermenigvuldigen</p>\r\n\r\n			<p>Vermenigvuldigen lijkt wat moeilijker, maar dit valt mee. Dit doe je door steeds het meest rechtste nummer van onder te vermenigvuldigen met de nummers van de bovenste rij. Dit gaat dus van rechts naar links. Als de rij af is ga je bij de onderste rij de stappen herhalen voor het getal dat een plek verder naar links staat. Je zet steeds de uitkomsten onder elkaar en telt ze op het einde bij elkaar op. Denk eraan om het antwoord per rij ook steeds een plek op te laten schuiven naar links, je kunt er ook steeds een nul achter zetten om dit te verduidelijken.</p>\r\n\r\n			<img src=\"./afbeeldingen/multiplicatie.svg\" class=\"theorieImage\" />\r\n\r\n			<p>\r\n				Binair delen is ook mogelijk, maar dit is vrij lastig (voor een mens) om te doen. We zullen dit dus niet gaan uitvoeren, omdat het simpelweg te complex wordt.\r\n			</p>', 'Binair rekenen\r\n			<ol class=\"MLquestion\">\r\n				<li>\r\n					Tel op\r\n\r\n					<ol>\r\n						<li>10111+01100</li>\r\n						<li>01111+1110101</li>\r\n						<li>001100111+01111100</li>\r\n					</ol>\r\n				</li>\r\n\r\n\r\n				<li>\r\n					Trek af\r\n\r\n					<ol>\r\n						<li>10110-11</li>\r\n						<li>10110-0110</li>\r\n						<li>110011-101110</li>\r\n					</ol>\r\n				</li>\r\n\r\n				<li>\r\n					Vermenigvuldig\r\n\r\n					<ol>\r\n						<li>111*000</li>\r\n						<li>101*101</li>\r\n						<li>11011*101111 </li>\r\n					</ol>\r\n				</li>\r\n\r\n			</ol>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Tel op\r\n\r\n					<ol>\r\n						<li>100011</li>\r\n						<li>10000100</li>\r\n						<li>11100011</li>\r\n					</ol>\r\n				</li>\r\n\r\n				<li>\r\n					Trek af\r\n\r\n					<ol>\r\n						<li>10011</li>\r\n						<li>10000</li>\r\n						<li>100</li>\r\n					</ol>\r\n				</li>\r\n\r\n				<li>\r\n					Vermenigvuldig\r\n\r\n					<ol>\r\n						<li>0</li>\r\n						<li>11001</li>\r\n						<li>1001010</li>\r\n					</ol>\r\n				</li>\r\n\r\n			</ol>'),
(3, 'Inforca', 'H1', '3', 'Werking computer', 'Gates', '<p>\'Gates\', oftewel poortjes in het Nederlands, zijn kleine schakelingen. De eenvoudigste (en tevens ook de belangrijkste) zijn AND en OR. Een gate ontvangt twee binaire waarden als input en vergelijkt deze twee bits.</p>\r\n\r\n			<p>Afhankelijk van welke gate en welke input het heeft ontvangen komt er een bepaalde output. Deze output is wederom een bit, het antwoord eigenlijk dus met ja of nee.</p>\r\n\r\n			<p>Bij AND is de output 1 als de twee bits in de input beide 1 zijn, dan kan de stroom namelijk erdoorheen (zie afbeelding). De naam AND is dus eigenlijk best logisch, want het heeft 1 en 1 nodig.</p>\r\n\r\n			<p>Bij OR moet minimaal een van de twee bits in de input 1 zijn om vervolgens een output van 1 uit te krijgen, maar twee keer 1 geeft ook de output 1. Alleen als de output twee keer 0 is zal de output bij een OR gate 0 zijn. De stroom kan dus doorgaan als er minimaal één keer een 1 als input is.</p>\r\n\r\n			<p>Als je deze poorten in een stroomcircuit gebruikt geld dat wanneer de output 1 is, de kring gesloten is (en er dus wel stroom kan circuleren), en bij 0 de kring open is (en er dus geen stroom kan circuleren).</p>\r\n\r\n			<p>Een voorbeeld van deze gates in een circuit is:</p>\r\n\r\n			<p>AND</p>\r\n\r\n			<img src=\"./afbeeldingen/AND.svg\" class=\"theorieImage\" />\r\n\r\n			<p>OR</p>\r\n\r\n			<img src=\"./afbeeldingen/OR.svg\" class=\"theorieImage\" />\r\n\r\n			<p>De grijze strepen zijn de mogelijke posities van de schakelaars. Als ze dicht zijn kan er stroom doorheen en als ze open zijn niet, 1 of 0.</p>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Neem als input de waarden 0 en 1 (in die volgorde).\r\n\r\n					<ol>\r\n						<li>Welk resultaat zal dit geven bij een AND-gate?</li>\r\n						<li>En bij een OR-gate?</li>\r\n						<li>Teken de AND- en OR-gates als een elektrisch circuit.</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>0</li>\r\n						<li>1</li>\r\n						<li>\r\n							AND\r\n							<img src=\"./afbeeldingen/vraagAND.svg\" class=\"theorieImage\" />\r\n\r\n							OR\r\n							<img src=\"./afbeeldingen/vraagOR.svg\" class=\"theorieImage\" />\r\n\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(9, 'Inforca', 'H1', '4', 'Werking computer', 'Onderdelen van de computer', '<p>Een computer werkt door veel gates samen te gebruiken om data te verplaatsen en te manipuleren. Om dit te doen zijn veel verschillende onderdelen nodig, maar niet alle onderdelen voeren berekeningen uit.</p>\r\n\r\n			<p>Andere onderdelen zorgen ervoor dat aan de randvoorwaarden wordt voldaan, bijvoorbeeld dat de data opgeslagen kan worden en dat er genoeg stroom is. De belangrijkste onderdelen van een computer worden hieronder genoemd.</p>\r\n\r\n			<p>Het hart van de computer is de CPU (Central Processing Unit). Dit is een chip die meestal maar een paar centimeter groot is, waarop alle algemene instructies worden uitgevoerd met behulp van de eerder besproken gates en dus het heen en weer halen van binaire getallen. Tegenwoordig heeft een CPU meerdere kernen, ook wel cores genoemd. Door middel van deze kernen kan de CPU aan meerdere opdrachten tegelijk werken. Elke kern werkt dan als een soort mini-CPU, maar dan niet met alle onderdelen die de gehele CPU heeft.</p>\r\n\r\n			<p>De CPU heeft namelijk niet alleen de onderdelen voor het rekenen, maar daarnaast ook andere onderdelen. Een voorbeeld hiervan zijn cache opslag en de nodige structuren om data door te kunnen sturen.</p>\r\n\r\n			<p>Cache is een vorm van hele snelle opslag, maar vaak met een kleine capaciteit (enkele MB\'s). Data dat snel verwerkt moet worden kan hierin worden opgeslagen, vaak is dat code om programma\'s te laten werken.</p>\r\n\r\n			<p>De snelheid van een CPU hangt af van meerdere factoren, voornamelijk: de IPC, frequentie, cache en de hoeveelheid kernen. De IPC is het aantal instructies dat per clock uitgevoerd kan worden. Een clock is een cyclus van instructies, bijvoorbeeld haal waardes van x naar y of voeg x toe aan y. De frequentie geeft aan hoeveel clocks er in een seconde uitgevoerd worden. Des te groter de cache, des te meer code snel uitgevoerd kan worden. De code hoeft dan niet meer gezocht te worden in langzamere vormen van opslag. Bij meer kernen kan er meer code tegelijk uitgevoerd worden.</p>\r\n\r\n			<img src=\"./afbeeldingen/CPU.png\" class=\"theorieImage small\" />\r\n\r\n			<p>RAM, Random Accessible Memory, slaat data op dat snel beschikbaar moet zijn. Zaken als het OS (bestuuringssysteem) en actieve programma\'s worden hierop gezet, zodat de CPU niet steeds verzoeken hoeft te sturen om gegevens van een schijf te krijgen en er dus veel sneller bij kan. Des te meer ram, des te meer informatie snel beschikbaar kan zijn.</p>\r\n\r\n			<img src=\"./afbeeldingen/RAM.png\" class=\"theorieImage small\" />\r\n\r\n			<p>Het moederbord is een soort hub waarop alle hardware op aangesloten is: de CPU, GPU, schijven (opslag), usb poorten, netwerkadapters en nog een heleboel andere zaken zitten allemaal hierop aangesloten. Het moederbord zorgt er dus voor dat alle onderdelen met elkaar kunnen communiceren.</p>\r\n\r\n			<img src=\"./afbeeldingen/MOBO.png\" class=\"theorieImage small\" />\r\n\r\n			<p>De GPU heeft heel veel kernen, maar weer een lagere frequentie ten opzichte van de CPU. Tevens is het lastiger om er bepaalde instructies op uit te voeren. De GPU kan dus vooral veel eenvoudige taken tegelijkertijd uitvoeren. Dit maakt het erg handig voor bijvoorbeeld het laden van beelden en het spelen van spellen. Het zorgt ervoor dat er een beeld is dat een aangesloten scherm kan weergeven. De GPU kan echter ook andere taken uitvoeren, maar deze zijn vrij geavanceerd. Denk hierbij aan het trainen van zelflerende programma\'s.</p>\r\n\r\n			<img src=\"./afbeeldingen/GPU.png\" class=\"theorieImage small\" />\r\n\r\n			<p>Er zijn meerdere soorten schijven. Deze zijn voornamelijk op te delen in twee types: de SSD (Solid State Drive) en de HDD (harddisk drive).</p>\r\n\r\n			<p>Verschillen tussen de SSD en de HDD:</p>\r\n\r\n			<div class=\"table-wrapper\">\r\n				<table>\r\n					<tr>\r\n						<th>Verschil</th>\r\n						<th>SSD</th>\r\n						<th>HDD</th>\r\n					</tr>\r\n					<tr>\r\n						<td>Opslagmethode</td>\r\n						<td>Data wordt opgeslagen in cellen die maar een beperkt aantal keer herschreven kunnen worden.</td>\r\n						<td>Magnetische ladingen worden aangebracht op een draaiende schijf.</td>\r\n					</tr>\r\n					<tr>\r\n						<td>Snelheid</td>\r\n						<td>Erg snel.</td>\r\n						<td>Vrij langzaam.</td>\r\n					</tr>\r\n					<tr>\r\n						<td>Veiligheid van data</td>\r\n						<td>Wanneer een SSD kapot gaat blijft de data vaak nog leesbaar en het is vaak van te voren in te schatten wanneer het gebeurd.</td>\r\n						<td>Wanneer een HDD kapot gaat is de data niet meer leesbaar.</td>\r\n					</tr>\r\n					<tr>\r\n						<td>Prijs</td>\r\n						<td>De prijs per GB is nu (in 2019) nog een stuk hoger dan bij een hdd, maar daalt snel.</td>\r\n						<td>De prijs per GB is erg laag, maar gaat niet snel omlaag.</td>\r\n					</tr>\r\n\r\n				</table>\r\n			</div>\r\n\r\n			<img src=\"./afbeeldingen/HDD.png\" class=\"theorieImage small inline\" />\r\n			<img src=\"./afbeeldingen/SSD.png\" class=\"theorieImage small inline\" />\r\n\r\n			<p>Afkortingen:</p>\r\n\r\n			<div class=\"table-wrapper\">\r\n				<table>\r\n					<tr>\r\n						<th>Afkorting</th>\r\n						<th>Volledige naam</th>\r\n						<th>Vertaling</th>\r\n					</tr>\r\n					<tr>\r\n						<td>CPU</td>\r\n						<td>Central Processing Unit</td>\r\n						<td>Centrale processoreenheid</td>\r\n					</tr>\r\n					<tr>\r\n						<td>RAM</td>\r\n						<td>Random Accessible Memory</td>\r\n						<td>Willekeurig toegankelijk geheugen</td>\r\n					</tr>\r\n					<tr>\r\n						<td>OS</td>\r\n						<td>Operating System</td>\r\n						<td>Besturingssysteem</td>\r\n					</tr>\r\n					<tr>\r\n						<td>GPU</td>\r\n						<td>Graphics Processing Unit</td>\r\n						<td>Grafische processoreenheid</td>\r\n					</tr>\r\n					<tr>\r\n						<td>SSD</td>\r\n						<td>Solid State Drive</td>\r\n						<td>Schijf zonder bewegende delen</td>\r\n					</tr>\r\n					<tr>\r\n						<td>HDD</td>\r\n						<td>Harddisk Drive</td>\r\n						<td>Harde schijf</td>\r\n					</tr>\r\n\r\n				</table>\r\n			</div>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Beschrijf in maximaal 10 woorden de functie van de volgende onderdelen (dit hoeft niet in volledige zinnen).\r\n\r\n					<ol>\r\n						<li>de CPU</li>\r\n						<li>de GPU</li>\r\n						<li>het moederbord</li>\r\n						<li>het RAM</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>Het uitvoeren van algemene instructies.</li>\r\n						<li>Het uitvoeren van veel eenvoudige instructies tegelijkertijd.</li>\r\n						<li>Zorgen dat onderdelen onderling kunnen communiceren.</li>\r\n						<li>Het opslaan van data dat snel nodig is.</li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(10, 'Inforca', 'H1', '5', 'Werking computer', 'Software en het OS', '<p>De computer kan taken uitvoeren door een grote reeks van instructies uit te voeren. Deze instructies worden geschreven in een programmeertaal die vervolgens vertaald wordt naar machinetaal die de computer kan begrijpen. Hoe je zelf code kunt schrijven leer je in een later hoofdstuk.</p>\r\n\r\n			<p>De basis van code bestaat uit variabelen. Dit zijn getallen of een stuk tekst waar je steeds dingen aan veranderd.</p>\r\n\r\n			<p>Verder komt er ook veel herhaling voor, een voorbeeld is het verversen van het beeldscherm. Dit gebeurt door pixel voor pixel van links naar rechts en van boven naar onder de kleur aan te passen (in RGBA*) en dat vaak 60 keer of meer per seconde! Door deze variabelen en herhaling te combineren samen met anderen instructies, kan een computer taken uitvoeren.</p>\r\n\r\n			<p>Het belangrijkste programma dat op een computer werkt is het OS (Operating System), oftewel het besturingssysteem. Dit zorgt ervoor dat het geluid, het bewegen van de cursor op het scherm en het toetsenbord allemaal werken.</p>\r\n\r\n			<p>Verder geeft het OS de mogelijkheid om andere programma\'s te laten werken die opdrachten kunnen geven aan het besturingssysteem. Ook zorgt het OS ervoor dat de rekenkracht goed wordt verdeeld over verschillende processen. Het werkt dus als een soort laag tussen de hardware (het fysieke deel) en de software (de code). De belangrijkste taak is misschien wel het registreren van input (data dat de gebruiker aan de computer geeft) en het terug kunnen geven van output, bijvoorbeeld het beeld of geluid. De vorm van de output wordt dan meestal wel weer door andere software geregeld, maar de OS maakt het mogelijk dat deze processen allemaal uitgevoerd kunnen worden.</p>\r\n\r\n			<p>*RGBA staat voor Red Green Blue Alpha. Alpha geeft aan hoe \'sterk\' de kleur moet zijn en is een waarde van 0 tot 1.</p>', NULL, NULL),
(11, 'Inforca', 'H1', '6', 'Werking computer', 'Standaardrepresentaties', '<p>\r\n				Een computer moet heel veel verschillende soorten data kunnen opslaan en gebruiken met alleen maar het binaire systeem. Sommige zaken lijken hiervoor misschien niet geschikt, zoals: afbeeldingen, geluid en letters. Voor deze soorten data zijn systemen ontwikkeld om ze te kunnen vertalen naar het binair systeem en in deze paragraaf ga je leren hoe dat in elkaar zit.\r\n			</p>\r\n			<p>\r\n				Afbeeldingen kun je zien als een heleboel kleine puntjes, oftewel pixels. Deze pixels hebben een kleur en deze bestaat uit een mix van rood, groen en blauw. Een computer vertaal zo\'n pixel naar RGB-waarde waarin staat hoeveel rood, groen en blauw die pixel bevat. Een hele reeks van pixels wordt dus een reeks RGB-waardes. Samen vormt zo\'n reeks RGB-waardes dus een afbeelding.\r\n			</p>\r\n			<p>\r\n				Video werkt niet erg anders, want video bestaat uit een reeks afbeeldingen. Als je dus een reeks met daarin weer die reeks van RGB-waardes zet kun je dus video binair opslaan.\r\n			</p>\r\n			<p>\r\n				Geluid kan gezien worden als een reeks toonhoogtes. Als je de toonhoogte omzet in een getal en dat voor alle toonhoogtes die achter elkaar voorkomen doet heb je al een geluidsbestand. Het is moeilijk om elk detail op te slaan, omdat er zo veel toonhoogtes voorkomen. Om toch ervoor te zorgen dat het haalbaar blijft wordt om een bepaalde de toonhoogte vastgelegd en niet voortdurend. Er gaat zo wel wat detail verloren, maar het bestand blijft beperkt in grote. Er is immers minder data nodig om het geluid weer te geven. Als je de hoeveelheid data dat gebruikt wordt om iets op te slaan verkleint heet dit compressie.\r\n			</p>\r\n			<p>\r\n				Letters kunnen ook worden omgezet naar een binair getal. Er zijn hiervoor verschillende afspraken gemaakt die andere getallen toekennen aan een teken. Een paar bekende systemen zijn: ASCII en UTF. Een voorbeeld van zo\'n waarde dat een getal representeert in ASCII is 1000001 (65), dit staat voor \'A\'. Een belangrijk verschillen systemen zoals ASCII en UTF is het aantal karakters dat ze kunnen weergeven en hoeveel opslag ervoor nodig is. Des te meer karakters opgeslagen kunnen worden, hoe meer opslag er nodig is. Er zijn namelijk meer unieke waardes nodig om alle karakters te kunnen onderscheiden.\r\n			</p>', '<ol>\r\n				<li>\r\n					Wat is compressie?\r\n				</li>\r\n				<li>\r\n					Hoe kan video ook wel gezien worden?\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					Iets opslaan met minder data. Hier gaat soms ook kwaliteit bij verloren.\r\n				</li>\r\n				<li>\r\n					Als een reeks frames of zelfs als een reeks van een reeks van RGB-waardes (van pixel -> frame -> video).\r\n				</li>\r\n			</ol>'),
(12, 'Inforca', 'H2', '1', 'Logica', 'Introductie tot logica', '<p>\r\n				Logica is het combineren van feiten om nieuwe feiten op te kunnen stellen. Een bekend voorbeeld is de uitspraak: \"Alle mensen zijn stervelingen. Socrates is een mens. Dus Socrates is een sterveling.\" Twee feiten vormen hier dus het derde feit.\r\n			</p>\r\n\r\n			<p>\r\n				Logica is een vorm van wiskunde die vrij abstract lijkt. Het heeft zijn eigen notaties en betekenissen. Er wordt veel gebruik gemaakt van sets. Dit zijn eigenlijk groepen objecten of getallen, bijvoorbeeld katten, honden of priemgetallen.\r\n			</p>\r\n\r\n			<p>\r\n				Een van de andere regels bij logica is dat het +-teken union (samenvoeging) betekent. Dit wordt gebruikt bij de sets. Je kunt met + dus sets samenvoegen.  X (maal) betekent intersection (overlap). Dit kan ook voor sets gebruikt worden.  Verder betekent 1 alles, zoals in een set met auto\'s, hier betekent 1 alle auto\'s.\r\n			</p>\r\n\r\n			<p>\r\n				Een andere notatie voor + is ∪ en voor maal is ꓵ. ∪ kun je zien als bij elkaar en ꓵ als \'en\'.\r\n			</p>\r\n\r\n			<p>\r\n			Voorbeelden:\r\n			</p>\r\n\r\n			<p>\r\n				Stel set 1 bestaat uit katten. We delen set 1 in op basis van kleur; wit, grijs en bruin. We korten deze kleuren af met W, G en B. Je kunt nu zeggen dat bij set 1 W+G+B=1, want alle katten van deze set vallen onder die drie kleuren. Zo is W+G=1-B, alle katten met uitzondering van de bruine zijn wit of grijs. Er komen nu 0 rode (R) katten bij, nu is R=0, want geen enkele kat is rood.\r\n			</p>\r\n\r\n			<p>\r\n				Stel we hebben nu 5 witte, 2 grijze, 6 bruine en 0 rode katten. W+G of W ∪ G bevat dus 7 katten (5+2). Van de 5 witte katten zijn 3 man (M) en 2 vrouw (V). M x W of M ꓵ W bevat dus 3 katten, want 3 witte katten zijn man.\r\n			</p>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Stel er zijn 4 intel computers (I), 3 AMD computers (A) en 2 gemengde computers (M). Hoeveel computers zijn er in de volgende gevallen?\r\n\r\n					<ol>\r\n						<li>A + I</li>\r\n						<li>I &cap; A</li>\r\n						<li>A &cup; I</li>\r\n						<li>1</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					7 (= 4+3)\r\n				</li>\r\n				<li>\r\n					7 (= 4+3)\r\n				</li>\r\n				<li>\r\n					0, geen AMD computer is hier ook een Intel computer\r\n				</li>\r\n				<li>\r\n					9 (= 4+3+2)\r\n				</li>\r\n			</ol>'),
(13, 'Inforca', 'H2', '2', 'Logica', 'Visuele logica', '<p>\r\n				De verbanden tussen sets kunnen ook visueel worden weergeven, bijvoorbeeld in de vorm van cirkels. Stel set 1 bevat 27, 3, 8, 21 en 6. Set 2 bevat 3, 0, 20, 8 en 4.\r\n			</p>\r\n			<p>\r\n				Set 1 &cap; 2 is dan:\r\n				<img src=\"./afbeeldingen/logic2Mul.svg\" class=\"theorieImage\" />\r\n			</p>\r\n			<p>\r\n				Set 1 ∪ set 2 is dan weer te geven als:\r\n				<img src=\"./afbeeldingen/logic2Add.svg\" class=\"theorieImage\" />\r\n			</p>\r\n			<p>\r\n				Of:\r\n				<img src=\"./afbeeldingen/logic2MulCom.svg\" class=\"theorieImage\" />\r\n			</p>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>Teken set 1 ∪ set 2 inclusief de getallen</li>\r\n						<li>Teken set 1 ꓵ set 2 inclusief de getallen</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Stel set 1 bevat 1, 3, 20, 6 en 400. Set 2 bevat 1, 6, 200, 8 en 4.\r\n					<ol>\r\n						<li><img src=\"./afbeeldingen/logic2Ans1.svg\" class=\"theorieImage\" /></li>\r\n						<li><img src=\"./afbeeldingen/logic2Ans2.svg\" class=\"theorieImage\" /></li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(14, 'Inforca', 'H2', '3', 'Logica', 'Binair', '<p>\r\n				Een andere manier om logica te gebruiken is met booleans, oftewel ja of nee, true or false, 1 of 0.\r\n				Stel ik wil een witte kat met korte staart of een mannetjes kat v (v = of) een groene kat. Oftewel W(it)*K(ort)+M(an)+G(roen). Maal kan hier als \'en\' gezien worden en \'+\' als of. Stel ik vind een bruine mannetjes kat, dan kan ik dat weergeven als: 0*0+1+0=1, dus het voldoet. NB (nota bene/let op) 1+1=1, want true+true=true.\r\n			</p>\r\n			<p>\r\n				Een computer voert deze taken uit met de gates die in H1 besproken zijn.\r\n			</p>', '<ol>\r\n				<li>\r\n					Noem minimaal vijf mogelijke stappen die je volgt als je een auto wilt kopen.\r\n				</li>\r\n				<li>\r\n					Je wilt een mail sturen naar klasgenoten waarvan de naam niet begint met een r, jonger zijn dan 18, ouder dan 16 en graag naar de bioscoop gaan en actiefilms leuk vinden. Noem de stappen die een programma kan volgen om een mail te sturen naar deze klasgenoten, noteer minimaal 5 stappen.\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestionAlt\">\r\n				<li>\r\n					Juiste mogelijke stappen (er is meer mogelijk):\r\n					<ol>\r\n						<li>Kiezen tussen de verschillende soorten aandrijvingen; elektrisch, gas, benzine, diesel of op waterstof?</li>\r\n						<li>Kiezen hoe snel het moet zijn</li>\r\n						<li>Het budget bepalen</li>\r\n						<li>Een kleur kiezen</li>\r\n						<li>Bezoeken dealer</li>\r\n						<li>Testrit maken</li>\r\n						<li>Opties bekijken</li>\r\n						<li>Betalen</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					Juiste mogelijke stappen (er is meer mogelijk):\r\n					<ol>\r\n						<li>Schrijf alle namen op van klasgenoten</li>\r\n						<li>Streep de namen door van mensen waarvan de naam met r begint</li>\r\n						<li>Je noteert van de overige mensen de leeftijd</li>\r\n						<li>Je kijkt of de leeftijd van de klasgenoten tussen de 16 en 18 jaar ligt</li>\r\n						<li>Je vraagt aan deze mensen of ze graag naar de bioscoop gaan</li>\r\n						<li>De mensen die nee antwoorden streep je op de lijst door</li>\r\n						<li>Je vraagt aan de mensen die over zijn of ze actiefilms leuk vinden</li>\r\n						<li>Je vraagt aan de mensen die nog over zijn wat hun e-mailadres is</li>\r\n						<li>Je stelt een mail op</li>\r\n						<li>Je vult de adressen in van de overgebleven personen in</li>\r\n						<li>Je stuurt de mail</li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(15, 'Inforca', 'H2', '4', 'Logica', 'Logica en programmeren', '<p>\r\n				Het opdelen van een probleem is erg belangrijk. Voornamelijk bij logisch nadenken en dus ook bij programmeren.  Als je een project gaat uitvoeren moet je een groot probleem in kleinere stukken kunnen hakken om te zorgen voor overzicht. Het wordt dan makkelijker om de problemen op te lossen.\r\n			</p>\r\n\r\n			<p>\r\n				Stel je wilt een website gaan maken, dan moet je eerst bedenken wat voor soort website het moet worden: hoe het gaat heten, wat wordt de structuur en hoe moet het eruit gaan zien, enz. Daarna kun je de logica van de site in stukken hakken. Stel je de flow van het programma op, oftewel hoe dingen met elkaar verbonden zijn en wat wanneer gebeurt. Een flow kan bijvoorbeeld zijn: ga naar de startpagina, klik op login, vul gegevens in, klik op submit, laat een script de gegevens analyseren, controleer de gegevens en bepaal of iemand ingelogd moet worden. Je kunt ook de taken indelen onder bepaalde programmeertalen, sommige talen zijn namelijk beter voor bepaalde problemen dan andere.\r\n			</p>\r\n\r\n			<p>\r\n				Als je vervolgens gaat programmeren kun je de stappen die je al bedacht hebt makkelijker omzetten in code. Je weet namelijk al wat de structuur van het programma gaat worden en hoeft niet steeds iets aan te passen door een veranderende structuur. Het is dus handig om eerst na te denken over hoe jouw programma in elkaar moet zitten voordat je het daadwerkelijk gaat ontwikkelen.\r\n			</p>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Beschrijf in maximaal 10 woorden de functie van de volgende onderdelen (dit hoeft niet in volledige zinnen).\r\n\r\n					<ol>\r\n						<li>de CPU</li>\r\n						<li>de GPU</li>\r\n						<li>het moederbord</li>\r\n						<li>het RAM</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>Het uitvoeren van algemene instructies.</li>\r\n						<li>Het uitvoeren van veel eenvoudige instructies tegelijkertijd.</li>\r\n						<li>Zorgen dat onderdelen onderling kunnen communiceren.</li>\r\n						<li>Het opslaan van data dat snel nodig is.</li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(16, 'Inforca', 'H2', '5', 'Logica', 'Automaten', '<p>\r\n				Eindige automaten zijn systemen waarmee mogelijke processen worden vastgelegd. Het klinkt erg lastig, maar weest gerust.\r\n			</p>\r\n			<p>\r\n				Een voorbeeld zal hierbij helpen. Je wilt online een boek gaan kopen, maar weet nog niet welk boek. Je kunt dan een paar stappen volgen en er zijn verschillende uitkomsten mogelijk.\r\n			</p>\r\n			<img src=\"./afbeeldingen/automaat.svg\" />\r\n			<p>\r\n				Je legt dus vast welke toestanden er mogelijk zijn en hoe toestanden elkaar opvolgen.\r\n			</p>\r\n			<p>\r\n				Als de kans dat een bepaalde route gevolgd wordt 100% is dan is het deterministisch, dat is bij het voorbeeld niet het geval. Het is mogelijk dat je boek wel of niet te duur vindt, het is van tevoren niet zeker.\r\n			</p>\r\n			<p>\r\n				Herhaling is ook mogelijk, zo als te zien is in het voorbeeld bij de pijl van \"Je vindt het te duur\" naar \"Je gaat zoeken\".\r\n			</p>', '<ol>\r\n				<li>\r\n					Maak zelf een automaat voor het gebruiken van een wasstraat. Je mag zelf bepalen wat de mogelijkheden precies zijn.\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					<img src=\"./afbeeldingen/automaatAntwoord.svg\" />\r\n				</li>\r\n			</ol>'),
(17, 'Inforca', 'H2', '6', 'Logica', 'Grammatica', '<p>\r\n				Grammatica is een set regels waar aan voldaan moet worden om een bruikbare waarde te hebben. Denk maar aan het Nederlands. Een \'zin\' zoals \"Gaan winkel de we zo naar voor boodschappen voor komende week!\" is niet bruikbaar, een zin zoals \"Gaan we naar de winkel voor boodschappen voor komende week?\" is wel bruikbaar. Bij informatica geld hetzelfde principe, een bruikbare waarde moet aan een aantal eisen voldoen.\r\n			</p>\r\n			<p>\r\n				Een voorbeeld voor bij informatica is de opbouw van een postcode, die is al volgt cijfer + cijfer + cijfer + cijfer + letter + letter. Zo kun je bijvoorbeeld 1234AB krijgen, maar niet B23A41. Zo\'n regel of opbouw kun je voor allerlei dingen gebruiken, denk aan: telefoonnummers, adressen, leeftijden en e-mailadressen.\r\n			</p>\r\n			<p>\r\n				Het is ook mogelijk om deze grammaticaregels in een schema weer te geven.\r\n			</p>\r\n			<img src=\"./afbeeldingen/grammatica.svg\" />\r\n			<p>\r\n				Bij straatnaam zie je een voorbeeld van herhaling, namelijk de pijl die na letter terug gaat naar voor letter. Het betekent hier dat een onbekend aantal letters achter elkaar mag voorkomen.\r\n			</p>\r\n			<p>\r\n				Bij letter zie je een voorbeeld van meerdere opties, namelijk de vertakkingen boven elkaar. Deze vertakkingen beteken dat elk van de boven elkaar staande waardes geaccepteerd wordt. Je ziet ook drie puntjes tussen \'b\' en \'c\'. Deze puntjes betekenen dat alle waardes die ertussen horen ook goed zijn, dit mag alleen gebruikt worden wanneer het duidelijk naar welke waardes het refereert. In dit geval gaat het om alle kleine letters.\r\n			</p>', '<ol>\r\n				<li>\r\n					Hoe ziet de grammatica voor een punt van een toets eruit?\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					<img src=\"./afbeeldingen/grammaticaAntwoord.svg\" />\r\n				</li>\r\n			</ol>'),
(18, 'Inforca', 'V1', '1', 'Filosofie en AI', 'Wat is filosofie?', '<p>Filosofie of wijsbegeerte kan worden gezien als de studie van kennis en stelt vragen over het bestaan, rationaliteit en kennis met als doel om de persoon als een individu beter te maken.</p>\r\n\r\n			<p>Vaak zijn filosofische vragen fundamenteel en abstract, je leert filosofie vaak door zelfreflectie in plaats van experimenten. Dit betekent ook dat wijsbegeerte niet een empirische wetenschap is. Empirisme neemt aan dat kennis uit ervaring en experimenten komt, zo zijn wetenschappen zoals natuurkunde en scheikunde empirisch. Hier tegenover staat rationalisme en formele wetenschappen waarin kennis gebaseerd is op rationaliteit en logica. Wiskunde en logica vallen hieronder.</p>\r\n\r\n			<p>Filosofie en programmeren vallen beide onder de formele wetenschappen, en hebben meerdere overeenkomsten. Ze volgen bijvoorbeeld vergelijkbare denkstappen, zowel filosofie en programmeren pakken grote problemen en vraagstukken aan die je niet in een keer kan oplossen, je moet het verdelen in kleinere, begrijpelijke vragen.</p>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Deze vragen hebben geen concrete antwoorden, ze zijn reflecties van wie je bent en hoe je denkt. Probeer het standpunt van jouw antwoord te nemen en het te discussiëren met iemand met een verschillend standpunt.\r\n\r\n					<ol>\r\n						<li>Heb je vrij wil?</li>\r\n						<li>Wat is een goede daad?</li>\r\n						<li>Kan kunstmatige intelligentie bestaan?</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestionAlt2\">\r\n				<li>\r\n					Hier zijn antwoorden van verschillende filosofische stromingen:\r\n\r\n					<ol>\r\n						<li>\r\n							<ol>\r\n								<li>\r\n									Breinreductionisten (Victor Lamme): De vrije wil bestaat niet, de mens is een resultaat van chemische processen in het brein. Het zelf is een illusie.\r\n								</li>\r\n								<li>\r\n									René Descartes: Je kunt aan alles twijfelen behalve het ik. Het ik is degene die twijfelt. Het ik is een onstoffelijke geest die het lichaam bestuurt.\r\n								</li>\r\n							</ol>\r\n						</li>\r\n						<li>\r\n							<ol>\r\n								<li>\r\n									Hedonisme: Een daad is goed wanneer ik er blij van word. Genot is het belangrijkste doel in het leven en is hetgeen waar iedereen naar moet streven.\r\n								</li>\r\n								<li>\r\n									Immanuel Kant: Een daad is goed wanneer een maatschappij er beter van wordt als iedereen dit doet. Bijvoorbeeld: \"Liegen is niet een goede daad omdat een maatschappij niet kan bestaan als iedereen tegen elkaar zou liegen.\r\n								</li>\r\n								<li>\r\n									Utilitarisme (Jeremy Bentham): Het is een goede daad wanneer het resultaat positief is.\r\n								</li>\r\n							</ol>\r\n						</li>\r\n						<li>\r\n							<ol>\r\n								<li>\r\n									Ja, een AI is een brein van silicium en is in staat om veel sneller en efficiënter te werken dan een menselijk brein.\r\n								</li>\r\n								<li>\r\n									Nee, AI is een programma en bestaat uit door mens geschreven code en kan niet emoties ervaren dat centraal staat tot een mens. Een AI kan wel simuleren dat het emoties heeft zoals blijheid en verdriet maar ervaart ze niet. Dit zorgt voor een fundamentele verschil in bewustzijn.\r\n								</li>\r\n							</ol>\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(19, 'Inforca', 'V1', '2', 'Filosofie en AI', 'Wat is ethiek?', '<p>In de vorige paragraaf heb je de vraag, \"Wat is een goede daad?\" beantwoord. Dit is een van de ingewikkeldste vragen in de filosofie en vormt een stroming in de filosofie genaamd ethiek. Ethiek is de studie waarin men de concepten van goed en slecht systematiseert en verdedigd.\r\n			</p>\r\n\r\n			<p>Digitale technologieën zoals het internet, mobieltjes en programmeren zijn relatief nieuw en de regels hiervan zijn vaak onduidelijk. Daarom is het belangrijk om, wanneer je een programma schrijft, rekening te houden met wat voor een invloed het heeft op jouw omgeving.</p>\r\n\r\n			<p>Een paar vragen die je je kunt afvragen zijn:</p>\r\n\r\n			<ul>\r\n				<li>Mag je een programma schrijven dat data van gebruikers vertaalt naar mogelijke reclames?</li>\r\n\r\n				<li>Mag je iets maken dat in staat is om mensen te bespioneren via hun microfoons?</li>\r\n			</ul>\r\n\r\n			<p>Verschillende groepen mensen hebben een richtlijn hierover gecreëerd, zo heeft de ACM (Association for Computing Machinery) een ethische code gemaakt:</p>\r\n\r\n			<ul>\r\n				<li>Draag bij aan de maatschappij en menselijk welzijn</li>\r\n\r\n				<li>Schaad anderen niet</li>\r\n\r\n				<li>Wees eerlijk en betrouwbaar</li>\r\n\r\n				<li>Waardeer intellectueel eigendommen</li>\r\n\r\n				<li>Respecteer privacy</li>\r\n\r\n				<li>Behoud de geheimplicht en deel dus geen informatie onnodig met anderen.</li>\r\n			</ul>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Deze vragen hebben geen concrete antwoorden, ze zijn reflecties van wie je bent en hoe je denkt. Probeer het standpunt van jouw antwoord in te nemen en erover te discussiëren met iemand met een ander standpunt.\r\n\r\n					<ol>\r\n						<li>Mag je iets maken dat intelligentie van mensen kan berekenen?</li>\r\n						<li>Mag je iets maken dat vrije wil van mensen mag overschrijven?</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestionAlt2\">\r\n				<li>\r\n					Hier zijn mogelijke antwoorden met verschillende filosofische richtingen:\r\n\r\n					<ol>\r\n						<li>\r\n							<ol>\r\n								<li>\r\n									Voorbeeld wel: Binnen educatie is personalisatie belangrijk, kinderen appreciëren het wanneer een leraar ze beter kent, een programma dat intelligentie kan berekenen kan er voor zorgen dat kinderen betere educatie krijgt en niet constant van niveaus veranderen.\r\n								</li>\r\n								<li>\r\n									Voorbeeld niet: Hoewel een programma dat in staat is om intelligentie op massale schaal kan berekenen niet direct een van de ACM richtlijnen overschrijdt betekent niet dat het ethisch goed is. Gebruik logica om te voorspellen wat een programma als dit kan doen. Wanneer mensen in staat zijn om anderen te onderscheiden gebaseerd op een zichtbaar verschil zullen extremere groepen mensen kunnen categoriseren. Mensen kunnen privileges en banen krijgen gebaseerd op IQ.\r\n								</li>\r\n								<li>\r\n									Richting gevolgenethiek: We baseren ethiek op het resultaat, wanneer een actie meer positieve dan negatieve gevolgen heeft dat is het ethisch goed. Een positief gevolg is gebaseerd op hoeveel goed het brengt in de wereld. Een actie zoals dit zal meer kans hebben om misbruikt te worden en is ethisch niet goed.\r\n								</li>\r\n								<li>\r\n									Richting plichtethiek: Kant geloofde in het categorische imperatief. Dit betekent dat wanneer een actie door iedereen in een samenleving wordt uitgevoerd en de maatschappij blijft neutraal of wordt hier beter op, dan is de actie ethisch goed. Bijvoorbeeld: Als iedereen in een maatschappij zou liegen, dan zal de maatschappij niet beter ervan worden, het zal juist uit elkaar vallen. Daarom is liegen nooit ethisch goed in de ogen van Kant. Een programma om intelligentie te berekenen heeft een grote risico op de samenleving en is dus ethisch niet goed.\r\n								</li>\r\n								<li>\r\n									Richting nihilisme: Friedrich Nietzsche geloofde in het nihilisme. Nihilisme is wanneer je denkt dat mensen zo onbelangrijk zijn in het universum dat het leven al zijn betekenis heeft verloren. Nietzsche geloofde ook dat de mens moet proberen een betekenis en een doel voor zichzelf moet creëren, de mens moet proberen een doel in het leven te vinden en zo een hogere mens worden. De hogere mens kan dan de normale mens achterlaten en verder evolueren. Een programma dat intelligentie kan berekenen kan dit process versnellen en de mensheid \"verbeteren\", daarom is dit ethisch wel een goed doel om te hebben.\r\n								</li>\r\n							</ol>\r\n						</li>\r\n						<li>\r\n							<ol>\r\n								<li>\r\n									Voorbeeld wel: Geheimen kunnen gevaarlijk zijn voor een samenleving. Wanneer je het vrije wil van een terrorist overschrijft kan je verdere aanvallen voorkomen.\r\n								</li>\r\n								<li>\r\n									Voorbeeld niet: We leven in een liberale samenleving waarin menselijke vrijheid centraal staat. Om vrijheid te overschrijven is gelijk aan fundamentele rechten van de mens te verbreken.\r\n								</li>\r\n								<li>\r\n									Richting gevolgenethiek: Hoewel er goede gevolgen kunnen komen van een machine zoals dit, zijn de negatieve gevolgen veel te extreem. Dit is een ethisch slechte actie.\r\n								</li>\r\n								<li>\r\n									Plichtsethiek: Als in een samenleving de vrije wil van iedereen kan worden overschreven zal dit resulteren in een samenleving waarin iedereen veilig is in de ruil voor vrijheid. Als je veiligheid over vrijheid prioriteert zal dit een goede actie zijn, als je vrijheid ziet als een belangrijke recht voor de mens dan is dit een slechte actie.\r\n								</li>\r\n							</ol>\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(20, 'Inforca', 'V1', '3', 'Filosofie en AI', 'Het trein probleem', '<p>Stel je voor dat je in een treinwagon zit en op het spoor voor je zit een wissel, op spoor A staat één mens, op spoor B staan vijf mensen. Je kunt de trein niet stoppen. Wat doe je?</p>\r\n\r\n			<ol>\r\n				<li>\r\n					Je volgt spoor A.\r\n				</li>\r\n				<li>\r\n					Je volgt spoor B.\r\n				</li>\r\n				<li>\r\n					Je maakt geen keuze.\r\n				</li>\r\n			</ol>\r\n\r\n			<p>Voor de meeste mensen is dit een makkelijke keuze, wanneer je het (mensen)leven waardeert zal je willen dat zo min mogelijk mensen dood gaan. Volgens de gevolgenethiek van Bentham en Mill zou je dus spoor A volgen en de vijf mensen redden.</p>\r\n\r\n			<p>Er zijn meerdere varianten van dit denk-experiment, wat nou als er anderen mensen en aantallen gebruikt worden? Wat zou je kiezen als je moest kiezen tussen:</p>\r\n\r\n			<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							vijf mensen\r\n						</li>\r\n						<li>\r\n							zes mensen\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							een jong kind\r\n						</li>\r\n						<li>\r\n							5 gepensioneerden\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Koning Willem-Alexander\r\n						</li>\r\n						<li>\r\n							Een geschiedenis student\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Een natuurkunde professor\r\n						</li>\r\n						<li>\r\n							Een ICT professor\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Jouw ouders\r\n						</li>\r\n						<li>\r\n							5 onschuldige mensen\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>\r\n\r\n			<p>Zoals je waarschijnlijk al hebt gemerkt zijn sommige keuzes makkelijker dan de andere. De vraag is natuurlijk wat dit te maken heeft met programmeren.</p>\r\n\r\n			<p>Stel, Elon Musk is een grote fan van jouw programma\'s en neemt jou aan als een developer voor de zelfrijdende Tesla auto\'s. Hoewel het doel van een Tesla is om menselijke fouten te vermijden zijn sommige fouten onvermijdelijk. Als een Tesla rond aan het rijden is met een familie die net terugkomt van Disneyland gebeurt het volgende: twee straten voordat ze thuiskomen steekt een groep kinderen van groep 4 over. De Tesla kan nu of:</p>\r\n\r\n			<ol>\r\n				<li>\r\n					Tegen een boom aan botsen en het leven van de familie riskeren en de kinderen van groep 4 redden.\r\n				</li>\r\n				<li>\r\n					Proberen uit te wijken en riskeren om tegen de kinderen te botsen.\r\n				</li>\r\n			</ol>\r\n\r\n			<p>Een computer is niet in staat om dit probleem op te lossen. Wat moet jij als programmeur hier aan doen? Als mens heb je een set normen en waarden, regels die jou zijn aangeleerd vanaf dat je geboren bent. Je mag bijvoorbeeld niet zomaar stelen of liegen. Een algoritme heeft dat niet. Wanneer een computer moet bepalen wie het moet aanrijden denkt het niet aan interpersoonlijke relaties, het denkt niet aan de waarde die mensen hebben in de samenleving, dat is jouw taak.</p>\r\n\r\n			<p>Dus, je krijgt nu de onmogelijke taak, je moet waardes geven aan mensen. Hoe kun je dat doen? Sommige mensen zullen claimen dat alle mensen gelijk aan elkaar staan, dat is geen slecht begin. We beginnen we met de regel:</p>\r\n\r\n			<p>-Probeer zo weinig mogelijk mensen te verwonden.</p>\r\n\r\n			<p>We hebben natuurlijk meer regels nodig, want soms moet je een keuze maken waarbij evenveel mensen bij keuze A of B benadeeld worden. We kunnen bijvoorbeeld zeggen dat mensen boven de 68 jaar minder meetellen. Ze contribueren tenslotte minder aan een maatschappij. Dus:</p>\r\n\r\n			<p>-Mensen boven de 68 jaar worden niet geprioriteerd.</p>\r\n\r\n			<p>Maar, als we mensen zouden prioriteren gebaseerd op hun nuttigheid in de maatschappij, moeten we dan de werklozen en drugsverslaafden ook minder meetellen? Het volgt dezelfde regel, dus:</p>\r\n\r\n			<p>-Mensen krijgen een andere telling gebaseerd op hun contributie in de maatschappij.</p>\r\n\r\n			<p>Zo kun je natuurlijk doorgaan, begin met regels op te stellen en ga door totdat je een heel regelboek hebt bedacht voor jouw Tesla. Nu is het tijd om het in de praktijk uit te testen. Laten we hiervoor de A en B vragen nemen die eerder zijn gesteld. Wat zou de Tesla volgens jou moeten kiezen voor het beste resultaat?</p>\r\n\r\n			<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							vijf mensen\r\n						</li>\r\n						<li>\r\n							zes mensen\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							een jong kind\r\n						</li>\r\n						<li>\r\n							5 gepensioneerden\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Koning Willem-Alexander\r\n						</li>\r\n						<li>\r\n							Een geschiedenis student\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Een natuurkunde professor\r\n						</li>\r\n						<li>\r\n							Een ICT professor\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Jouw ouders\r\n						</li>\r\n						<li>\r\n							5 onschuldige mensen\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>\r\n\r\n			<p>Misschien heb je het al opgemerkt, maar nu ben je niks anders aan het doen dan het opstellen van waarden aan mensen gebaseerd op verschillende eigenschappen.</p>', NULL, NULL),
(21, 'Inforca', 'V1', '4', 'Filosofie en AI', 'Informatica en de maatschappij', '<p>\r\n				Je hebt nu gezien dat ook bij informatica keuzes gemaakt moeten worden die een invloed hebben op de maatschappij. Deze paragraaf gaan we verder met dit onderwerp aan de hand van een paar voorbeelden.\r\n			</p>\r\n			<p>\r\n				Het internet heeft de wereld flink veranderd en is mogelijk geweest door de vele ontwikkelingen op het gebied van informatica. Waar voorheen mensen nog zaken moesten opzoeken in boeken of iemand moesten bellen is er vandaag het internet. Het zorgt ervoor dat je makkelijker met mensen kunt communiceren en snel iets kunt opzoeken.\r\n			</p>\r\n			<p>\r\n				Social media hebben ook een grote invloed op de maatschappij. Je kunt nu zien waar iemand vorige week geweest is, hoe zijn laatste vakantie was of wat er nu actueel is. Aan een kant zorgt het ervoor dat mensen beter met elkaar verbonden zijn en informatie meer mensen kan bereiken. Aan de andere kant raken er mensen verslaafd aan of worden er depresief door en ook privacy heeft er flink onder te leiden. De cultuur is ook veranderd door sociale media. Sommige mensen maken bijvoorbeeld een foto en delen deze online als ze ergen heen gaan of ze delen verhalen over wat ze hebben meegemaakt met miljarden mensen. Sociale media kan ook gebruikt worden om jouw mening te delen en actie te voeren, denk bijvoorbeeld aan de \'me too\' beweging.\r\n			</p>\r\n			<p>\r\n				Je ziet dat informatica grote invloed kan hebben op de maatschappij en dat dit zowel goed als slecht kan zijn. Het is dus belangrijk om goed na te denken over wat de gevolgen kunnen zijn van ontwikkelingen waar jij misschien wel aan gaat meewerken.\r\n			</p>', '<ol>\r\n				<li>\r\n					Wat vind je zelf van de invloed van informatica op de cultuur?\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					Eigen antwoord\r\n				</li>\r\n			</ol>');
INSERT INTO `theorie` (`theory_id`, `school`, `hoofdstuk`, `paragraaf`, `hoofdstuk_naam`, `paragraaf_naam`, `main`, `questions`, `answers`) VALUES
(22, 'Inforca', 'V1', '5', 'Filosofie en AI', 'Kunstmatige intelligentie', '<p>Kunstmatige intelligentie is een wetenschappelijk veld waarin het creëren en gebruik van software dat beslissingen kan maken wordt besproken. Je hebt vast wel van films zoals The Matrix en Terminator gehoord, maar hoe heeft dit met informatica en met jou te maken? In deze paragraaf ga je kennismaken met AI en de basis ervan leren. AI brengt veel filosofische met zich mee en is een snel veranderd veld.</p>\r\n\r\n			<p>AI wordt vaak verdeeld in twee soorten, \"strong\" AI en \"weak\" AI.</p>\r\n\r\n			<p>Weak AI</p>\r\n\r\n			<p>Weak AI bestaat al in onze maatschappij, een Tesla analyseert wat er om zich heen is en probeert niet ergens tegen te botsen, het programma is gemaakt om de de auto te besturen en het kan niks anders. Dit is gebaseerd op technologieën zoals machine learning. Een weak AI is dus een AI met maar één doel. Wanneer je de opdracht geeft aan een weak AI om zo veel mogelijk ijsjes te maken kan het alle mensen vermoorden, veranderen naar een pasta en zo vlees ijsjes maken. Het heeft dus wel duidelijke regels nodig! Deze regels worden verwerkt in een score systeem, des te beter het resultaat, des te meer punten. Een AI kan hiermee getraind worden en zich zo goed mogelijk te \'gedragen\'.</p>\r\n\r\n			<p>In onze samenleving wordt weak AI toegepast op verschillende industrieën, omdat een weak AI sneller en efficiënter is dan een mens, kan het gemakkelijk simpele taken en banen vervangen. Dit heeft gevolgen voor allerlei industrieën De mensen die hun banen verliezen zijn vaak niet in staat om een nieuwe opleiding te gaan volgen. Het kan resulteren in massale werkloosheid en daardoor een economische of sociale crisis. Het kan er ook voor zorgen dat de mens niet meer of minder hoeft te werken en meer vakantie heeft.</p>\r\n\r\n			<p>Strong AI</p>\r\n\r\n			<p>Strong AI bestaat nog niet voor ons, maar in theorie zal het een programma zijn dat de volledig het diepte van menselijk begrip en logica kan volgen, waaronder dus ook emoties. Het verschil tussen deze vorm van AI en een mens is dat de AI veranderingen kan aanbrengen in zijn code. Een mens doet miljoenen jaren erover om zijn brein significant te verbeteren, een computer kan makkelijk een nieuw cpu krijgen en nog sneller \'denken\'.</p>\r\n\r\n			<p>\r\n				Een korte uitleg van de werking van AI\r\n			</p>\r\n\r\n			<p>\r\n				AI is een veld met daarin meerdere subvelden, zo valt machine learning er ook onder en onder machine learning valt deep learning. Machine learning wordt gebruikt om data te voorspellen door het kunnen maken van een formule dat zo accuraat mogelijk verschillende waardes benaderd. Deze ingevoerde data kan bijvoorbeeld een lijst van cijfers zijn van een leerling waarmee zijn volgende cijfer voorspelt kan worden.\r\n			</p>\r\n\r\n			<p>\r\n				Deep learning gaat nog een stap verder, hierbij worden modellen (programma\'s) gemaakt die imiteren wat in de hersenen gebeurt bij het maken van keuzes. Zo\'n model, een neural network genoemd begint met verschillende waardes die aangeven hoe zwaar een waarde vanuit de gegeven data meegeteld moet worden in een soort grote formule. Het model levert dan een waarde als resultaat, dit kan bijvoorbeeld een percentage zijn dat aangeeft hoe zeker het is dat een bepaald object getoond is of een getal dat aangeeft wat een student als cijfer gaat halen. Het gaat dan steeds meer data door en corrigeert zichzelf waardoor het steeds zijn gewichten, de waardes die bepalen hoeveel iets meetelt in de \'formule\' kan verbeteren.\r\n			</p>\r\n\r\n			<p>\r\n				Een simpel voorbeeld van zo\'n neural network is een programma dat \'geleerd\' heeft te voorspellen of in een foto een kat of hond zichtbaar is. Een neural network is dus een programma dat probeert een waarde te voorspellen, dit kan een getal zijn (bijvoorbeeld een cijfer voor een toets) of een categorie (bijvoorbeeld hond of kat).\r\n			</p>\r\n\r\n			<p>\r\n				Misschien denk je nu dat AI de oplossing is voor alle problemen, maar dat is het zeker niet. AI is goed voor het voorspellen van waardes, maar voor veel zaken zijn ze vaak niet nodig. Het kost ook vaak veel moeite om een AI te ontwikkelen en het is niet altijd efficient om een AI te gebruiken. Je gaat bijvoorbeeld geen AI maken om een .pdf om te zetten naar een .docx. Het zou wel handig kunnen zijn voor het voorspellen of een student een studie gaat halen en misschien aan de hand daarvan bijles te regelen. Een AI is over het algemeen goed als snel en vaak een keuze of voorspelling gemaakt moet worden.\r\n			</p>', '<ol class=\"MLquestionAlt2\">\r\n				<li>\r\n					Geef bij de volgende problemen aan of deze geschikt zijn om opgelost te worden met AI.\r\n					<ol>\r\n						<li>Het automatisch dimmen van lichten aan de hand van de lichtintensiteit.</li>\r\n						<li>Het voorspellen hoeveel persoon veganist zullen zijn in 2030.</li>\r\n						<li>Voorspellen of een foto een kat of hond bevat voor 5000000 foto\'s.</li>\r\n						<li>Het bepalen van de locatie van een overvaller door de politie aan de hand van zijn geschiedenis.</li>\r\n					</ol>\r\n				</li>\r\n\r\n				<li>\r\n					De volgende vragen hebben geen concrete antwoorden, ze zijn reflecties van wie je bent en hoe je denkt. De antwoorden hieronder zijn dus maar voorbeelden. Probeer het standpunt van jouw antwoord te nemen en het te discussiëren met iemand met een verschillend standpunt.\r\n\r\n					<ol>\r\n						<li>\r\n							Wat is een utopia die zich kan voldoen door AI?\r\n						</li>\r\n						<li>\r\n							Wat is een dystopia die zich kan voldoen door AI?\r\n						</li>\r\n						<li>\r\n							Hoe moet je AI controleren?\r\n						</li>\r\n						<li>\r\n							Vanaf wanneer is AI gelijkwaardig aan een mens?\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestionAlt2\">\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							AI is hiervoor overbodig en dus niet erg geschikt.\r\n						</li>\r\n						<li>\r\n							Dit is een voorspelling die niet vaak plaats zal vinden en het maken van AI is waarschijnlijk niet de moeite waard, dit kan beter met een \'handmatige\' voorspelling worden gedaan.\r\n						</li>\r\n						<li>\r\n							Een AI is hiervoor geschikt, het gaat namelijk om een voorspelling die vaak gedaan moet worden. Het zou heel veel tijd kosten voor een mens om elke foto na te gaan.\r\n						</li>\r\n						<li>\r\n							Een AI is hiervoor geschikt, want het gaat om lastige voorspellingen die vaak gedaan moeten worden. Een dief zal zich namelijk (kunnen) blijven voorplaatsen en er zijn best veel dieven. De AI is dus nuttig en kan best moeite waard zijn.\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							In een wereld waarin de mensheid succesvol AI leert te controleren zal AI wetenschappelijke velden zoals natuurkunde en wiskunde ondersteunen of zelfs overnemen, hierdoor zal de kwaliteit van menselijk leven omhoog gaan.\r\n						</li>\r\n						<li>\r\n							In een wereld waarin de mensheid AI heeft gemaakt zonder het te kunnen controleren zal de AI de mensheid kunnen manipuleren tot het punt waarbij we allemaal moeten buigen aan een AI overlord. Niet een onbekend probleem.\r\n						</li>\r\n						<li>\r\n							Dus, de sleutel tot een AI utopia is het controleren van de AI. Hoe kunnen we dit doen? Volgens de populaire science fiction schrijver \"Isaac Asimov\" kan je door middel van drie wetten een AI controleren.\r\n\r\n							Een robot mag een mens geen letsel toebrengen, noch, door passief te blijven, een mens letsel laten overkomen.\r\n\r\n							Een robot moet de door mensen gegeven orders gehoorzamen behalve wanneer die orders in strijd zijn met de Eerste Wet.\r\n\r\n							Een robot moet zichzelf beschermen zolang of voor zover dat niet met de Eerste of Tweede Wet in strijd is.\r\n\r\n							Hoewel deze wetten de grootste problemen oplossen, heeft het toch loopholes. Zo kan een AI een de politiek in gaan, het kan nog steeds mensen besturen zonder dat de drie wetten worden verbroken.\r\n						</li>\r\n						<li>\r\n							In het geval van strong AI kan een robot zelfbewustzijn claimen, maar waar kunnen we de lijn van zelfbewustzijn neerzetten?\r\n\r\n							In het gedachte-experiment van Frank Jackson wordt de volgende situatie beschreven.\r\n\r\n							Mary is meisje dat is opgegroeid in een zwart en witte kamer. Er is een TV in zwart-wit. Mary kan zichzelf niet zien. Ze besteedt haar hele leven om kleuren te bestuderen, wat is blauw, wat is rood etc. Ze ontdekt de golflengtes dat de menselijke oog kan innemen en hoe de brein dit opneemt. Op haar 18e verjaardag krijgt ze als cadeau een rode appel, leert Mary nu iets nieuws?\r\n\r\n							De vraag achter dit gedachte-experiment is of er een verschil is tussen het leren van iets en het ervaren van iets. Dit is ook appliceerbaar op het idee van bewustzijn. Als een strong AI (we noemen hem Karel) alles leert over het brein en het brein kan simuleren, heeft Karel dan bewustzijn bereikt? En zo ja, is hij dan gelijkwaardig aan een mens?\r\n						</li>\r\n\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(23, 'Inforca', 'V1', '6', 'Filosofie en AI', 'Machine learning voorbeeld', '<p>\r\n        In deze paragraaf ga je leren een simpel machine learning programma te maken. We zullen het zo eenvoudig mogelijk houden, want het wordt al snel erg lastig en zou niet meer geschikt zijn voor de middelbare school.\r\n			</p>\r\n\r\n			<p>\r\n        Voordat we kunnen beginnen is het nodig om anaconda geïnstalleerd te hebben (zie hoofdstuk 3 paragraaf 2). We zullen alle code gaan schrijven in jupyter notebook. Het notebook voor deze paragraaf is te krijgen via <a href=\"../../../downloads/Machine learning.ipynb\" download>deze link</a> en de dataset die erbij hoort via <a href=\"../../../downloads/dataset.csv\" download>deze link</a>. Het notebook geeft een voorbeeld van lineaire regressie, dat is het opstellen van een rechte lijn aan de hand van een aantal gegeven waardes. Het lees prijzen in uit een soort excel bestand waar een huis met een bepaalde grote bij hoort. Het model gaat vervolgens uitrekenen welke rechte lijn het dichtbij alle gegeven punten ligt. Je zou dan kunnen voorspellen welke waarde bij een gegeven prijs of grote van een huis past door het af te lezen uit de grafiek.\r\n			</p>\r\n\r\n			<p>\r\n        Je kunt dezelfde code vrij gemakkelijk aanpassen voor een eigen dataset. De dataset moet dan wel voldoen aan een lineaire relatie, oftewel er moet een rechte lijn zijn die dicht bij de waardes in de dataset moet kunnen komen. Om het model aan te passen hoef je dan alleen maar de variabele \'data\' gelijk te zetten jouw dataset als je deze een andere naam wilt geven dan \'dataset.csv\'. Let op dat het wel een .csv (comma seperated values) bestand moet zijn, je kunt ook een excel bestand omzetten naar een csv bestand. Je moet dan de waardes voor de x- en y-as kiezen en de naam ervan veranderen op de plekken waar nu x en y staat, denk ook de namen voor de assen in de grafieken. Vervolgens moet je dan nog de waardes voor de coëfficiënt van const en jouw gekozen variabele aflezen en deze invoeren in de formule yhat (yhat betekent de voorspelde y waarde).\r\n			</p>', '<ol>\r\n        <li>\r\n          Wat is een dataset?\r\n        </li>\r\n        <li>\r\n          Wat is lineaire regressie? (niet te ingewikkeld denken)\r\n        </li>\r\n        <li>\r\n          Hoeveel zou een huis met grote 800 waarschijnlijk kosten?\r\n        </li>\r\n        <li>\r\n          Hoe groot zal een huis met als prijs 400000 waarschijnlijk zijn?\r\n        </li>\r\n        <li>\r\n          Dan nu een uitdaging. Maak zelf een dataset (verzin hiervoor wat waardes of zoek er een op) en pas het model aan zodat het werkt voor jouw nieuwe data.\r\n        </li>\r\n      </ol>', '<ol>\r\n        <li>\r\n          Een aantal gegeven waardes die een bestand staan.\r\n        </li>\r\n        <li>\r\n          Lineaire regressie is een methode om een rechte lijn op te stellen dat zo dicht mogelijk langs alle gegeven punten komt.\r\n        </li>\r\n        <li>\r\n          300000\r\n        </li>\r\n        <li>\r\n          1300\r\n        </li>\r\n        <li>\r\n          Tip: pas regel 9 (optioneel), 12, 13, 17, 18, 32 (blok 2 regel 3), 34 en 35 aan. Het precieze antwoord ligt af van hoe je het hebt aangepakt.\r\n        </li>\r\n      </ol>'),
(24, 'Inforca', 'B1', '1', 'Web development', 'Introductie', '<p>\r\n				In dit hoofdstuk ga je leren hoe je een (eenvoudige) website kunt maken. Hiervoor leer je HTML en CSS. HTML wordt voornamelijk gebruikt voor de inhoud en structuur van de pagina en CSS voor de opmaak (het goed uit laten zien van de site).\r\n			</p>\r\n			<p>\r\n				Er zijn heel veel verschillende technologieën en talen die gebruikt kunnen worden voor websites. Ze worden onderverdeeld tussen front-end en back-end. Front-end is wat de gebruiker ziet of aan de kant van de gebruiker werkt en back-end is wat op de server wordt gebruikt. In dit hoofdstuk richten we ons tot front-end.\r\n			</p>\r\n			<p>\r\n				Een webpagina heeft 3 \'hoofdonderdelen\': een head, body en footer. Head is meestal de navigatiebalk, body is de \'inhoud\' en de footer is meestal een balk onderaan met algemene info. Het meeste zul je dus bezig zijn met de body. Hierin heb je dingen zoals tekstblokken en afbeeldingen.\r\n			</p>\r\n			<p>\r\n				De code van een echte website wordt opgeslagen op een server, dit is eigenlijk een gewone computer, maar dan zonder dingen zoals een beeldscherm. Deze staan vaak met grote aantallen bij elkaar. Als iemand naar de website toe gaat, dan stuurt de computer eigenlijk een bericht naar die server waarin het vraagt voor de bestanden. De server stuurt de bestanden en de browser (het programma waarmee je dit leest) zet de code in die bestanden om in iets dat je kunt zien, zoals deze pagina.\r\n			</p>\r\n			<p>\r\n				Om te kijken hoe een site in elkaar zit, kun je de developer modus gebruiken. Dit doe je door in de browser op F12 te klikken. Hiermee kun je zien welke HTML en CSS gebruikt worden en dus hoe de website is opgebouwd. Met de inspector kun je de structuur van de pagina zien. De onderdelen kun je \'uit klappen\' via het pijltje ervoor. Met de knop links boven die eruit ziet als een pagina met een cursor kun je delen van de site aanklikken en hun structuur te zien krijgen in de inspector.\r\n			</p>', '<ol>\r\n				<li>\r\n					Bekijk de structuur van deze pagina (met F12) en schrijf 5 onderdelen op. Doe dit in het formaat: &lt;html onderdeel> inhoud. Je kunt de html onderdelen herkennen door de haken < >, wat ze precies zijn leer je nog. Hetzelfde soort element mag herhaald worden, maar dan moet de inhoud anders zijn.\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					1) Er zijn meerdere antwoorden mogelijk, enkele hiervan zijn:\r\n\r\n					<ol>\r\n						<li>\r\n							&lt;body> waar alles in staat\r\n						</li>\r\n						<li>\r\n							&lt;footer> met contact informatie\r\n						</li>\r\n						<li>\r\n							&lt;header> met navigatie\r\n						</li>\r\n						<li>\r\n							&lt;div> met de inhoud van de pagina\r\n						</li>\r\n						<li>\r\n							&lt;div> met de blauwe balken\r\n						</li>\r\n						<li>\r\n							&lt;p> met tekst erin\r\n						</li>\r\n						<li>\r\n							&lt;div> met vragen erin\r\n						</li>\r\n					</ol>\r\n\r\n				</li>\r\n\r\n			</ol>'),
(25, 'Inforca', 'B1', '2', 'Web development', 'De basis van HTML', '<p>\r\n				Zoals eerder genoemd bestaat een webpagina vaak uit 3 belangrijke onderdelen: de header, de body en de footer. Een HTML bestand zonder inhoud ziet er dan als volgt uit:\r\n			</p>\r\n\r\n<pre><code>&lt;html>\r\n\r\n&lt;head>\r\n&lt;/head>\r\n\r\n&lt;header>\r\n&lt;/header>\r\n\r\n&lt;body>\r\n&lt;/body>\r\n\r\n&lt;footer>\r\n&lt;/footer>\r\n\r\n&lt;/html></code></pre>\r\n\r\n			<p>\r\n				Het valt misschien op dat er ook &lt;head> bij staat, hierin zet je normaal algemene dingen die de pagina nodig heeft om te werken, al wordt dit tegenwoordig ook vaak in de &lt;footer> gezet zodat eerst de inhoud van de pagina geladen wordt en daarna pas de rest, dan lijkt de pagina sneller te zijn. Zo kan er verwezen worden naar een css bestand of een andere code.\r\n			</p>\r\n			<p>\r\n				Je ziet ook dat onderdelen beginnen met &lt;TAG> en eindigen met &lt;TAG/>, dit komt bij bijna elk element (onderdeel) in HTML voor. Tussen deze \'tags\' kun je de inhoud zetten. In plaats van de tekst \"TAG\" komt er natuurlijk de naam van het element.\r\n			</p>\r\n			<p>\r\n				Deze \'tags\' vormen samen de webpagina. Een website is dus eigenlijk een verzameling van blokken met eventueel opmaak (css) en logica.\r\n			</p>\r\n			<p>\r\n				Een pagina met als inhoud \"Hello HTML\" zou er als volgt uit kunnen zien.\r\n			</p>\r\n\r\n<pre><code>&lt;html>\r\n&lt;head>\r\n&lt;/head>\r\n\r\n&lt;header>\r\n&lt;/header>\r\n\r\n&lt;body>\r\nHello HTML\r\n&lt;/body>\r\n\r\n&lt;footer>\r\n&lt;/footer>\r\n&lt;/html></code></pre>\r\n\r\n			<p>\r\n				Je zou in dit geval head, header en footer weg kunnen laten, ze worden hier toch niet gebruikt.\r\n			</p>\r\n			<p>\r\n				Stel je wilt gewoon tekst hebben, dan kun je &lt;p> gebruiken. De p staat voor paragraph. Of om een \'blok\' te defineren kun je &lt;div> gebruiken, dit staat voor divisie. Dit kun je later met css bijvoorbeeld een achtergrondkleur geven.\r\n			</p>\r\n			<p>\r\n				Als je HTML gaat schrijven kan dit in word, maar het is beter om een gespecialiseerd programma voor te gebruiken. Zelf (als maker van deze website) gebruik ik atom. Dit is een gratis tekstbewerker waar je zelf veel aan kunt aanpassen en toevoegen. Je kunt het vinden op <a href=\"https://atom.io/\">https://atom.io/</a>.\r\n			</p>\r\n			<p>\r\n				 Je kunt een bestand dan opslaan met de extensie HTML (dus je eindigt de naam van het bestand met .html). Dit kun je dan openen met de browser. Ik adviseer om als browser geen gebruik te maken van internet explorer, aangezien dit slechte ondersteuning heeft. Als je meer informatie wilt hebben over browsersupport dan kun je kijken op <a href=\"https://caniuse.com/\">https://caniuse.com/</a>, hier staan wel veel dingen op die je nog niet kent.\r\n			</p>', '<ol>\r\n				<li>\r\n					Maak een pagina met daarin minimaal een paragraaf en een divisie.\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					<pre>\r\n						<code>\r\n&lt;html>\r\n&lt;head>\r\n&lt;/head>\r\n\r\n&lt;header>\r\n&lt;/header>\r\n\r\n&lt;body>\r\n&lt;p> INHOUD &lt;/p>\r\n&lt;div> INHOUD &lt;/div>\r\n&lt;/body>\r\n\r\n&lt;footer>\r\n&lt;/footer>\r\n&lt;/html>\r\n\r\n						</code>\r\n					</pre>\r\n				</li>\r\n\r\n			</ol>'),
(26, 'Inforca', 'B1', '3', 'Web development', 'HTML deel 2', '<p>Stel je voor dat je in een treinwagon zit en op het spoor voor je zit een wissel, op spoor A staat één mens, op spoor B staan vijf mensen. Je kunt de trein niet stoppen. Wat doe je?</p>\r\n\r\n			<ol>\r\n				<li>\r\n					Je volgt spoor A.\r\n				</li>\r\n				<li>\r\n					Je volgt spoor B.\r\n				</li>\r\n				<li>\r\n					Je maakt geen keuze.\r\n				</li>\r\n			</ol>\r\n\r\n			<p>Voor de meeste mensen is dit een makkelijke keuze, wanneer je het (mensen)leven waardeert zal je willen dat zo min mogelijk mensen dood gaan. Volgens de gevolgenethiek van Bentham en Mill zou je dus spoor A volgen en de vijf mensen redden.</p>\r\n\r\n			<p>Er zijn meerdere varianten van dit denk-experiment, wat nou als er anderen mensen en aantallen gebruikt worden? Wat zou je kiezen als je moest kiezen tussen:</p>\r\n\r\n			<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							vijf mensen\r\n						</li>\r\n						<li>\r\n							zes mensen\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							een jong kind\r\n						</li>\r\n						<li>\r\n							5 gepensioneerden\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Koning Willem-Alexander\r\n						</li>\r\n						<li>\r\n							Een geschiedenis student\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Een natuurkunde professor\r\n						</li>\r\n						<li>\r\n							Een ICT professor\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Jouw ouders\r\n						</li>\r\n						<li>\r\n							5 onschuldige mensen\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>\r\n\r\n			<p>Zoals je waarschijnlijk al hebt gemerkt zijn sommige keuzes makkelijker dan de andere. De vraag is natuurlijk wat dit te maken heeft met programmeren.</p>\r\n\r\n			<p>Stel, Elon Musk is een grote fan van jouw programma\'s en neemt jou aan als een developer voor de zelfrijdende Tesla auto\'s. Hoewel het doel van een Tesla is om menselijke fouten te vermijden zijn sommige fouten onvermijdelijk. Als een Tesla rond aan het rijden is met een familie die net terugkomt van Disneyland gebeurt het volgende: twee straten voordat ze thuiskomen steekt een groep kinderen van groep 4 over. De Tesla kan nu of:</p>\r\n\r\n			<ol>\r\n				<li>\r\n					Tegen een boom aan botsen en het leven van de familie riskeren en de kinderen van groep 4 redden.\r\n				</li>\r\n				<li>\r\n					Proberen uit te wijken en riskeren om tegen de kinderen te botsen.\r\n				</li>\r\n			</ol>\r\n\r\n			<p>Een computer is niet in staat om dit probleem op te lossen. Wat moet jij als programmeur hier aan doen? Als mens heb je een set normen en waarden, regels die jou zijn aangeleerd vanaf dat je geboren bent. Je mag bijvoorbeeld niet zomaar stelen of liegen. Een algoritme heeft dat niet. Wanneer een computer moet bepalen wie het moet aanrijden denkt het niet aan interpersoonlijke relaties, het denkt niet aan de waarde die mensen hebben in de samenleving, dat is jouw taak.</p>\r\n\r\n			<p>Dus, je krijgt nu de onmogelijke taak, je moet waardes geven aan mensen. Hoe kun je dat doen? Sommige mensen zullen claimen dat alle mensen gelijk aan elkaar staan, dat is geen slecht begin. We beginnen we met de regel:</p>\r\n\r\n			<p>-Probeer zo weinig mogelijk mensen te verwonden.</p>\r\n\r\n			<p>We hebben natuurlijk meer regels nodig, want soms moet je een keuze maken waarbij evenveel mensen bij keuze A of B benadeeld worden. We kunnen bijvoorbeeld zeggen dat mensen boven de 68 jaar minder meetellen. Ze contribueren tenslotte minder aan een maatschappij. Dus:</p>\r\n\r\n			<p>-Mensen boven de 68 jaar worden niet geprioriteerd.</p>\r\n\r\n			<p>Maar, als we mensen zouden prioriteren gebaseerd op hun nuttigheid in de maatschappij, moeten we dan de werklozen en drugsverslaafden ook minder meetellen? Het volgt dezelfde regel, dus:</p>\r\n\r\n			<p>-Mensen krijgen een andere telling gebaseerd op hun contributie in de maatschappij.</p>\r\n\r\n			<p>Zo kun je natuurlijk doorgaan, begin met regels op te stellen en ga door totdat je een heel regelboek hebt bedacht voor jouw Tesla. Nu is het tijd om het in de praktijk uit te testen. Laten we hiervoor de A en B vragen nemen die eerder zijn gesteld. Wat zou de Tesla volgens jou moeten kiezen voor het beste resultaat?</p>\r\n\r\n			<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							vijf mensen\r\n						</li>\r\n						<li>\r\n							zes mensen\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							een jong kind\r\n						</li>\r\n						<li>\r\n							5 gepensioneerden\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Koning Willem-Alexander\r\n						</li>\r\n						<li>\r\n							Een geschiedenis student\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Een natuurkunde professor\r\n						</li>\r\n						<li>\r\n							Een ICT professor\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Jouw ouders\r\n						</li>\r\n						<li>\r\n							5 onschuldige mensen\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>\r\n\r\n			<p>Misschien heb je het al opgemerkt, maar nu ben je niks anders aan het doen dan het opstellen van waarden aan mensen gebaseerd op verschillende eigenschappen.</p>', '<ol>\r\n				<li>\r\n					Maak een pagina met minimaal: 1 link, 1 afbeelding en 1 lijst. Gebruik hiervoor de HTML die je voor de vorige paragraaf hebt geschreven.\r\n				</li>\r\n			</ol>', NULL),
(27, 'Inforca', 'B1', '4', 'Web development', 'De basis van CSS', '<p>\r\n				In deze paragraaf ga je de basis van CSS (cascading style sheets) leren. CSS zorgt voor de opmaak van de pagina, dus hoe het eruit ziet. Het is het beste om een apart css bestand aan te maken die bij de html gaat.\r\n			</p>\r\n			<p>\r\n				Om te leren hoe je CSS kunt gebruiken is het het makkelijkst om in HTML een paar divs te gebruiken. Bij de CSS verwijs je terug naar die divs. Om ze apart \'aan te spreken\' geven we de &lt;div> een id, dit is naam die alleen voor dat element wordt gebruikt. Een voorbeeld is: &lt;div id=\"div1\">&lt;/div>. Om naar de CSS te verwijzen in het HTML-bestand (zodat de CSS geladen wordt) kun je in de &lt;head> &lt;link rel=\"stylesheet\" href=\"test.css\"> te plaatsen. Als nu het HTML bestand geladen wordt, wordt ook de CSS geladen en toegepast. Het CSS bestand noemen we test.css.\r\n			</p>\r\n			<p>\r\n				Om in de CSS naar een id te verwijzen (van de HTML) gebruik je # en voor een class . (dus een punt).Een class gebruik je als een element vaker op een pagina hebt en het steeds dezelfde stijl wilt geven. In de HTML kun je dan i.p.v. id=\"\" class=\"\" gebruiken.\r\n			</p>\r\n			<p>\r\n				In de CSS gaan we nu de eerste div aanpassen. Het is momenteel nog niet te zien (als er geen tekst in staat), dit kunnen we veranderen door de volgende code als CSS te gebruiken:\r\n			</p>\r\n			<p>\r\n<pre><code>#div1\r\n	Background-color: red;\r\n	Width: 200px;\r\n	Height: 200px;\r\n</code></pre>\r\n			</p>\r\n			<p>\r\n				Dit zal de div een rode (achtergrond) kleur geven en een breedte en hoogte van 200px. Het is ook mogelijk om een kleur preciezer in te stellen met RGB of hex waarden een paar voorbeelden hiervan zijn te vinden op <a href=\"https://www.w3schools.com/css/css_colors.asp\">https://www.w3schools.com/css/css_colors.asp</a>.\r\n			  Het kan ook handig zijn om gebruik te maken van %, em en rem. % gebruikt een percentage van het element waar het onder valt en \'em\' kijkt naar de grote van de tekst. Rem staat voor root em, het gebruikt dus de tekstgrote van de \'root\', oftewel het HTML element zelf.\r\n			</p>\r\n			<p>\r\n				Er zijn dus meerdere manieren om maten aan te duiden, px is een manier, maar dit werkt niet goed als je een site zou willen maken die zich aanpast op verschillende apparaten. Hiervoor zijn em, % en vw beter geschikt. Voor meer informatie hierover kun je op <a href=\"https://www.w3schools.com/cssref/css_units.asp\">https://www.w3schools.com/cssref/css_units.asp</a>.\r\n			</p>\r\n			<p>\r\n				Stel je hebt wat tekst in de div staan en vindt het iets te klein, dan kun je de tekst vergroten met behulp van font-size zoals in de volgende code:\r\n			</p>\r\n			<p>\r\n<pre><code>#div\r\n	Background-color: red;\r\n	Width: 200px;\r\n	Height: 200px;\r\n	Font-size: 200%;\r\n</code></pre>\r\n			</p>\r\n			<p>\r\n				Om een afgeronde rand aan de &lt;div> te krijgen kun je gebruik maken van border-radius zoals in het voorbeeld:\r\n			</p>\r\n			<p>\r\n<pre><code>#div\r\n	Background-color: red;\r\n	Width: 200px;\r\n	Height: 200px;\r\n	Font-size: 200%;\r\n	Border-radius: 6px;\r\n</code></pre>', '<ol>\r\n				<li>\r\n					Ga verder met de pagina van de vorige paragraaf. Maak nu de &lt;div> zo breed als de pagina en zet er tekst in, verander de kleur van de link, voeg een rand toe aan de &lt;img> en zet voor de &lt;li> een ander teken.\r\n				</li>\r\n			</ol>', NULL),
(28, 'Inforca', 'B1', '5', 'Web development', 'CSS deel 2', '<p>\r\n				In CSS wordt gebruik gemaakt van het box model. Dit geeft aan hoe bepaalde toevoegingen invloed hebben op het element. Je kunt het voorstellen als een doos met daarin vier lagen. Laag 1 is de inhoud, bijvoorbeeld tekst. Laag 2 is padding, dit is een opvulling om de inhoud heen, maar hoort nog bij het element. Laag 3 is de border, oftewel de rand die eromheen zit. Laag 4 is margin, oftewel de afstand tot andere elementen.\r\n			</p>\r\n			<p>\r\n				Stel je voegt een achtergrond kleur toe, dan wordt die kleur gebruikt voor het element, dus inclusief padding, maar exclusief de margin.\r\n			</p>\r\n			<p>\r\n				Padding is dus een soort opvulling, in CSS gebruik je dit als padding of padding-kant. Padding voegt het aan alle kanten toe en padding-kant voegt het aan één kant toe. Een voorbeeld is padding-left: 10%; Dit zal links (van de inhoud) het element 10% groter maken.\r\n			</p>\r\n			<p>\r\n				Border is een rand om het element. Een element met een rand die blauw is, 10 px dik en waarvan de rand solide is kan met bereikt worden met als CSS border: 10px solid blue; Voor alle mogelijkheden kun je kijken op <a href=\"https://www.w3schools.com/css/css_border.asp\">https://www.w3schools.com/css/css_border.asp</a>\r\n			</p>\r\n			<p>\r\n				Je kunt ook de opmaak veranderen door ergens overheen te gaan. Dit kan door gebruik te maken van :hover. Een voorbeeld is:\r\n			</p>\r\n			<p>\r\n<pre><code>#div1:hover\r\n	Background-color: yellow\r\n	Width: 400px\r\n</code></pre>\r\n			</p>\r\n			<p>\r\n				Als je nu met de muis erover gaat wordt de achtergrond geel en wordt het breder.\r\n			</p>', '<ol>\r\n				<li>\r\n					Ga verder met de HTML van de vorige paragraaf. Laat de <div> nu van kleur veranderen als je erover gaat met de cursor. Voeg aan de pagina een \'tegel\' toe zoals op de hoofdpagina van de theorie (de groene blokken), de kleur, tekstgrote, afronding en andere eigenschappen mag je zelf bedenken.\r\n				</li>\r\n			</ol>', NULL),
(30, 'test_school', 'H2', '2', 'YEE Logica', 'Visuele logica', 'YEE\r\n\r\n<p>\r\n				De verbanden tussen sets kunnen ook visueel worden weergeven, bijvoorbeeld in de vorm van cirkels. Stel set 1 bevat 27, 3, 8, 21 en 6. Set 2 bevat 3, 0, 20, 8 en 4.\r\n			</p>\r\n			<p>\r\n				Set 1 &cap; 2 is dan:\r\n				<img src=\"./afbeeldingen/logic2Mul.svg\" class=\"theorieImage\" />\r\n			</p>\r\n			<p>\r\n				Set 1 ∪ set 2 is dan weer te geven als:\r\n				<img src=\"./afbeeldingen/logic2Add.svg\" class=\"theorieImage\" />\r\n			</p>\r\n			<p>\r\n				Of:\r\n				<img src=\"./afbeeldingen/logic2MulCom.svg\" class=\"theorieImage\" />\r\n			</p>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>Teken set 1 ∪ set 2 inclusief de getallen</li>\r\n						<li>Teken set 1 ꓵ set 2 inclusief de getallen</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Stel set 1 bevat 1, 3, 20, 6 en 400. Set 2 bevat 1, 6, 200, 8 en 4.\r\n					<ol>\r\n						<li><img src=\"./afbeeldingen/logic2Ans1.svg\" class=\"theorieImage\" /></li>\r\n						<li><img src=\"./afbeeldingen/logic2Ans2.svg\" class=\"theorieImage\" /></li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(31, 'test_school', 'V1', '1', 'YEE Filosofie en AI', 'Wat is filosofie?', 'YEE\r\n\r\n<p>Filosofie of wijsbegeerte kan worden gezien als de studie van kennis en stelt vragen over het bestaan, rationaliteit en kennis met als doel om de persoon als een individu beter te maken.</p>\r\n\r\n			<p>Vaak zijn filosofische vragen fundamenteel en abstract, je leert filosofie vaak door zelfreflectie in plaats van experimenten. Dit betekent ook dat wijsbegeerte niet een empirische wetenschap is. Empirisme neemt aan dat kennis uit ervaring en experimenten komt, zo zijn wetenschappen zoals natuurkunde en scheikunde empirisch. Hier tegenover staat rationalisme en formele wetenschappen waarin kennis gebaseerd is op rationaliteit en logica. Wiskunde en logica vallen hieronder.</p>\r\n\r\n			<p>Filosofie en programmeren vallen beide onder de formele wetenschappen, en hebben meerdere overeenkomsten. Ze volgen bijvoorbeeld vergelijkbare denkstappen, zowel filosofie en programmeren pakken grote problemen en vraagstukken aan die je niet in een keer kan oplossen, je moet het verdelen in kleinere, begrijpelijke vragen.</p>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Deze vragen hebben geen concrete antwoorden, ze zijn reflecties van wie je bent en hoe je denkt. Probeer het standpunt van jouw antwoord te nemen en het te discussiëren met iemand met een verschillend standpunt.\r\n\r\n					<ol>\r\n						<li>Heb je vrij wil?</li>\r\n						<li>Wat is een goede daad?</li>\r\n						<li>Kan kunstmatige intelligentie bestaan?</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestionAlt2\">\r\n				<li>\r\n					Hier zijn antwoorden van verschillende filosofische stromingen:\r\n\r\n					<ol>\r\n						<li>\r\n							<ol>\r\n								<li>\r\n									Breinreductionisten (Victor Lamme): De vrije wil bestaat niet, de mens is een resultaat van chemische processen in het brein. Het zelf is een illusie.\r\n								</li>\r\n								<li>\r\n									René Descartes: Je kunt aan alles twijfelen behalve het ik. Het ik is degene die twijfelt. Het ik is een onstoffelijke geest die het lichaam bestuurt.\r\n								</li>\r\n							</ol>\r\n						</li>\r\n						<li>\r\n							<ol>\r\n								<li>\r\n									Hedonisme: Een daad is goed wanneer ik er blij van word. Genot is het belangrijkste doel in het leven en is hetgeen waar iedereen naar moet streven.\r\n								</li>\r\n								<li>\r\n									Immanuel Kant: Een daad is goed wanneer een maatschappij er beter van wordt als iedereen dit doet. Bijvoorbeeld: \"Liegen is niet een goede daad omdat een maatschappij niet kan bestaan als iedereen tegen elkaar zou liegen.\r\n								</li>\r\n								<li>\r\n									Utilitarisme (Jeremy Bentham): Het is een goede daad wanneer het resultaat positief is.\r\n								</li>\r\n							</ol>\r\n						</li>\r\n						<li>\r\n							<ol>\r\n								<li>\r\n									Ja, een AI is een brein van silicium en is in staat om veel sneller en efficiënter te werken dan een menselijk brein.\r\n								</li>\r\n								<li>\r\n									Nee, AI is een programma en bestaat uit door mens geschreven code en kan niet emoties ervaren dat centraal staat tot een mens. Een AI kan wel simuleren dat het emoties heeft zoals blijheid en verdriet maar ervaart ze niet. Dit zorgt voor een fundamentele verschil in bewustzijn.\r\n								</li>\r\n							</ol>\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(32, 'test_school', 'B1', '2', 'YEE Web development', 'De basis van HTML', 'YEE\r\n\r\n<p>\r\n				Zoals eerder genoemd bestaat een webpagina vaak uit 3 belangrijke onderdelen: de header, de body en de footer. Een HTML bestand zonder inhoud ziet er dan als volgt uit:\r\n			</p>\r\n\r\n<pre><code>&lt;html>\r\n\r\n&lt;head>\r\n&lt;/head>\r\n\r\n&lt;header>\r\n&lt;/header>\r\n\r\n&lt;body>\r\n&lt;/body>\r\n\r\n&lt;footer>\r\n&lt;/footer>\r\n\r\n&lt;/html></code></pre>\r\n\r\n			<p>\r\n				Het valt misschien op dat er ook &lt;head> bij staat, hierin zet je normaal algemene dingen die de pagina nodig heeft om te werken, al wordt dit tegenwoordig ook vaak in de &lt;footer> gezet zodat eerst de inhoud van de pagina geladen wordt en daarna pas de rest, dan lijkt de pagina sneller te zijn. Zo kan er verwezen worden naar een css bestand of een andere code.\r\n			</p>\r\n			<p>\r\n				Je ziet ook dat onderdelen beginnen met &lt;TAG> en eindigen met &lt;TAG/>, dit komt bij bijna elk element (onderdeel) in HTML voor. Tussen deze \'tags\' kun je de inhoud zetten. In plaats van de tekst \"TAG\" komt er natuurlijk de naam van het element.\r\n			</p>\r\n			<p>\r\n				Deze \'tags\' vormen samen de webpagina. Een website is dus eigenlijk een verzameling van blokken met eventueel opmaak (css) en logica.\r\n			</p>\r\n			<p>\r\n				Een pagina met als inhoud \"Hello HTML\" zou er als volgt uit kunnen zien.\r\n			</p>\r\n\r\n<pre><code>&lt;html>\r\n&lt;head>\r\n&lt;/head>\r\n\r\n&lt;header>\r\n&lt;/header>\r\n\r\n&lt;body>\r\nHello HTML\r\n&lt;/body>\r\n\r\n&lt;footer>\r\n&lt;/footer>\r\n&lt;/html></code></pre>\r\n\r\n			<p>\r\n				Je zou in dit geval head, header en footer weg kunnen laten, ze worden hier toch niet gebruikt.\r\n			</p>\r\n			<p>\r\n				Stel je wilt gewoon tekst hebben, dan kun je &lt;p> gebruiken. De p staat voor paragraph. Of om een \'blok\' te defineren kun je &lt;div> gebruiken, dit staat voor divisie. Dit kun je later met css bijvoorbeeld een achtergrondkleur geven.\r\n			</p>\r\n			<p>\r\n				Als je HTML gaat schrijven kan dit in word, maar het is beter om een gespecialiseerd programma voor te gebruiken. Zelf (als maker van deze website) gebruik ik atom. Dit is een gratis tekstbewerker waar je zelf veel aan kunt aanpassen en toevoegen. Je kunt het vinden op <a href=\"https://atom.io/\">https://atom.io/</a>.\r\n			</p>\r\n			<p>\r\n				 Je kunt een bestand dan opslaan met de extensie HTML (dus je eindigt de naam van het bestand met .html). Dit kun je dan openen met de browser. Ik adviseer om als browser geen gebruik te maken van internet explorer, aangezien dit slechte ondersteuning heeft. Als je meer informatie wilt hebben over browsersupport dan kun je kijken op <a href=\"https://caniuse.com/\">https://caniuse.com/</a>, hier staan wel veel dingen op die je nog niet kent.\r\n			</p>', '<ol>\r\n				<li>\r\n					Maak een pagina met daarin minimaal een paragraaf en een divisie.\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					<pre>\r\n						<code>\r\n&lt;html>\r\n&lt;head>\r\n&lt;/head>\r\n\r\n&lt;header>\r\n&lt;/header>\r\n\r\n&lt;body>\r\n&lt;p> INHOUD &lt;/p>\r\n&lt;div> INHOUD &lt;/div>\r\n&lt;/body>\r\n\r\n&lt;footer>\r\n&lt;/footer>\r\n&lt;/html>\r\n\r\n						</code>\r\n					</pre>\r\n				</li>\r\n\r\n			</ol>'),
(33, 'Inforca', 'H4', '1', 'Arduino', 'Elektriciteit', '<p>\r\n				Voordat we beginnen met de arduino en het programmeren ervan, gaan we eerst elektriciteit herhalen. Dit is namelijk de basis van de arduino (en eigenlijk alle computers).\r\n			</p>\r\n			<p>\r\n				Elektriciteit gaat over het verplaatsen van een elektrische lading, doormiddel van het transport van elektronen. Oftewel het bewegen van deeltjes met een negatieve lading. Deze elektronen gaan door een stroomkring, oftewel door een materiaal dat stroom geleidt (door laat) en waarin het begin en eindpunt samenvallen. Het \'stroomcircuit\' moet namelijk gesloten zijn.\r\n			</p>\r\n			<p>\r\n				Deze bewegende elektronen verplaatsen energie. Energie wordt in de natuurkunde als \'E\' weergeven en de hoeveelheid energie per seconde is \'P\', power. De hoeveelheid energie per seconde is gelijk aan een bepaald aantal bewegende elektronen maal de lading die ze hebben. De hoeveelheid bewegende elektronen wordt beschreven met de stroomsterkte, oftewel \'I\' (intensiteit). De lading wordt spanning, \'U\' genoemd. Dus P=U*I. De energie per seconde is gelijk aan de energie per groep elektronen maal het aantal groepen elektronen per seconde.\r\n			</p>\r\n			<p>\r\n				Er is ook een verband tussen de spanning en stroomsterkte en dit heeft te maken met de weerstand. De weerstand geeft aan hoe lastig de elektronen door het elektrisch circuit (de stroomkring) kunnen gaan, dit wordt gemeten in ohm. Het verband tussen spanning, stroomsterkte en weerstand is R=U/I, weerstand = spanning (energie per ampère) / stroomsterkte (het aantal ampère).\r\n			</p>\r\n			<p>\r\n				Ter samenvatting: de stroomsterkte (I) wordt weergegeven in ampère (A), de spanning (U) in volt (V) en weerstand (R) in ohm.\r\n			</p>\r\n			<p>\r\n				Het aantal ampère geeft eigenlijk het aantal coulomb per seconde weer. Een coulomb is een bepaald aantal elektronen, namelijk 6,241 506·10^18. Dit aantal werd hiervoor gebruikt als één \'groep\' elektronen.\r\n			</p>\r\n			<p>\r\n				Er zijn een paar manier om een elektrisch circuit te maken. Er bestaan twee \'hoofdstructuren\', dit zijn serie en parallel. Het is ook mogelijk om deze te combineren.\r\n			</p>\r\n			<p>\r\n				Bij serie staan de onderdelen van het circuit achter elkaar en bij parallel naast elkaar. Bij serie gaat de stroom dus over één weg en bij parallel wordt het over meerdere wegen verdeeld. In de afbeeldingen staan voorbeelden van stroomkringen en geven de pijlen de richting van de elektronen aan, er is geen spanningsbron getekend om het te versimpelen, maar deze zou overal geplaats kunnen worden.\r\n			</p>\r\n			<p>\r\n				Series\r\n				<img src=\"./afbeeldingen/serie.svg\" />\r\n			</p>\r\n			<p>\r\n				Parallel\r\n				<img src=\"./afbeeldingen/parallel.svg\" />\r\n			</p>\r\n			<p>\r\n				Bij series neemt de spanning af des te verder je door het circuit gaat, maar de stroomsterkte blijft wel gelijk.\r\n				De elektronen verliezen dus energie, maar het aantal blijft gelijk.\r\n				Bij parallel blijft de spanning in elke \'weg\' gelijk (aan het begin) en wordt de stroomsterkte \'gesplitst\'. De elektronen verdelen zich dus, terwijl ze de lading van het stuk direct ervoor behouden. Verder is de weerstand in een serieschakeling gelijk aan de weerstand van alle onderdelen bij elkaar opgeteld, dus Rtotaal=R1+R2+R… Bij een parallelschakeling neemt de weerstand juist af, er zijn namelijk meer \'wegen\' waarover het \'verkeer\' verdeeld wordt. Er geldt 1/Rtotaal = 1/R1 + 1/R2 + 1/R… Je kunt elke \'weg\' in een parallelschakeling weer zien als een kleine serieschakeling.\r\n			</p>', '<ol>\r\n				<li>\r\n					Maak een samenvatting van deze paragraaf.\r\n				</li>\r\n				<li>\r\n					Stel ik heb een apparaat dat 5V gebruikt en een weerstand heeft van 2ohm, wat is het vermogen ervan?\r\n				</li>\r\n				<li>\r\n					<img src=\"./afbeeldingen/vraag1.svg\" />\r\n					Bij 1 is de spanning 12V en de weerstand is 1ohm. Bij 2 is de weerstand 2ohm. Hoeveel ampère gaat er door 3?\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					Eigen antwoord leerling.\r\n				</li>\r\n				<li>\r\n					U=5V R=2ohm</br>\r\n					R=U/I </br>\r\n					I=R/U=5/2=2.5A</br></br>\r\n\r\n					P=U*I=5*2.5=12.5W\r\n				</li>\r\n				<li>\r\n					Bij 1 hoort 12V en 1ohm, dus ook 12A.</br>\r\n					Bij 2 hoort dan 12V (het aantal J/coulomb is na de \'splitsing\' nog niet veranderd) en 2ohm, dus 6A.</br>\r\n					Bij 3 hoort dan 12-6=6A, want er was 12 coulomb/s verdeeld over 2 stukken waarvan het andere stuk (2) 6 coulomb/s ontvangt.\r\n				</li>\r\n			</ol>'),
(34, 'Inforca', 'H4', '2', 'Arduino', 'Introductie tot arduino', '<p>\r\n				De arduino is een soort minicomputer die simpele berekeningen kan uitvoeren en daarmee andere elektronica kan aansturen door het sturen van elektriciteit. De \'basis\' arduino heet Arduino Uno en ziet er als volgt uit. (Dit is niet het originele model, maar functioneel hetzelfde)\r\n				<img src=\"./afbeeldingen/arduino.png\" />\r\n			</p>\r\n			<p>\r\n				Het kan met andere elektronica communiceren via de pinnen. De pinnen met een ~ ernaast zijn PWM (pulse width modulation) pinnen, ze kunnen een signaal met sterkte van 0 tm 255 geven. De andere pinnen zijn digitale pinnen, ze kunnen dus alleen 1 of 0 aangeven.\r\n			</p>\r\n			<p>\r\n				In dit hoofdstuk leer je de basis van de arduino en daarvoor gebruiken we naast de arduino uno ook LEDs, een servo motor, weerstanden en een LDR. Een LED (light dependent resistor) is een onderdeel dat elektriciteit in een richting doorlaat en wanneer dit gebeurt licht geeft. Een servo motor is een soort ronddraaiende arm, hiermee kun je bewegende apparaten maken. Een weerstand, oftewel resistor gebruik je om onderdelen te beschermen tegen te hoge spanning (R=U/I). De LDR gaan we gebruiken als sensor, oftewel iets dat informatie over de wereld kan digitaliseren en doorsturen via elektriciteit. Bij een LDR wordt de weerstand kleiner naarmate er meer licht op valt, van deze eigenschap kun je handig gebruikmaken om een andere sterkte aan een signaal te geven. Een voorbeeld hiervan gaan we later in dit hoofdstuk uitwerken.\r\n			</p>', '<ol class=\"MLquestion\">\r\n				Waar of niet waar:\r\n				<li>\r\n					De weerstand van een LDR neemt toe als er meer licht op valt.\r\n				</li>\r\n				<li>\r\n					Een arduino kan (zonder aanpassingen) gebruikt worden als een desktop met windows.\r\n				</li>\r\n				<li>\r\n					Met PWM kan een waarde van 1 aangeven.\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestion\">\r\n				Waar of niet waar:\r\n				<li>\r\n					Niet waar\r\n				</li>\r\n				<li>\r\n					Niet waar\r\n				</li>\r\n				<li>\r\n					Waar\r\n				</li>\r\n			</ol>');
INSERT INTO `theorie` (`theory_id`, `school`, `hoofdstuk`, `paragraaf`, `hoofdstuk_naam`, `paragraaf_naam`, `main`, `questions`, `answers`) VALUES
(35, 'Inforca', 'H4', '3', 'Arduino', 'De basis van programmeren voor arduino', '<p>\r\n				Als eerste gaan we de software klaar maken voor de arduino, zorg eerst ervoor dat alles geïnstalleerd is. Als de software niet geïnstalleerd is, dan kun je dit doen volgens de installatie pagina van dit hoofdstuk (onder het menu voor dit hoofdstuk). Volg voor het klaar maken van de software (na de installatie) de volgende stappen:\r\n			</p>\r\n			<p>\r\n				<ol>\r\n					<li>\r\n						Open de arduino IDE.\r\n					</li>\r\n					<li>\r\n						Ga naar tools.\r\n					</li>\r\n					<li>\r\n						Selecteer arduino uno bij Board.\r\n					</li>\r\n					<li>\r\n						Selecteer de juiste poort onder Tools->Port (als er meerdere zijn probeer ze dan uit).\r\n					</li>\r\n					<li>\r\n						Ga naar tools en klik op Serial Monitor.\r\n					</li>\r\n					<li>\r\n						Plak de onderstaande code in het arduino bestand.\r\n					</li>\r\n				</ol>\r\n			</p>\r\n\r\n			<p>\r\n				Hou er rekening mee dat als de code gekopieerd wordt, het bugs kan bevatten doordat te lange tekst naar de volgende regel wordt geschoven.\r\n\r\n<pre><code>void setup() {\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  Serial.print(\"het werkt\");\r\n  Serial.print(\"\\n\");\r\n  delay(200);\r\n}</code></pre>\r\n\r\n			</p>\r\n			<p>\r\n				<ol start=\"7\">\r\n					<li>\r\n						Klik op het pijltje in de donker blauwe balk (naast het check teken en onder de witte balk), dit uploadt de code naar de arduino.\r\n					</li>\r\n					<li>\r\n						Kijk in de serial console of er \"het werkt\" komt te staan.\r\n					</li>\r\n					<li>\r\n						Als het niet werkt controleer of de arduino wel goed ingestoken is en of de serial monitor wel of 9600 Baud is ingesteld.\r\n					</li>\r\n				</ol>\r\n			</p>\r\n			<p>\r\n				Dan nu wat uitleg over de basis van het programmeren voor arduino.\r\n			</p>\r\n			<p>\r\n				De structuur van de code bestaat uit twee grote delen, de setup en de loop. De setup wordt maar een keer uitgevoerd en na de setup wordt de loop constant herhaald. Je kunt hierboven in de code zien hoe dit in elkaar zit.\r\n			</p>\r\n			<p>\r\n				Dan nu een paar basis commando\'s voor de arduino.\r\n			</p>\r\n			<p>\r\n				Met Serial.print() kun je waardes en tekst weergeven in de serial console, als je tekst wilt weergeven, vergeet dan niet om \" \" toe te voegen.\r\n			</p>\r\n			<p>\r\n				Met pinMode() kun je een van de pinnen op de arduino in een bepaalde stand zetten, de opties zijn INPUT en OUTPUT. Wil je een signaal ontvangen, gebruik dan INPUT, wil je iets versturen, gebruik dan OUTPUT. Gebruik pinMode() als volgt, zet als eerste het nummer van de pin tussen de haakjes, deze kun je aflezen op de arduino. Blijf voorlopig bij de nummers 2 tm 13. Als tweede zet je de stand erin. Een voorbeeld is pinMode(13, OUTPUT);\r\n			</p>\r\n			<p>\r\n				Om een signaal te lezen gebruik je digitalRead(). Je voert het nummer van de pin (die op de INPUT modus staat) in tussen de haakjes. Een voorbeeld is digitalRead(13);\r\n			</p>\r\n			<p>\r\n				Om een signaal te sturen gebruik je digitalWrite(). Je voert eerst het nummer van de pin in en dan de waarde. Mogelijke waardes zijn HIGH en LOW. HIGH kun je zien als 1 en LOW 0, dus aan en uit.\r\n			</p>\r\n			<p>\r\n				Je kunt ook variabelen gebruiken, dit zijn namen waar een waarde aan gekoppeld is. Als je een waarde vaker in jouw code nodig hebt komen deze erg van pas, ze helpen je het overzicht te bewaren en snel dingen aan te passen. Als je een geheel getal als variabele wilt gebruiken, dan gebruik je int. Een voorbeeld is int ledPin = 13; Dit zet ledPin gelijk aan de waarde 13. Als je in de code nu ledPin gebruikt wordt dit vervangen door 13. Je kunt ook tekst als waarde geven door het type String te gebruiken. Een voorbeeld van een programma dat een string uitprint is:\r\n			</p>\r\n			<p>\r\n\r\n<pre><code>void setup() {\r\n  //stel de snelheid van dataoverdracht in\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  //stel een tekst in\r\n  String string = \"Tekst\";\r\n  Serial.println(string);\r\n  delay(200);\r\n\r\n}</code></pre>\r\n\r\n			</p>\r\n			<p>\r\n				Als je tussen stukken code wilt wachten, dan kan dit via delay(), tussen de haken kun je het aantal milliseconden dat je wachten invoeren. Een voorbeeld is delay(200). Om 0,2s te wachten.\r\n			</p>\r\n			<p>\r\n				Dan komt nu een praktisch voorbeeld. Als onderdelen heb je nodig: de arduino, een breadboard, een paar male-to-male kabels (met een uitstekende pin aan beide kanten), een resistor van 330ohm en een kleine LED.\r\n			</p>\r\n			<p>\r\n				Voordat je begint met het maken van het elektrisch circuit moet je de arduino uitzetten, anders kan die beschadigd raken.\r\n			</p>\r\n			<p>\r\n				Laat een kabel van de 5V pin van de arduino naar de +rij van het breadboard gaan. Laat een kabel van de GND (grond/-) naar de -rij van het breadboard gaan. Zet nu een 330ohm resistor op het breadboard van de -rij naar de kortere pin van de LED gaan. Laat vervolgens een kabel van de +rij naar de lange pin van de LED gaan. Verbind de arduino met de computer. Als je het goed hebt gedaan gaat nu het lampje aan. Als je een flits ziet, dan heb je de korte en lange pin omgedraaid of de verkeerde weerstand gebruikt, je hebt dan een nieuwe LED nodig (de oude is doorgebrand).\r\n			</p>\r\n			<p>\r\n				<img src=\"./afbeeldingen/LED1.png\" />\r\n				<img src=\"./afbeeldingen/LED2.png\" />\r\n			</p>\r\n			<p>\r\n				Bij een breadboard gaat de stroom van het middeldeel via de horizontale rijen (van links naar rechts). Bij de randen (de + en - rijen) gaat het verticaal (van onder naar boven). Hou daar rekening mee als je de stroom erdoor laat gaan.\r\n			</p>\r\n			<p>\r\n				Als laatste onderdeel van deze paragraaf gaan we wat code schrijven die de LED aan en uit laat gaan.\r\n				Dit is de code:\r\n			</p>\r\n			<p>\r\n<pre><code>int ledPin = 13; //stel de pin in\r\n\r\nvoid setup() {\r\n  pinMode(ledPin, OUTPUT); //zet de modus van de pin op OUTPUT om het signaal te kunnen sturen\r\n}\r\n\r\nvoid loop() {\r\n  digitalWrite(ledPin, HIGH);   //zet de pin op aan, hierdoor kan er 5V door\r\n  delay(1000);                       //wacht 1s\r\n  digitalWrite(ledPin, LOW);    //zet de pin uit, hierdoor gaat er 0V door\r\n  delay(1000);                       //wacht 1s\r\n}</code></pre>\r\n			</p>\r\n			<p>\r\n				Kijk naar de comments (de tekst met // ervoor) voor de uitleg per regel. Probeer nu zelf het lampje aan en uit te laten gaan met een andere snelheid. Tip: gebruik als +pin hier pin 13 en niet de 5V pin. Je kunt deze namelijk aansturen met de arduino.\r\n			</p>', '<ol>\r\n				<li>\r\n					In welke 2 onderdelen is arduino code verdeeld?\r\n				</li>\r\n				<li>\r\n					Welke waarde heeft pin 12 na de uitvoering van: digtalWrite(12, HIGH)?\r\n				</li>\r\n				<li>\r\n					Hoe pauzeer je de code voor 1s?\r\n				</li>\r\n				<li>\r\n					In welke richting gaat de stroom in het middelste deel van een breadboard?\r\n				</li>\r\n				<li>\r\n					In welke richting gaat de stroom aan de zijkanten van een breadboard?\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					Een setup onderdeel dat eenmalig uitgevoerd wordt en een loop die zich zo snel mogelijk blijft herhalen.\r\n				</li>\r\n				<li>\r\n					1\r\n				</li>\r\n				<li>\r\n					delay(1000)\r\n				</li>\r\n				<li>\r\n					De stroom gaat horizontaal.\r\n				</li>\r\n				<li>\r\n					De stroom gaat verticaal\r\n				</li>\r\n			</ol>'),
(36, 'Inforca', 'H4', '4', 'Arduino', 'Verder met de arduino', '<p>\r\n				Om een signaal te geven dat meer informatie bevat dan 0 of 1 kun je analogWrite() gebruiken. Dit geeft een waarde van 0 tm 255, het werkt op de arduino door snel te wisselen tussen 0 en 1. Dit kan bijvoorbeeld gebruikt worden om een led langzaam van helderheid te veranderen. Deze functie werkt alleen op de pinnen met het ~ ernaast.\r\n			</p>\r\n			<p>\r\n				Om een \'random\' getal te krijgen kun je random() gebruiken. Een voorbeeld is int intensiteit = random(500); Dit zal intensiteit een waarde van 0 tm 500 geven.\r\n			</p>\r\n			<p>\r\n				Voor comments (uitleg) kun je // gebruiken voor één regel of /* aan het begin en */ aan het eind van een comment van meerdere regels.\r\n			</p>\r\n			<p>\r\n				De taal ondersteunt ook loops en condities. Voor een if else statement ziet de syntax (de schrijfwijze) er als volgt uit:\r\n\r\n<pre><code>if (voorwaarde){\r\n	//inhoud\r\n} else {\r\n	//inhoud\r\n}</code></pre>\r\n\r\n			</p>\r\n			<p>\r\n				Je kunt voor vergelijkingen weer (zoals in python) gebruik maken van != (is niet gelijk aan), < (is minder), > (is meer), == (is gelijk aan) en nog een paar andere. Het rekenen is ook hetzelfde als in python.\r\n			</p>\r\n			<p>\r\n				Verder biedt arduino ook nog libraries, dit zijn een soort uitbereidingen om meer functies toe te voegen, de voorgaande link geeft hier ook informatie over.\r\n			</p>\r\n			<p>\r\n				Er zijn ook nog andere (krachtigere en compactere) arduino\'s die voor het grootste deel hetzelfde werken als de uno.\r\n			</p>\r\n			<p>\r\n				Om meer van de taal te leren kun je terecht op <a href=\"https://www.arduino.cc/reference/en/\">https://www.arduino.cc/reference/en/</a>. Kijk ook eens naar <a href=\"https://www.arduino.cc/en/Main/Products\">https://www.arduino.cc/en/Main/Products</a> om te zien wat de verschillen tussen de modellen zijn.\r\n			</p>', '<ol>\r\n				<li>\r\n					Geef de naam van een arduino die krachtiger is dan de uno.\r\n				</li>\r\n				<li>\r\n					Hoe ziet een IF statement eruit die code uitvoert als twee waarden niet gelijk zijn aan elkaar (je mag doen alsof er al variabelen gedeclareerd zijn)?\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					Er zijn meerdere antwoorden mogelijk, waaronder de arduino mega.\r\n				</li>\r\n				<li>\r\n					<pre>\r\n						<code>\r\nif(waarde1 != waarde2){\r\n	//uit te voeren code\r\n}\r\n						</code>\r\n					</pre>\r\n				</li>\r\n			</ol>'),
(37, 'Inforca', 'H4', '5', 'Arduino', 'LED met LDR', '<p>\r\n				In deze paragraaf ga je werken aan een uitdaging, maar eerst komt nog een wat complexer voorbeeld. Een ledlampje dat meer licht geeft als het donker is en minder als het licht is. Dit werkt door met een LDR te achterhalen of er veel of weinig licht is en dan met een berekening een waarde voor het ledlampje te bepalen. Omdat we meer precisie willen dan aan of uit gebruiken we analogWrite() om de waarde voor de led in te stellen. Neem de onderstaande code maar eens door, hierna ga je het uitbereiden. Er staat steeds uitleg bij over wat er gedaan wordt.\r\n			</p>\r\n			<p>\r\n<pre><code>int sensorPin = A0; //stel de pin in voor het meten van de weerstand van de LDR\r\nint ledPin = 3; //stel de pin voor de led in (dit moet een pin met het golfje zijn)\r\nint sensorValue = 0;\r\nint ledValue = 0;\r\n\r\nvoid setup() {\r\n  Serial.begin(9600); //stel de snelheid van dataoverdracht in\r\n  pinMode(sensorPin, INPUT); //zet de sensorPin op input modus\r\n  pinMode(ledPin, OUTPUT); //zet de ledPin op output modus\r\n}\r\nvoid loop() {\r\n  //zet sensorValue gelijk aan de waarde van de weerstand van de LDR die afgelezen wordt\r\n  sensorValue = analogRead(sensorPin);\r\n\r\n  //laat de sensorwaarde zien\r\n  Serial.print(\"sensorValue = \");\r\n  Serial.println(sensorValue);\r\n\r\n  //zorg ervoor de helderheid van de led omgekeerd evenredig is met de weerstand (als het donker is geeft de led meer licht)\r\n  ledValue = (30000/sensorValue);\r\n\r\n  //zorg dat de led waarde niet groter is dan 255 (dit is de maximum waarde)\r\n  if(ledValue>255){\r\n    ledValue = 255;\r\n  }\r\n\r\n  //laat de waarde voor de led zien\r\n  Serial.print(\"ledValue =\");\r\n  Serial.println(ledValue);\r\n  Serial.println();\r\n\r\n  //zet de helderheid van het licht gelijk aan de weerstands waarde van de LDR\r\n  analogWrite(ledPin, ledValue);\r\n  delay(1000); //wacht 1s\r\n}\r\n\r\n//Probeer het uit door jouw vinger op de LDR te leggen (niet op de \'draad\')\r\n//Schijn nu met een lampje op de LDR\r\n//Laat nu een lampje knipperen en kijk naar de reactie van het led lampje</code></pre>\r\n\r\n			</p>\r\n			<p>\r\n				Hier hoort natuurlijk ook een circuit bij. Dit is wat lastiger en hoef je niet helemaal te begrijpen. Let wel op dat als je het gaat namaken je eerst goed moet controleren voordat je het aan zet! Om de pinnummers te achterhalen kun je ook bovenaan in de code kijken. Volg de pijlen om te zien hoe de elektriciteit zich verplaatst.\r\n\r\n				<img src=\"./afbeeldingen/LDR_LED.png\" />\r\n			</p>\r\n			<p>\r\n				Het voorbeeld dat je net hebt doorgenomen maakt gebruik van modelleren. Modelleren is het vereenvoudigen van een verschijnsel. Hier gebruik je het verschijnsel licht(sterkte) voor het besturen van een led aan de hand van een waarde die een sensor geeft, de waarde van de sensor is dus een vereenvoudiging voor hoe donker het is, de lichtsterkte.\r\n			</p>\r\n			<p>\r\n				Dan nu de uitdaging voor dit hoofdstuk. Laat een servo naar links draaien in het donker en naar rechts als het licht is. Er volgt nog een stukje uitleg.\r\n			</p>\r\n			<p>\r\n				De rode kabel bij de servo is +, verbindt dit met een 5V pin. De zwarte of bruine draad is de -, verbindt dit met grond (de GND pin). De andere draad (meestal geel) is voor het signaal door te sturen, verbindt deze met een analoge pin, dus een van de pinnen met A ernaast (bijvoorbeeld A5).\r\n			</p>\r\n			<p>\r\n				Voordat je gaat programmeren moet je eerst de servo library (uitbreiding) toevoegen, dit maakt het geven van commando\'s voor de servo veel makkelijker. Ga hiervoor naar de arduino software, dan sketch, dan include library en klik op servo. Voor de rest van de uitleg ga je als een echte programmeur zelf dingen zoeken. De pagina voor de library is <a href=\"https://playground.arduino.cc/ComponentLib/Servo\">https://playground.arduino.cc/ComponentLib/Servo</a> hier vind je al een belangrijk deel van de code die je nodig zult hebben. Probeer het daadwerkelijk op te lossen en samenwerken is aanbevolen. Vraag aan jouw docent of jouw stroomcircuit klopt voordat je het aanzet, het zou zonde zijn als een onderdeel doorbrandt doordat een kabel verkeerd is aangesloten.\r\n			</p>\r\n			<p>\r\n				Succes!\r\n			</p>', '<ol>\r\n				<li>Voor de uitdaging uit</li>\r\n				<li>Stel je wilt een (grote) windmolen laten draaien naar de kant waar de meeste wind vandaan komt. Je wilt weten welke kant dat is en hebt hiervoor een arduino met wat al het gewenste materiaal tot jouw beschikking. Wat zou je dan moeten meten en hoe pak je dat aan?</li>\r\n			</ol>', '<ol class=\"MLquestionAlt\">\r\n				<li>Succes</li>\r\n				<li>Je wilt eerst meten van welke kant de windsnelheid het groots is. Je kunt dit doen door een mini-windmolen aan een servo te bevestigen en (langzaam) rond te laten draaien, terwijl je dit doet meet je de spanning die de windmolen geeft. Je achterhaald naar welke kant de windmolen/servo gedraaid is wanneer de meeste spanning gemeten wordt. </li>\r\n			</ol>'),
(38, 'Inforca', 'H3', '6', 'Programmeren', 'Loops', '<p>Bij software komt veel herhaling voor en dit kan het efficiënts geprogrammeerd worden met loops. Loops zijn herhalingsstructuren. De belangrijkste zijn while- en for-loops. In python is de for loop een beetje anders dan in andere programmeertalen, maar de logica is bijna hetzelfde.</p>\r\n\r\n			<p>Voordat we kunnen beginnen met de voorbeelden is het belangrijk om een paar tekens te kennen. Deze zijn:</p>\r\n\r\n			<p>Het groter dan teken ></p>\r\n\r\n			<p>Het kleiner dan teken <</p>\r\n\r\n			<p>Het = teken kan met deze gecombineerd worden, dit gebeurt in python door <= of >= te gebruiken. <= betekent is kleiner dan of gelijk aan en >= betekent is groter dan of gelijk aan.</p>\r\n\r\n			<p>Voorbeelden in python zijn:</p>\r\n\r\n<pre>\r\n<code>\r\n#For-loop (# is een comment oftewel notatie in python voor één regel, hierin wordt vaak uitleg gezet)\r\n\r\nPriemgetallen = [2,3,5,7]\r\n\r\nfor priemgetal in priemgetallen:\r\n\r\n	print (priemgetal)\r\n\r\n#hier wordt dus eerst een lijst van priemgetallen gemaakt en vervolgens wordt gezegd dat voor elk getal in die lijst een bepaalde actie uitgevoerd moet worden, in dit geval het printen van het getal.\r\n\r\n#while-loop\r\n\r\ni = 5\r\n\r\n\'\'\'\r\n\r\ni komt veel voor als variabele in een loop, het is een standaard teken voor een loop van één laag diep. Het is namelijk ook mogelijk om meerdere loops in elkaar te zetten, maar dat is voor later. Het standaard teken voor de 2e variabele is j, dan k, l, enz. De driedubbele accolades in python worden gebruikt voor commentaar dat meerdere regels lang is.\r\n\r\n\'\'\'\r\n\r\nwhile i < 20:\r\n\r\n	print (i)\r\n\r\n	i = i+1\r\n\r\n#i += 1 geeft hetzelfde resultaat en in veel andere talen is i++ ook mogelijk\r\n\r\n\'\'\'\r\n\r\nEr wordt hier dus steeds gekeken of i, dat eerst gelijk is aan 5, nog minder is dan 20. Als i minder is dan 20, dan wordt de waarde van i weergegeven en met één verhoogd. Je krijgt dus een lijst van de waardes van i vanaf 5 t/m 19. Aangezien 20 niet meer kleiner is dan 20 en dus de herhaling eindigt.\r\n\r\n\'\'\'\r\n</code>\r\n</pre>\r\n\r\n\r\n			<p>Je kunt meerdere eisen maken voor de while loop. Stel je hebt twee eisen die beide vervuld moeten zijn, dan kun je \'&\' tussen de eisen zetten.</p>\r\n\r\n			<p>\r\n				Noties zoals hierboven zijn erg belangrijk om de code goed leesbaar te maken en houden. Ze worden vooral gebruikt voor uitleg en zijn erg handig voor code dat gedeeld wordt en voor als je na een tijdje terug gaat naar de code. Het is zo duidelijk wat de code eigenlijk doet en waarom het zo in elkaar zit.\r\n			</p>\r\n\r\n			<p>\r\n				Hou er ook rekening mee dat een programma langzamer wordt naar mate er meer en lastigere code wordt uitgevoerd. Probeer dus om programma\'s die je gaat schrijven zo efficiënt mogelijk te maken. Je kunt dit doen door onnodige herhaling te vermijden en problemen zo eenvoudig mogelijk aan te pakken.\r\n			</p>', '<ol>\r\n				<li>\r\n					Geef de waarden van een variabele zolang die tussen 5 en 10 in zit via python.\r\n				</li>\r\n				<li>\r\n					Maak een lijst met 5 getallen en geef per getal weer hoeveel de som van alle getallen op dat moment is (inclusief het huidige getal). De som is de opgetelde waardes van de getallen. Stel je hebt 3, 4 en 5, dan is de som 12 (3+4+5).\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					i = 6\r\n\r\n					while i > 5 and i < 10:\r\n					    print(i)\r\n					    i += 1\r\n				</li>\r\n				<li>\r\n					waardes = [1,3,10,43,1248]\r\n					sum = 0\r\n\r\n					for waarde in waardes:\r\n					    sum += waarde\r\n					    print (sum)\r\n				</li>\r\n			</ol>'),
(39, 'Inforca', 'H3', '7', 'Programmeren', 'Soorten structuren', '<p>\r\n				Er zijn verschillende soorten structuren voor het schrijven van programma\'s. Het kiezen van een taal bepaald al voor een deel welke structuur je zult gebruiken. Elke taal heeft zijn eigen manier om iets te schrijven, al komen ze in de basis veel overeen. Het is erg handig om te weten welke structuren er zijn en waar welke structuur handig voor is.\r\n			</p>\r\n\r\n			<p>\r\n				Er zijn 4 bekende soorten structuren die je moet kennen.\r\n			</p></br>\r\n\r\n			<p>\r\n				Imperatief\r\n			</p>\r\n\r\n			<p>\r\n				Imperatief programmeren is de eenvoudigste vorm. Je schrijft regel voor regel de code en het wordt van boven naar onder uitgevoerd. De code die je zover hebt geschreven is imperatief. Bijna elke taal ondersteund deze vorm van programmeren.\r\n			</p></br>\r\n\r\n			<p>\r\n				Functioneel\r\n			</p>\r\n\r\n			<p>\r\n				Bij functioneel programmeren maak je gebruik van functies. Functies zijn blokken code die hergebruikt kunnen worden. Een voorbeeld is een functie zoals kwadrateer, die een waarde aanneemt (input) en een resultaat geeft (output), in dit geval is dat het kwadraat van de ingevoerde waarde. Functioneel programmeren zal in de theorie vaker tegenkomen en wordt door de meeste talen ondersteund.\r\n			</p></br>\r\n\r\n			<p>\r\n				Object-georiënteerd\r\n			</p>\r\n\r\n			<p>\r\n				Object-georiënteerd programmeren is een uitbereiding op het imperatief programmeren. Je gaat zoveel denken in objecten, deze werken net zoals in de echte wereld. Een voorbeeld is een boom als object, deze boom heeft bepaalde kenmerken oftewel properties. Een property kan bijvoorbeeld het aantal bladeren zijn of de hoeveelheid water dat de boom vast kan houden. Talen zoals Java en C++ worden hiervoor veel gebruikt.\r\n			</p>\r\n\r\n			<p>\r\n				Je kunt ook overerving hebben oftewel inheritance. Dit betekent dat een object een soort van ander object is. Een voorbeeld is dat een Amerikaanse eik een soort boom is. Deze eik zal dan veel in gemeen hebben met bomen in het algemeen en kan dan gebruikmaken van de omschrijvingen van bomen.\r\n			</p>\r\n\r\n			<p>\r\n				Object-georiënteerd programmeren is al lastiger en zal niet verder behandeld worden in deze methode.\r\n			</p></br>\r\n\r\n			<p>\r\n				Logisch\r\n			</p>\r\n\r\n			<p>\r\n				Bij logisch programmeren geef je feiten en regels die gebruikt worden om een bepaald antwoord te geven. Deze structuur komt maar heel weinig voor en zal daarom ook niet verder behandeld worden. Het wordt wel ondersteund door bijvoorbeeld Prolog.\r\n			</p>', '<ol>\r\n				<li>\r\n					Omschrijf in eigen woorden de 4 besproken structuren.\r\n				</li>\r\n			</ol>', NULL),
(40, 'Inforca', 'H3', '8', 'Programmeren', 'Uitdaging: mini-game', '<p>Deze paragraaf is een uitdaging, maak je geen zorgen als het je niet meteen lukt of als je iets niet weet. Deze paragraaf is bedoeld om je te leren hoe het is om te programmeren, inclusief de irritante problemen en de vele vragen die je in het begin zult tegenkomen. Je moet waarschijnlijk ook zelf dingen opzoeken, net zoals een echte programmeur.</p>\r\n\r\n			<p>Goede sites hiervoor zijn:</p>\r\n\r\n			<p><a href=\"https://docs.python.org/3/tutorial/index.html \">https://docs.python.org/3/tutorial/index.html </a></p>\r\n\r\n			<p><a href=\"https://stackoverflow.com/ \">https://stackoverflow.com/ </a></p>\r\n\r\n			<p>Kijk ook onderaan de pagina voor een paar tips die zeker goed van pas komen.</p>\r\n\r\n			<p>De opdracht</p>\r\n\r\n			<p>Maak een tekstgame in python. Hierbij mag je zelf kiezen wat je precies wilt maken en hoe je dat gaat doen. Maak het jezelf niet te moeilijk en samenwerken en het stellen van vragen is aanbevolen.</p>\r\n\r\n			<p>Ideeën voor als je echt niks kunt bedenken:</p>\r\n\r\n			<ul>\r\n				<li>\r\n					Een wiskunde quiz waar zolang je het goede antwoord hebt punten blijft scoren.\r\n				</li>\r\n				<li>\r\n					Een mysterieus verhaal waar je als speler moet bepalen wie de dader is van een misdrijf.\r\n				</li>\r\n			</ul>\r\n\r\n			<p>Een paar tips</p>\r\n\r\n			<ol>\r\n				<li>\r\n					Schijf het idee eerst op op papier, anders raak je het overzicht kwijt.\r\n				</li>\r\n				<li>\r\n					Begin in het Nederlands of in het Engels de logica uit te werken.\r\n				</li>\r\n				<li>\r\n					Voeg stukje voor stukje code toe en test steeds opnieuw, gebruik hiervoor print().\r\n				</li>\r\n				<li>\r\n					Heb je bepaalde logica nodig waarvan je verwacht dat het al bestaat, zoek het dan gerust op (in het Engels).\r\n				</li>\r\n			</ol>\r\n\r\n			<p>Een paar stukken code die je waarschijnlijk nodig hebt:</p>\r\n\r\n			<p>Voor (pseudo)random getallen:</p>\r\n\r\n<pre>\r\n<code>\r\nimport random #import voegt al bestaande code toe zodat er meer functies zijn\r\n\r\nrandom.randint(MINIMALE GROTE,MAXIMALE GROTE)\r\n</code>\r\n</pre>\r\n\r\n			<p>Voor het krijgen van input van een gebruiker:</p>\r\n\r\n			<p><code>input()</code></p>\r\n\r\n			<p>bijvoorbeeld als</p>\r\n\r\n<pre><code>antwoord = input()\r\n\r\nprint(antwoord)\r\n\r\n#NB de input wordt als tekst gezien, vandaar de accolades bij de IF-statement:\r\n\r\nif antwoord == \"1\":\r\n\r\nprint(\"juist geantwoord\")\r\n\r\nelse:\r\n\r\nprint(\"verkeerd geantwoord\")</code></pre>\r\n\r\n		</div>', NULL, NULL),
(41, 'Inforca', 'H3', '1', 'Programmeren', 'Introductie tot programmeertalen', '<p>\r\n				Wat is een programmeertaal?\r\n			</p>\r\n			<p>\r\n				Het is een taal waarin met logica stappen worden gevolgd om een bepaald programma op te stellen. Het is begrijpbaar te maken voor de computer door het om te zetten in machinetaal.\r\n				Een programmeertaal wordt gebruikt om iets te schrijven dat vaak begrijpbaar is voor mensen en makkelijk begrijpbaar te maken is voor een computer.\r\n			</p>\r\n			<p>\r\n				Er zijn hoge en lage programmeertalen. Hoe hoger de taal, des te verder het van machinetaal af staat en des te dichter bij bijvoorbeeld het Engels. Een hogere taal is over het algemeen minder efficiënt voor de computer, maar efficiënter voor de programmeur. Er kan vaak meer gedaan worden met minder code en is dus geschikt om mee te leren programmeren. Zo\'n hoge taal geeft ook veel kant-en-klare functies die ervoor zorgen dat je je minder met details bezig hoeft te houden.\r\n			</p>\r\n			<p>\r\n				De taal die je in dit hoofdstuk zult gaan leren is Python. Python is een relatief eenvoudige taal om mee te beginnen en wordt toch voor veel dingen gebruikt. Het kan o.a. gebruikt worden voor algemene programma\'s, websites, games en data science.\r\n			</p>\r\n			<p>\r\n				Er zijn momenteel (2019) 2 grote versies in gebruik. 2.x en 3.x. In dit hoofdstuk wordt 3.x gebruikt aangezien dit de modernere variant is en op het moment van schrijven het best ondersteund is. In de volgende paragraaf leer je hoe je Python kunt installeren en hoe je kunt beginnen met het programmeren van Python.\r\n			</p>\r\n			<p>\r\n				Er is ook een bestand genaamd <a href=\"H3.ipynb\" download>H3.ipynb</a> beschikbaar met alle voorbeeldcodes voor de rest van het hoofdstuk. Dit kun je met Ipython notebook openen, hier komt nog uitleg over.\r\n			</p>', '<ol>\r\n				<li>\r\n					Waar wordt code naar omgezet voordat het wordt uitgevoerd?\r\n				</li>\r\n				<li>\r\n					Wat is het verschil tussen een hoge- en lage programmertaal?\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					machinetaal\r\n				</li>\r\n				<li>\r\n					Een lage programmeertaal is meer gedtailleerd en vaak efficiënter. Een hoge programmeertaal is makkelijker om code mee te schrijven en de taal zelf zorgt voor de details.\r\n				</li>\r\n			</ol>'),
(42, 'Inforca', 'H3', '2', 'Programmeren', 'Installatie', '<p>\r\n				Als python en jupyter notebook al geïnstalleerd zijn, dan kun je de eerste 5 stappen overslaan en in plaats daarvan de anaconda navigator openen en daarmee (jupyter) notebook starten.\r\n			</p>\r\n			<p>\r\n				Er zijn veel manieren om python te gebruiken en te installeren. In deze paragraaf wordt één mogelijke optie uitgewerkt.\r\n			</p>\r\n			<ol>\r\n				<li>\r\n					Download anaconda via <a href=\'https://www.anaconda.com/download/\'>https://www.anaconda.com/download/</a>. Click op windows installer python 3.6 en bij de pop-up klik je op \'no thanks\'.\r\n				</li>\r\n				<li>\r\n					Volg de stappen van de installer.\r\n				</li>\r\n				<li>\r\n					Start anaconda navigator.\r\n				</li>\r\n				<li>\r\n					Klik op install onder jupyter notebook.\r\n				</li>\r\n				<li>\r\n					Start jupyter notebook.\r\n				</li>\r\n				<li>\r\n					Maak een folder aan (via new -> folder)	NB de standaard folder waar je in begint staat onder C:\\Users\\USERNAME\\\r\n				</li>\r\n				<li>\r\n					Maak een bestand aan in deze folder (of kopieer het bestand van paragraaf 1).\r\n				</li>\r\n				<li>\r\n					Open het bestand.\r\n				</li>\r\n				<li>\r\n					Type in het eerste hokje (achter In[])</br>\r\n					<code>print(\"Hello world\")</code>\r\n				</li>\r\n				<li>\r\n					Gebruik de toetsencombinatie ctrl+enter terwijl het hokje geselecteerd is, dit voert de code in het hokje uit. Als alles juist geïnstalleerd is komt er nu onder het hokje \'Hello world\' te staan.\r\n				</li>\r\n			</ol>\r\n\r\n			<p>\r\n				Gefeliciteerd, je hebt jouw eerste regel python code uitgevoerd!\r\n			</p>', '<ol>\r\n				<li>\r\n					Waar wordt code naar omgezet voordat het wordt uitgevoerd?\r\n				</li>\r\n				<li>\r\n					Wat is het verschil tussen een hoge- en lage programmertaal?\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					machinetaal\r\n				</li>\r\n				<li>\r\n					Een lage programmeertaal is meer gedetailleerd en vaak efficiënter. Een hoge programmeertaal is makkelijker om code mee te schrijven en de taal zelf zorgt voor de details.\r\n				</li>\r\n			</ol>'),
(43, 'Inforca', 'H3', '3', 'Programmeren', 'Variabelen', '<p>Variabelen zijn vaak het hart van een computerprogramma. Dit zijn namen die een waarde toegekend hebben. Een voorbeeld in python is droomAuto = \"tesla\". Als je dit in het jupyter notebook invoert (voor een nieuw hokje klik je op de +) als</p>\r\n\r\n			<p><code>droomAuto = \"Tesla model S\"</code></p>\r\n\r\n			<p><code>print(droomAuto)</code></p>\r\n\r\n			<p>en uitvoert (toetsencombinatie ctrl+enter) dan zie je onder het hokje Tesla model S verschijnen.</p>\r\n\r\n			<p>Er zijn verschillende type variabelen, in python hoef je deze niet zelf te definiëren, omdat de programmeertaal dit namelijk voor jou doet.</p>\r\n\r\n			<p>Een paar belangrijkste types zijn: int, float, string, bool en array.</p>\r\n\r\n			<p>Een int (staat voor integer) is een geheel getal, het kan positief of negatief zijn. Een string is een stuk tekst, in python geef je dit aan door er \" \" omheen te zetten. Bool staat voor boolean en kan als waarde true of false hebben, 1 of 0, waar of niet waar. Een array is een lijst van waardes, zoals: \"Tesla\", \"koffie\", 20.</p>\r\n\r\n			<p>Voorbeelden van de types in python</p>\r\n\r\n			<p>Als je de waarde van een variabele op het scherm wilt zien kan dit door print(NAAM VAN DE VARIABELE) te gebruiken.</p>\r\n\r\n			<p>int: <code>getal = 5</code></p>\r\n\r\n			<p>float:	<code>getal = 1.2</code></p>\r\n\r\n			<p>string: <code>droomauto = \"Tesla model S\"</code></p>\r\n\r\n			<p>bool: <code>waarde1 = True</code></p>\r\n\r\n			<p><code>waarde2 = False</code></p>\r\n\r\n			<p>list (in andere talen array): <code>lijst = [2,4,7,8,\"test\",0]</code></p>\r\n\r\n			<p>NB: Als je bij een list een waarde van een bepaalde locatie in de list wilt hebben, kun je hiernaar verwijzen via NAAMLIST[NUMMER]. Let erop dat de eerste waarde nummer 0 is en niet 1. Stel je wilt \"test\" hebben, dan gebruik je dus lijst[4], want test heeft de 4e plaats (volgens de telling van programmeurs, die bij 0 beginnen).</p>\r\n\r\n			<p>NB: Bij python kan een list allerlei soorten waarden bevatten, zoals tekst en integers, andere talen staan dit vaak niet toe en accepteren maar één datatype in de list.</p>', '<ol>\r\n				<li>\r\n					Bedenk 5 variabelen.\r\n				</li>\r\n				<li>\r\n					Stel ik heb een list met als waarden [\"Tesla\",\"Koffie\",\"Programmeren\"], welk index nummer (nummer dat de plaats in de lijst aangeeft) heb je nodig als je koffie wilt?\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					Eigen antwoord\r\n				</li>\r\n				<li>\r\n					1, je telt vanaf 0 en het is de tweede waarden, 0+1=1\r\n				</li>\r\n			</ol>'),
(44, 'Inforca', 'H3', '4', 'Programmeren', 'Rekenen met variabelen', '<p>Variabelen zijn bedoeld om waardes bij te houden en met deze variabelen kan gerekend worden. We gaan in dit geval uit van integers (gehele getallen).</p>\r\n\r\n			<p>Deze waarden worden gebruikt tenzij anders aangegeven:</p>\r\n\r\n			<p><code>waarde1 = 20</code></p>\r\n\r\n			<p><code>waarde2 = 10</code></p>\r\n\r\n			<p>De meest gebruikte acties zijn:</p>\r\n\r\n			<p>Additie</p>\r\n\r\n			<p><code>waarde3 = waarde1 + waarde2</code> (=30)</p>\r\n\r\n			<p>Substractie</p>\r\n\r\n			<p><code>waarde3 = waarde1 - waarde2</code> (=10)</p>\r\n\r\n			<p>Multiplicatie</p>\r\n\r\n			<p><code>waarde3 = waarde1 * waarde2</code> (=200)</p>\r\n\r\n			<p>Delen</p>\r\n\r\n			<p><code>waarde3 = waarde1 / waarde2</code> (=2.0)</p>\r\n\r\n			<p>De modulus, ook bekend als rest</p>\r\n\r\n			<p><code>waarde1 = 20</code></p>\r\n\r\n			<p><code>waarde2 = 3</code></p>\r\n\r\n			<p><code>waarde3 = waarde1 % waarde2</code> (=2, want 20/3 = 6 met rest 2 (of 2/3))</p>\r\n\r\n			<p>Er zijn veel meer mogelijkheden en deze zijn terug te vinden op <a href=\"https://docs.python.org/3/tutorial/introduction.html#numbers\">https://docs.python.org/3/tutorial/introduction.html#numbers</a></p>\r\n\r\n			<p>NB de rekenregels die je gewend bent gelden ook in python.</p>\r\n\r\n			<p>NB python verandert automatisch datatypes in gevallen zoals 17/3, de uitkomst is hier een float met de waarde 5.666666666666667 ook al waren twee integers de beginwaarden.</p>\r\n\r\n			<p>Bij strings, teksten kan ook met deze acties gewerkt worden. Hier gelden nagenoeg dezelfde regels al is er minder mogelijk.</p>\r\n\r\n			<p>De nieuwe waarden zijn:</p>\r\n\r\n			<p><code>string1 = \"eerste\"</code></p>\r\n\r\n			<p><code>string2 = \"tweede\"</code></p>\r\n\r\n			<p>Additie:</p>\r\n\r\n			<p><code>string3 = string1 + string2</code> (=eerstetweede)</p>\r\n\r\n			<p>Multiplicatie:</p>\r\n\r\n			<p><code>String3 = string1 * 2</code> (=eersteeerste)</p>', '<ol>\r\n				<li>\r\n					Maak zelf 10 rekensommen met minimaal: 1 met een int, 1 met een string, 1 met een float, 1 met een list en 1 zonder variabele.\r\n				</li>\r\n				<li>\r\n					Stel ik heb een list met als waarden [\"Tesla\",\"Koffie\",\"Programmeren\"], welk index nummer (nummer dat de plaats in de lijst aangeeft) heb je nodig als je koffie wilt?\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					Eigen antwoord\r\n				</li>\r\n				<li>\r\n					1, je telt vanaf 0 en het is de tweede waarden, 0+1=1\r\n				</li>\r\n			</ol>'),
(45, 'Inforca', 'H3', '5', 'Programmeren', 'Condities', '<p>Als je programmeert wil je vaak kijken of een waarde aan een bepaalde eis voldoet en vervolgens iets uitvoeren als het aan die eis voldoet. Een voorbeeld is: als de koffie op is, dan hervul de kop met koffie. Hier wordt gebruikt gemaakt van een IF-statement, er staat namelijk als x, dan y. Het kan ook andersom zijn, als de koffie niet op is, dan drink koffie. Stel je plakt deze twee aan elkaar, dan krijg je:</p>\r\n\r\n			<p>Als de koffie op is, dan</p>\r\n\r\n			<p>Hervul kop met koffie</p>\r\n\r\n			<p>Anders</p>\r\n\r\n			<p>Drink koffie</p>\r\n\r\n			<p>Dit is een IF-ELSE-statement, als x, dan y, anders z.</p>\r\n\r\n			<p>Een voorbeeld in python:</p>\r\n\r\n<pre>\r\n<code>\r\ncoffee = True\r\n\r\nif coffee == True:\r\n\r\n	print(\"Drink koffie\")\r\n\r\nelse:\r\n\r\n	print(\"Zet koffie\")\r\n</code>\r\n</pre>\r\n\r\n			<p>NB: Wat misschien opvalt is het dubbele = teken. Dit gebruik je bij het programmeren als je waardes vergelijkt, het enkele = teken gebruik je om een waarde toe te kennen.</p>\r\n\r\n			<p>NB: Je kunt trouwens ook bij variabelen die 1 of 0 zijn (booleans) de statement \'if variabele:\', dit wordt als waar gezien als de variabele 1 is.</p>', '<ol>\r\n				<li>\r\n					Maak zelf 2 condities\r\n				</li>\r\n			</ol>', NULL),
(46, 'Inforca', 'H5', '1', 'Projectmanagement', 'Introductie en onderdelen', '<p>\r\n				Project management is het in goede banen leiden van een project. De definitie van een project is een activiteit om iets te creëren met beperkte middelen. Deze middelen zijn bijvoorbeeld: geld, tijd en informatie.\r\n			</p>\r\n			<p>\r\n				Een project kan in verschillende fasen worden ingedeeld: de ideefase, definitiefase, ontwikkelfase en nazorgfase. Deze fasen maken duidelijk hoever je bent en maken het gemakkelijker om te plannen. De meeste tijd zul je besteden aan de ontwikkelfase, maar die zal alleen succesvol zijn als de idee- en definitiefase goed zijn uitgevoerd.\r\n			</p>\r\n			<p>\r\n				De ideefase gaat over het bedenken waar het project over zal gaan. Je hebt een idee, maar weet nog niet hoe je ermee aan de slag wilt. Op het eind van deze fase moet het duidelijk zijn wat het project (grofweg) inhoud. Je kunt voor het uitwerken hiervan goed gebruik maken van SMART. SMART staat voor: specifiek, meetbaar, acceptabel, realistisch en tijdgebonden. Met dit model zul je dus aangeven: wat je wilt bereiken, hoe je weet dat je het doel hebt behaald, waarom je dit doel hebt, of het doel haalbaar is (en hoe) en wanneer het project af moet zijn. SMART is vooral een manier van schrijven, je probeert zo duidelijk mogelijk te zijn. Het is ook aan te bevelen om een lijst van eisen op te stellen, dan weet je wat je nog moet doen en wanneer jouw product af is. Als je een opdrachtgever hebt moet je deze lijst samen opstellen.\r\n			</p>\r\n			<p>\r\n				Controleer het idee ook op maatschappelijke aspecten, denk dus na over de invloed van jouw project op de wereld. Het is natuurlijk niet wenselijk dat een project grote negatieve gevolgen heeft. Een voorbeeld hiervan kan het ontwerpen van lootboxes zijn, dit zijn systemen in spellen waarmee een speler een kans krijgt iets te winnen, vaak tegen betaling. Het zou niet wenselijk zijn voor de maatschappij als dit tot verslaafden zou leiden die hierdoor in armoede terechtkomen.\r\n			</p>\r\n			<p>\r\n				In de definitiefase gaat jij je voorbereiden op het uitvoeren van het echte project. Dit doe je door de details van het project uit te werken. Je maakt dus duidelijk: wat het probleem is, waarom je dit wilt oplossen, de effecten van het project en wat de randvoorwaarden zijn. Deze randvoorwaarden kunnen bijvoorbeeld het budget, de opleverdatum, het aantal werkuren en de communicatiewijze zijn. Het is ook een goed idee om een planning te maken, zodat je weet wat wanneer klaar moet zijn en of het project haalbaar blijft of misschien wel te eenvoudig is.\r\n			</p>\r\n			<p>\r\n				De ontwikkelfase is het daadwerkelijk uitvoeren van het gemaakte plan. Deze fase kan vaak worden opgedeeld in kleinere stukken. Als je bijvoorbeeld een website gaat maken kun je deze fase opdelen in de volgende stukken: een schets maken, de tekst schrijven, de HTML schrijven en de CSS schrijven. Deze fase is afgelopen als de doelen zijn bereikt. Zorg er ook voor dat het product goed getest wordt en de fouten er zo veel mogelijk uit zijn. Vraag ook voor feedback, het liefst ook van mensen die niet aan het project hebben meegewerkt, deze zijn vaak minder bevooroordeeld. Het is erg belangrijk dat er bij (publieke) applicaties ook aandacht wordt besteed aan security. Als je data opslaat moet dit niet beschikbaar zijn voor mensen die hier niet bevoegd voor zijn, zoals hackers. Het gebruiken van een beveiligde verbinding en encryptie kan ook helpen, aangezien ze ervoor zorgen dat de data niet direct leesbaar is.\r\n			</p>\r\n			<p>\r\n				De nazorgfase is de afronding van het project. In deze fase breng je het resultaat van het project uit, misschien gaat de website online of laat je jouw robot zien. Het kan ook zo zijn dat je nog kleine veranderingen aan het resultaat wilt maken, misschien wat fouten er uithalen of een paar dingen toevoegen. Deze fase bevat ook een evaluatie, hierbij kijk je naar wat goed en fout ging en wat je in de toekomst kunt veranderen.\r\n			</p>\r\n			<p>\r\n				Bij ICT-projecten kun je meerdere soorten onderdelen herkennen. Het ontleden van een \'product\' in deze soorten onderdelen heet  decompositie. De soorten onderdelen die je moet kunnen herkennen zijn: fysiek, logisch en toepassingen. Fysiek betekent simpelweg tastbaar, je kunt het aanraken. Een voorbeeld hiervan zijn kabels. Logisch verwijst naar de berederenering achter de keuzes. Toepassingen verwijst naar software.\r\n			</p>', '<ol>\r\n				<li>\r\n					Maak een samenvatting van de projectfasen met maximaal 15 woorden per fase.\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n\r\n					<div class=\"table-wrapper\">\r\n						<table>\r\n\r\n							<tr>\r\n								<td>Ideefase</td>\r\n								<td>Bedenken wat het project als doel heeft.</td>\r\n							</tr>\r\n							<tr>\r\n								<td>Definitiefase</td>\r\n								<td>Het idee uitwerken, maar nog niet uitvoeren.</td>\r\n							</tr>\r\n							<tr>\r\n								<td>Ontwikkelfase</td>\r\n								<td>Het project daadwerkelijk uitvoeren.</td>\r\n							</tr>\r\n							<tr>\r\n								<td>Nazorgfase</td>\r\n								<td>Het product wordt afgegeven en onderhouden en er wordt gereflecteerd.</td>\r\n							</tr>\r\n\r\n						</table>\r\n					</div>\r\n\r\n				</li>\r\n			</ol>'),
(47, 'Inforca', 'H5', '2', 'Projectmanagement', 'Rollen', '<p>\r\n				Als je een project uitvoert in een team, dan zullen er rollen moeten worden verdeeld. Dit kan bij een klein project bijvoorbeeld: developer, leider, designer of administrateur zijn. De developer is de persoon die voornamelijk zal programmeren, de leider stuurt iedereen aan en zorgt voor een planning, de designer zorgt voor hoe het product eruit zal zien en de administrateur doet al het papierwerk (denk aan verslagen).\r\n			</p>\r\n			<p>\r\n				Bij een groter project komen er meer dingen bij kijken en zijn er dus ook meer rollen nodig. Mensen zullen meer gespecialiseerd werken in plaats van aan een groep kleinere taken. Rollen die er dan nodig zijn zullen ook: tester, brononderzoeker, marketer (persoon die de marketing regelt), human resource manager, enz. kunnen omvatten.\r\n			</p>\r\n			<p>\r\n				Een rol die altijd zeer belangrijk is, is de leider. Deze persoon zal moeten zorgen dat iedereen in het team weet wat gedaan moet worden en voor wanneer. De leider moet ook de grote beslissingen maken en proberen de groep bij elkaar te houden. Het is niet altijd een baan die in dank af zal worden genomen, maar zonder leider is een project haast onmogelijk.\r\n			</p>\r\n			<p>\r\n				Je kunt er ook achter komen wat voor een soort rol bij jouw past door bepaalde tests uit te voeren, een voorbeeld hiervan is de Belbin-test.\r\n			</p>', '<ol>\r\n				<li>\r\n					Welke rol past het best bij jou?\r\n				</li>\r\n				<li>\r\n					Welke rol vinden anderen het best bij jou passen?\r\n				</li>\r\n			</ol>', NULL),
(48, 'Inforca', 'H5', '3', 'Projectmanagement', 'Communicatie', '<p>\r\n				Communicatie in een project is zeer belangrijk. Als dit niet goed verloopt, zal de rest van het project ook vaak verkeerd gaan. Het is daarom het beste om een groep te maken in een chatapplicatie zodat iedereen op de hoogte gehouden kan worden. De leider van de groep zou dan elke week een korte samenvatting van de progressie samen met de volgende stappen kunnen sturen. Op die manier weet iedereen wat er is gebeurd en wat gedaan moet worden. Zorg er wel voor dat deze groep strikt voor het project wordt gebruik, niet voor berichten die niks met het project te maken hebben.\r\n			</p>\r\n			<p>\r\n				Het is ook belangrijk dat de definitiefase goed is verlopen en iedereen ook een rol heeft in de groep. Samen met een goede planning weet dan iedereen wat de bedoeling is. Zorg ook ervoor dat alle groepsgenoten de bestanden kunnen inzien. In het volgende hoofdstuk zullen nog wat tips komen over hoe je dit het beste kunt doen voor projecten met veel bestanden, waar bijvoorbeeld ook code bij zit. Bij een eenvoudig project kan er ook een gedeelde folder worden aangemaakt in bijvoorbeeld google drive of onedrive.\r\n			</p>\r\n			<p>\r\n				Als je een opdrachtgever hebt moet je natuurlijk daarmee goed contact onderhouden, zowel voor als tijdens het project. Denk hierbij aan het delen van de progressie en het vragen voor feedback.\r\n			</p>\r\n			<p>\r\n				Naast de communicatie met de personen waarmee je het project uitvoert is het bij een commercieel product ook erg belangrijk om (potentiele) klanten te informeren. Het kan erg handig zijn om in kaart te brengen wie allemaal met het projectresultaat in aanraking zal komen en wat een bepaalde groep voor wensen heeft. Zorg ook ervoor dat zaken omtrent  privacy en voorwaarden duidelijk zijn, hou hierbij rekening met de wet en regelgeving (zoals GDPR). Dit is vooral belangrijk voor grote projecten waar veel mensen mee te maken krijgen, voor schoolprojecten is dit vaak niet nodig.\r\n			</p>', NULL, NULL),
(49, 'Inforca', 'H5', '4', 'Projectmanagement', 'Agile en Scrum', '<p>\r\n				In deze paragraaf ga je leren wat agile is. Agile is een groep waardes en principies. Dat klinkt vrij vaag en dat is het in zichzelf ook, daarom zijn er verschillende agile systemen die een stuk concreter zijn. Agile heeft als doel het flexibiel uitvoeren van een project. In de kern heeft agile een paar belangrijke punten, deze zijn:\r\n			</p>\r\n			<ol>\r\n				<li>\r\n					Leden van een groep moeten goed samenwerken en zelfstandigheid hebben.\r\n				</li>\r\n				<li>\r\n					Een planning moet niet teveel vast leggen, zodat er ruimte is voor veranderingen.\r\n				</li>\r\n				<li>\r\n					De klant en gebruiker moeten regelmatig contact hebben.\r\n				</li>\r\n				<li>\r\n					Producten moeten niet in een keer worden gemaakt en getoond, maar in stappen. Updates moeten klein en regelmatig zijn, in plaats van ver uit elkaar en groot. Zo kan de gebruiker feedback geven en gaat minder tijd verloren aan onnodige zaken. Het zorgt er ook voor dat problemen sneller opgelost kunnen worden.\r\n				</li>\r\n				<li>\r\n					Er moet regelmatig een meeting zijn waarbij terug wordt gekeken en verbeterpunten worden gevormd.\r\n				</li>\r\n			</ol>\r\n\r\n			<p>\r\n				Een van de systemen die agile gebruikt is Scrum. Bij Scrum wordt elke feature (onder de naam \'user-story\') in een zogenaamde backlog gezet, dit is een soort grote te doen lijst van opdrachten. Er wordt vervolgens een planning voor enkele weken gemaakt en hiervoor worden opdrachten uit de backlog uitgekozen. In de komende weken wordt aan deze opdrachten gewerkt en ze komen op het agile board te staan. Dit is gebruikelijk een bord met post-it notes die worden verdeeld over: to do, dev, test en release. Er is dus een lijst van dingen waar nog aan begonnen moet worden, een waar aan gewerkt wordt, een waarvoor getest wordt en een met de opdrachten die af zijn.\r\n			</p>\r\n			<p>\r\n				De periode waarin deze backlog weggewerkt wordt heet \'sprint\' en duurt meestal twee weken. Op het eind van een sprint wordt een nieuwe versie van het project uitgegeven en wordt teruggekeken naar hoe de sprint is verlopen en wat beter kon. Er is ook op elke dag een kort gesprek tussen de teamleden waarin kort wordt gezegd wat die dag gedaan wordt en eventueel nog wat belangrijke mededelingen, dit is een \'daily Scrum meeting\'. De persoon die zorgt dat dit allemaal in goede banen wordt geleid heet \'Scrum master\'.\r\n			</p>\r\n			<p>\r\n				Het is ook mogelijk om aan dit proces een \'burn-down chart\' toe te voegen, dit is een grafiek waarop elke dag wordt weergegeven hoeveel werk er nog grofweg over is voor de huidige sprint. Des te meer werk, des te hoger het punt op de grafiek. Elke dag komt er weer een nieuw punt bij op de grafiek en op het eind kan dan gekeken worden naar wanneer het goed en wanneer het minder goed ging.\r\n			</p>\r\n			<p>\r\n				Voor een korte samenvatting (in het Engels) kun je <a href=\" https://www.youtube.com/watch?v=1PBln3dyaPs&list=PLngnoZX8cAn9zw-9wKg6HiHV4TJkUrdGW\">https://www.youtube.com/watch?v=1PBln3dyaPs&list=PLngnoZX8cAn9zw-9wKg6HiHV4TJkUrdGW</a> bekijken.\r\n			</p>', '<ol>\r\n				<li>\r\n					Wat wordt er aan het eind van een sprint gedaan?\r\n				</li>\r\n				<li>\r\n					Wat is een backlog?\r\n				</li>\r\n				<li>\r\n					Waar of niet waar? Een planning moet alles in detail vast leggen, op die manier weet iedereen wat wanneer gedaan moet worden.\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					Er wordt gekeken naar verbeteringen en er komt een nieuwe versie uit van het product.\r\n				</li>\r\n				<li>\r\n					Een lijst van opdrachten die nog uitgevoerd moeten worden.\r\n				</li>\r\n				<li>\r\n					Niet waar, de planning moet juist flexibel zijn.\r\n				</li>\r\n			</ol>');
INSERT INTO `theorie` (`theory_id`, `school`, `hoofdstuk`, `paragraaf`, `hoofdstuk_naam`, `paragraaf_naam`, `main`, `questions`, `answers`) VALUES
(50, 'Inforca', 'H6', '1', 'Project uitvoeren', 'Plannen en Trello', '<p>\r\n				Plannen is bij een project van groot belang, zonder planning is het onduidelijk wat gedaan moet worden en wie wat moet doen. Er is handige software beschikbaar om zelf een planning mee te maken, het programma dat als voorbeeld zal worden gegeven is Trello. In Trello kun je zelf \'items\' toevoegen aan lijsten en markers gebruiken. Zo kun je een bord indelen op: to do, in progress, done of bijvoorbeeld: general, bugs, new features en testing. Je kunt vervolgens met markers aangeven wie wat moet doen of in welke staat iets is. Trello is dus niet alleen om te plannen, maar dit is zeker een van de mogelijkheden. In de bonusparafen van dit hoofdstuk kun je leren hoe je Trello kunt installeren.\r\n			</p>\r\n			<p>\r\n				Als Trello geïnstalleerd is (of als je de web-versie gebruikt) hoef je alleen nog maar een account aan te maken en dan kun je beginnen. Op het start scherm kun je zelf lijsten toevoegen of aanpassen. Zorg er eerst voor dat je welke structuur je wilt gebruiken om de items in te verdelen. Je kunt daarna kaarten gaan toevoegen, dit zijn (meestal) de individuele taken die moeten worden uitgevoerd of algemene berichten. Stel je wilt nu een kaart labelen, dan kun je klikken op het \'edit\' icoontje dat zichtbaar is als je over de kaart heen gaat. Je klikt dan op labels beheren en kunt dan een kleur (met beschrijving) uitkiezen voor dat item. Je kunt zo bijvoorbeeld de kaarten markeren op groepslid. Je kunt ook de vervaldatum wijzigen, op die manier kun je meteen zien wat wanneer af moet zijn.\r\n			</p>\r\n			<p>\r\n				Als je de lijst met een groep (of iedereen) wilt delen kan dit door op Privé te klikken (naast de titel van het bord). Als je hier kiest voor team -> team creëren en zo een team aanmaakt, kun je vervolgens op de pagina van het team bij leden mensen toevoegen. Je kunt Trello nu als Scrum bord gebruiken!\r\n			</p>\r\n			<p>\r\n				Als voorbeeld van een Trello bord kan gekeken worden naar <a href=\"https://trello.com/b/R5YdaYG2\">https://trello.com/b/R5YdaYG2</a>, dit is het bord dat gebruikt is voor het maken van deze methode!\r\n			</p>', '<ol>\r\n				<li>\r\n					Maak een lijst van lijsten die je zou willen gebruiken voor een project\r\n				</li>\r\n				<li>\r\n					Maak deze lijsten nu in Trello en voeg er een paar items aan toe.\r\n				</li>\r\n				<li>\r\n					Markeer de items en stel een einddatum in.\r\n				</li>\r\n			</ol>', NULL),
(51, 'Inforca', 'H6', '2', 'Project uitvoeren', 'Github', '<p>\r\n				Git is een handige tool voor versiebeheer van code. Het is het makkelijkst te gebruiken met github in combinatie met een GUI (graphical user interface). Je kunt via dit systeem bestanden opslaan en ook terug gaan naar hoe bestanden in het verleden uitzagen (of hoe verwijderde bestanden eruit zagen). Zo raak je nooit meer iets kwijt en kunnen anderen makkelijk de bestanden vinden en samenwerken. Een voorbeeld van een github pagina is <a href=\"https://github.com/renesteeman/Informatica-Methode-Xampp\">https://github.com/renesteeman/Informatica-Methode-Xampp</a>, dit is de pagina dat voor het maken van deze methode is gebruikt. In de bonusparagrafen is weer te vinden hoe dit geïnstalleerd kan worden. Als het geïnstalleerd is kun je nu verder gaan.\r\n			</p>\r\n			<p>\r\n				<ol>\r\n					<li>\r\n						Ga naar jouw  github pagina\r\n					</li>\r\n					<li>\r\n						Klik op Repositories (bovenaan)\r\n					</li>\r\n					<li>\r\n						Klik op New\r\n					</li>\r\n					<li>\r\n						Vul de gegevens voor jouw repo in\r\n					</li>\r\n					<li>\r\n						Klik op create\r\n					</li>\r\n					<li>\r\n						Ga naar sourcetree\r\n					</li>\r\n					<li>\r\n						Klik op Remote\r\n					</li>\r\n					<li>\r\n						Klik op add ccount\r\n					</li>\r\n					<li>\r\n						Kies GitHub als hosting service\r\n					</li>\r\n					<li>\r\n						Kies basic authentication\r\n					</li>\r\n					<li>\r\n						Vul jouw Github username in\r\n					</li>\r\n					<li>\r\n						Klik op refresh password en vul jouw Github wachtwoord in\r\n					</li>\r\n					<li>\r\n						Klik op oke\r\n					</li>\r\n					<li>\r\n						Selecteer het aangemaakte project (dat je via GitHub hebt aangemaakt)\r\n					</li>\r\n					<li>\r\n						Klik op Clone\r\n					</li>\r\n					<li>\r\n						Voer een locatie in en Clone (deze folder moet leeg zijn)\r\n					</li>\r\n					<li>\r\n						Vul nu de details in voor jouw commits (de \'updates\' voor het project). Op het moment waarop deze handleiding is geschreven was er een bug waardoor je na de foutmelding \'Wrong email format\' nog eens op ok moest klikken (zonder iets te hoeven wijzigen).\r\n					</li>\r\n					<li>\r\n						Maak een bestand aan in de geselecteerde folder (het maakt niet uit wat voor een bestand).\r\n					</li>\r\n					<li>\r\n						Ga terug naar het project in sourcetree en klik op \'Stage All\' (terwijl je in het File Status tab zit). Dit zet het bestand klaar om als update bij het project te komen.\r\n					</li>\r\n					<li>\r\n						Maak een beschrijving voor jouw commit (de update), dit kun je invoeren in het tekstveld onderaan.\r\n					</li>\r\n					<li>\r\n						Klik op commit\r\n					</li>\r\n					<li>\r\n						De update staat nu klaar voor het project en is lokaal opgeslagen. De update staat dus op dit apparaat.\r\n					</li>\r\n					<li>\r\n						Om de update live te zetten op github.com moet je op Push klikken, dit staat in de balk bovenaan.\r\n					</li>\r\n					<li>\r\n						Klik op de checkbox onder \'Push?\'\r\n					</li>\r\n					<li>\r\n						Klik op Push\r\n					</li>\r\n					<li>\r\n						Log in met GitHub\r\n					</li>\r\n					<li>\r\n						De nieuwe versie van het project staat nu online!\r\n					</li>\r\n				</ol>\r\n			</p>\r\n			<p>\r\n				Je kunt via het tabblad Log/History (onderaan) de geschiedenis van het project zien per commit (update). Om weer een Push uit te voeren moet je dan terug gaan naar het tabblad File Status. Om de handeling voor te pushen over te slaan kun je ook bij de commit op \'Push changes immediately to x\' aanvinken (x is standaard origin/master). De commit wordt dan automatisch gepushed.\r\n			</p>\r\n			<p>\r\n				Als het project wordt bijgewerkt door iemand anders of via een andere manier moet je voor de push een pull uitvoeren. Dit haalt de nieuwe eerst op (zorg dus ervoor dat je een kopie maakt van jouw aanpassingen zodat ze niet verloren gaan).\r\n			</p>\r\n			<p>\r\n				Als je met een groep het project deelt is het handig om via de github pagina van het project de groepsleider collaborators (\'leden\') toe te laten voegen. Dit kan door naar settings te gaan en dan collaborators. Hier kun je een collaborator toevoegen (deze moet eerst een account hebben). Deze persoon ontvangt dan een mail waarmee hij toegang krijgt tot het project.\r\n			</p>', '<ol>\r\n				<li>\r\n					Maak zelf een github project aan en zet er een bestand in.\r\n				</li>\r\n			</ol>', NULL),
(52, 'Inforca', 'H6', '3', 'Project uitvoeren', 'Verslag', '<p>\r\n				Het maken van het verslag is misschien niet erg leuk, maar wel belangrijk (dit is de laatste keer dat je dit woord hoeft te verdragen). Er zijn een paar cruciale onderdelen van een verslag. Deze zijn: het logboek, het plan van aanpak, resultaten, de bronnenlijst en uitleg over jouw project. De aanvulling hierop zal erg afhankelijk zijn van het soort project dat je uitvoert.\r\n			</p>\r\n			<p>\r\n				Je kunt bij het verslag een stuk maken over: wat er mis ging, wat je hebt geleerd, hoe de werkverdeling was, wat de termen beteken of welke programmeertalen zijn er gebruikt bij. Probeer op tijd aan het verslag te beginnen, vooral aan onderdelen zoals het plan van aanpak en het logboek. Probeer ook waar mogelijk afbeeldingen, grafieken en tabellen te gebruiken, dit zorgt ervoor dat het project er interessant uit ziet en duidelijk wordt. Zorg ervoor dat als het project code bevat dit terug te vinden is in het verslag of dat er een link staat naar de bestanden.\r\n			</p>\r\n			<p>\r\n				Voor een voorbeeldverslag kun je kijken bij de bonus van dit hoofdstuk, hierin staat een verslag over een neural network. Het project dat hierin beschreven gaat misschien een beetje ver voor de gemiddelde leerling, al is dit wel een (zelfstandig uitgevoerd) 5 havo project (en profiel werkstuk). NB: normaalgesproken staat bij het PvA (plan van aanpak) ook een datum bij elk item.\r\n			</p>', NULL, NULL),
(53, 'Inforca', 'H6', '4', 'Project uitvoeren', 'Voorbeeld projecten', '<p>\r\n				Bij projecten ga je in een groep aan de slag om iets te doen dat jullie (hopelijk) interessant vinden en iets van kunnen leren. Dit is jouw kans om iets te doen dat je zelf wilt, in plaats van het uitvoeren van een verplichting. Als je een erg goed project maakt kan het zelfs op jouw CV.\r\n			</p>\r\n			<p>\r\n				Probeer bij het project gebruik te maken van alles dat je hebt geleerd en zorg ervoor dat iedereen iets te doen heeft waar ze interesse in hebben. Het is het leukste om zelf een project te verzinnen, maar als je echt niks kunt bedenken kun je de volgende ideeën (als inspiratie) gebruiken.\r\n			</p>\r\n			<p>\r\n				<ol>\r\n					<li>\r\n						Een website waarin je mensen met jou laat kennismaken, een soort visitekaartje\r\n					</li>\r\n					<li>\r\n						Maak een klein voertuig dat je met een arduino kan laten rijden. Eventueel op afstand bestuurbaar of zelfrijdend voor een echte uitdaging.\r\n					</li>\r\n					<li>\r\n						Een neural network dat objecten of personen kan herkennen.\r\n					</li>\r\n					<li>\r\n						Een led-strip die automatisch aangaat in de ochtend, eventueel afhankelijk van het lesrooster.\r\n					</li>\r\n					<li>\r\n						Een systeem dat automatisch planten bevochtigd via een arduino.\r\n					</li>\r\n					<li>\r\n						Het bouwen van een eigen computer (niet aanbevolen voor groepen).\r\n					</li>\r\n				</ol>\r\n			</p>', '<ol>\r\n				<li>\r\n					Bedenk wat jij als project zou willen uitvoeren.\r\n				</li>\r\n			</ol>', NULL);

-- --------------------------------------------------------

--
-- Tabelstructuur voor tabel `theorie_hoofdstukken`
--

CREATE TABLE `theorie_hoofdstukken` (
  `hoofdstuk_id` int(11) NOT NULL,
  `school` tinytext COLLATE utf8_bin NOT NULL,
  `hoofdstuk` tinytext COLLATE utf8_bin NOT NULL,
  `hoofdstuk_naam` tinytext COLLATE utf8_bin NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Gegevens worden geëxporteerd voor tabel `theorie_hoofdstukken`
--

INSERT INTO `theorie_hoofdstukken` (`hoofdstuk_id`, `school`, `hoofdstuk`, `hoofdstuk_naam`) VALUES
(1, 'Inforca', 'H1', 'Werking computer'),
(2, 'Inforca', 'H2', 'Logica'),
(3, 'Inforca', 'V1', 'Filosofie en AI'),
(4, 'Inforca', 'B1', 'Web development'),
(5, 'test_school', 'H2', 'YEE Logica'),
(6, 'test_school', 'V1', 'YEE Filosofie en AI'),
(7, 'test_school', 'B1', 'YEE Web development'),
(8, 'Inforca', 'H4', 'Arduino'),
(9, 'Inforca', 'H3', 'Programmeren'),
(10, 'Inforca', 'H5', 'Projectmanagement'),
(11, 'Inforca', 'H6', 'Project uitvoeren');

-- --------------------------------------------------------

--
-- Tabelstructuur voor tabel `theorie_paragrafen`
--

CREATE TABLE `theorie_paragrafen` (
  `paragraaf_id` int(11) NOT NULL,
  `hoofdstuk_id` int(11) NOT NULL,
  `paragraaf` int(11) NOT NULL,
  `paragraaf_naam` tinytext COLLATE utf8_bin NOT NULL,
  `main` text COLLATE utf8_bin NOT NULL,
  `questions` text COLLATE utf8_bin NOT NULL,
  `answers` text COLLATE utf8_bin NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Gegevens worden geëxporteerd voor tabel `theorie_paragrafen`
--

INSERT INTO `theorie_paragrafen` (`paragraaf_id`, `hoofdstuk_id`, `paragraaf`, `paragraaf_naam`, `main`, `questions`, `answers`) VALUES
(2, 1, 1, 'Het binair systeem', '<p>Een computer \'begrijpt\' alleen nullen en enen. Informatie wordt in een computer altijd door middel van deze twee getallen opgeslagen. Of het nou gaat om letters, programma\'s of het beeld, het zijn allemaal nullen en enen.</p>\r\n\r\n			<p>Een bit heeft twee mogelijke waardes: 1 en 0. Een 1 geeft de aanwezigheid en 0 de afwezigheid van stroom aan. Er kan met dit binair systeem, een systeem met twee waarden, van alles worden weergegeven.</p>\r\n\r\n			<p>Dit binaire systeem werkt het beste als er meerdere 0\'en en 1\'en elkaar opvolgen, om zo voor veel mogelijkheden te zorgen. Hiermee kunnen dus ook grote hoeveelheden gegevens, oftewel data worden opgeslagen.</p>\r\n\r\n			<p>In het binair stelsel wordt van rechts naar links geteld. De waarde van een 1 wordt steeds groter als het verder links staat. In dit voorbeeld kun je zien hoe je in het binair stelsel tot 10 telt (met stappen van 1) en beginnend bij 0.</p>\r\n\r\n			<p>0, 1, 10, 11, 100, 101, 110, 111, 1000, 1001, 1010.</p>\r\n\r\n			<p>Alle 1\'en en 0\'en geven een volledige waarde weer. De waarde van de 1 wordt bepaald door de plek die deze binnen de reeks heeft. Helemaal rechts is het 1 waard en voor elke plek dat deze verder naar links staat verdubbeld zijn waarde. Een paar voorbeelden zijn:</p>\r\n\r\n			<p>Een 1 op de tweede plek van rechts is 2 waard, dus 10 in binair stelsel is 2 in het decimaal systeem.</p>\r\n\r\n			<p>Een 1 op de derde plek is 4 waard, dus een 100 in het binair stelsel is 4 in het decimaal systeem.</p>\r\n\r\n			<p>Een 1 op de vierde plek is 8 waard, dus een 1000 in het binair stelsel is 8 in het decimaal systeem.</p>\r\n\r\n			<p>Je kunt ook een 0 hieraan toevoegen. Dit hebt je bijvoorbeeld nodig om 5 weer te geven in decimaal, 101. Een vijf in binair is dus eigenlijk een vier en een, zoals twaalf in decimaal eigenlijk tien en twee is. Een 0 kan dus de waarde van een 1 verhogen, door de 1 naar links te \'duwen\'.</p>', '<ol>\r\n				<li>\r\n					Hoe wordt een nul en een één door een computer begrepen?\r\n				</li>\r\n				<li>\r\n					Vertaal 001, 011, 1001001 naar het decimale systeem (\'normale\' getallen)\r\n				</li>\r\n				<li>\r\n					Vertaal 5, 20 en 40 naar binair\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					Wel stroom = 1, geen stroom = 0\r\n				</li>\r\n				<li>\r\n					1, 3, 73\r\n				</li>\r\n				<li>\r\n					101, 10100, 101000\r\n				</li>\r\n			</ol>'),
(3, 1, 2, 'Binair rekenen', '<p>Optellen</p>\r\n\r\n			<p>Optellen in binair is niet ingewikkeld. Je telt het bovenste en het onderste getal bij elkaar op en in het geval van 1+1 krijg je dan 10 als uitkomst. Het is alleen zo dat je bij het optellen van binaire getallen vaker iets moet onthouden, omdat het vaker boven de grenswaarde (meer dan 1) uitkomt.</p>\r\n\r\n			<img src=\"./afbeeldingen/additie.svg\" class=\"theorieImage\" />\r\n\r\n			<p>Decimaal: 108+49 = 157, dus het klopt.</p>\r\n\r\n			<p>Getallen met elkaar verminderen</p>\r\n\r\n			<p>Ook dit is niet ingewikkeld. Je haalt steeds het onderste getal van het bovenste getal af. Als je op -1 uitkomt \'leen\' je van het volgende nummer.</p>\r\n\r\n			<img src=\"./afbeeldingen/aftrekken.svg\" class=\"theorieImage\" />\r\n\r\n			<p>Vermenigvuldigen</p>\r\n\r\n			<p>Vermenigvuldigen lijkt wat moeilijker, maar dit valt mee. Dit doe je door steeds het meest rechtste nummer van onder te vermenigvuldigen met de nummers van de bovenste rij. Dit gaat dus van rechts naar links. Als de rij af is ga je bij de onderste rij de stappen herhalen voor het getal dat een plek verder naar links staat. Je zet steeds de uitkomsten onder elkaar en telt ze op het einde bij elkaar op. Denk eraan om het antwoord per rij ook steeds een plek op te laten schuiven naar links, je kunt er ook steeds een nul achter zetten om dit te verduidelijken.</p>\r\n\r\n			<img src=\"./afbeeldingen/multiplicatie.svg\" class=\"theorieImage\" />\r\n\r\n			<p>\r\n				Binair delen is ook mogelijk, maar dit is vrij lastig (voor een mens) om te doen. We zullen dit dus niet gaan uitvoeren, omdat het simpelweg te complex wordt.\r\n			</p>', 'Binair rekenen\r\n			<ol class=\"MLquestion\">\r\n				<li>\r\n					Tel op\r\n\r\n					<ol>\r\n						<li>10111+01100</li>\r\n						<li>01111+1110101</li>\r\n						<li>001100111+01111100</li>\r\n					</ol>\r\n				</li>\r\n\r\n\r\n				<li>\r\n					Trek af\r\n\r\n					<ol>\r\n						<li>10110-11</li>\r\n						<li>10110-0110</li>\r\n						<li>110011-101110</li>\r\n					</ol>\r\n				</li>\r\n\r\n				<li>\r\n					Vermenigvuldig\r\n\r\n					<ol>\r\n						<li>111*000</li>\r\n						<li>101*101</li>\r\n						<li>11011*101111 </li>\r\n					</ol>\r\n				</li>\r\n\r\n			</ol>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Tel op\r\n\r\n					<ol>\r\n						<li>100011</li>\r\n						<li>10000100</li>\r\n						<li>11100011</li>\r\n					</ol>\r\n				</li>\r\n\r\n				<li>\r\n					Trek af\r\n\r\n					<ol>\r\n						<li>10011</li>\r\n						<li>10000</li>\r\n						<li>100</li>\r\n					</ol>\r\n				</li>\r\n\r\n				<li>\r\n					Vermenigvuldig\r\n\r\n					<ol>\r\n						<li>0</li>\r\n						<li>11001</li>\r\n						<li>1001010</li>\r\n					</ol>\r\n				</li>\r\n\r\n			</ol>'),
(4, 1, 3, 'Gates', '<p>\'Gates\', oftewel poortjes in het Nederlands, zijn kleine schakelingen. De eenvoudigste (en tevens ook de belangrijkste) zijn AND en OR. Een gate ontvangt twee binaire waarden als input en vergelijkt deze twee bits.</p>\r\n\r\n			<p>Afhankelijk van welke gate en welke input het heeft ontvangen komt er een bepaalde output. Deze output is wederom een bit, het antwoord eigenlijk dus met ja of nee.</p>\r\n\r\n			<p>Bij AND is de output 1 als de twee bits in de input beide 1 zijn, dan kan de stroom namelijk erdoorheen (zie afbeelding). De naam AND is dus eigenlijk best logisch, want het heeft 1 en 1 nodig.</p>\r\n\r\n			<p>Bij OR moet minimaal een van de twee bits in de input 1 zijn om vervolgens een output van 1 uit te krijgen, maar twee keer 1 geeft ook de output 1. Alleen als de output twee keer 0 is zal de output bij een OR gate 0 zijn. De stroom kan dus doorgaan als er minimaal één keer een 1 als input is.</p>\r\n\r\n			<p>Als je deze poorten in een stroomcircuit gebruikt geld dat wanneer de output 1 is, de kring gesloten is (en er dus wel stroom kan circuleren), en bij 0 de kring open is (en er dus geen stroom kan circuleren).</p>\r\n\r\n			<p>Een voorbeeld van deze gates in een circuit is:</p>\r\n\r\n			<p>AND</p>\r\n\r\n			<img src=\"./afbeeldingen/AND.svg\" class=\"theorieImage\" />\r\n\r\n			<p>OR</p>\r\n\r\n			<img src=\"./afbeeldingen/OR.svg\" class=\"theorieImage\" />\r\n\r\n			<p>De grijze strepen zijn de mogelijke posities van de schakelaars. Als ze dicht zijn kan er stroom doorheen en als ze open zijn niet, 1 of 0.</p>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Neem als input de waarden 0 en 1 (in die volgorde).\r\n\r\n					<ol>\r\n						<li>Welk resultaat zal dit geven bij een AND-gate?</li>\r\n						<li>En bij een OR-gate?</li>\r\n						<li>Teken de AND- en OR-gates als een elektrisch circuit.</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>0</li>\r\n						<li>1</li>\r\n						<li>\r\n							AND\r\n							<img src=\"./afbeeldingen/vraagAND.svg\" class=\"theorieImage\" />\r\n\r\n							OR\r\n							<img src=\"./afbeeldingen/vraagOR.svg\" class=\"theorieImage\" />\r\n\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(5, 1, 4, 'Onderdelen van de computer', '<p>Een computer werkt door veel gates samen te gebruiken om data te verplaatsen en te manipuleren. Om dit te doen zijn veel verschillende onderdelen nodig, maar niet alle onderdelen voeren berekeningen uit.</p>\r\n\r\n			<p>Andere onderdelen zorgen ervoor dat aan de randvoorwaarden wordt voldaan, bijvoorbeeld dat de data opgeslagen kan worden en dat er genoeg stroom is. De belangrijkste onderdelen van een computer worden hieronder genoemd.</p>\r\n\r\n			<p>Het hart van de computer is de CPU (Central Processing Unit). Dit is een chip die meestal maar een paar centimeter groot is, waarop alle algemene instructies worden uitgevoerd met behulp van de eerder besproken gates en dus het heen en weer halen van binaire getallen. Tegenwoordig heeft een CPU meerdere kernen, ook wel cores genoemd. Door middel van deze kernen kan de CPU aan meerdere opdrachten tegelijk werken. Elke kern werkt dan als een soort mini-CPU, maar dan niet met alle onderdelen die de gehele CPU heeft.</p>\r\n\r\n			<p>De CPU heeft namelijk niet alleen de onderdelen voor het rekenen, maar daarnaast ook andere onderdelen. Een voorbeeld hiervan zijn cache opslag en de nodige structuren om data door te kunnen sturen.</p>\r\n\r\n			<p>Cache is een vorm van hele snelle opslag, maar vaak met een kleine capaciteit (enkele MB\'s). Data dat snel verwerkt moet worden kan hierin worden opgeslagen, vaak is dat code om programma\'s te laten werken.</p>\r\n\r\n			<p>De snelheid van een CPU hangt af van meerdere factoren, voornamelijk: de IPC, frequentie, cache en de hoeveelheid kernen. De IPC is het aantal instructies dat per clock uitgevoerd kan worden. Een clock is een cyclus van instructies, bijvoorbeeld haal waardes van x naar y of voeg x toe aan y. De frequentie geeft aan hoeveel clocks er in een seconde uitgevoerd worden. Des te groter de cache, des te meer code snel uitgevoerd kan worden. De code hoeft dan niet meer gezocht te worden in langzamere vormen van opslag. Bij meer kernen kan er meer code tegelijk uitgevoerd worden.</p>\r\n\r\n			<img src=\"./afbeeldingen/CPU.png\" class=\"theorieImage small\" />\r\n\r\n			<p>RAM, Random Accessible Memory, slaat data op dat snel beschikbaar moet zijn. Zaken als het OS (bestuuringssysteem) en actieve programma\'s worden hierop gezet, zodat de CPU niet steeds verzoeken hoeft te sturen om gegevens van een schijf te krijgen en er dus veel sneller bij kan. Des te meer ram, des te meer informatie snel beschikbaar kan zijn.</p>\r\n\r\n			<img src=\"./afbeeldingen/RAM.png\" class=\"theorieImage small\" />\r\n\r\n			<p>Het moederbord is een soort hub waarop alle hardware op aangesloten is: de CPU, GPU, schijven (opslag), usb poorten, netwerkadapters en nog een heleboel andere zaken zitten allemaal hierop aangesloten. Het moederbord zorgt er dus voor dat alle onderdelen met elkaar kunnen communiceren.</p>\r\n\r\n			<img src=\"./afbeeldingen/MOBO.png\" class=\"theorieImage small\" />\r\n\r\n			<p>De GPU heeft heel veel kernen, maar weer een lagere frequentie ten opzichte van de CPU. Tevens is het lastiger om er bepaalde instructies op uit te voeren. De GPU kan dus vooral veel eenvoudige taken tegelijkertijd uitvoeren. Dit maakt het erg handig voor bijvoorbeeld het laden van beelden en het spelen van spellen. Het zorgt ervoor dat er een beeld is dat een aangesloten scherm kan weergeven. De GPU kan echter ook andere taken uitvoeren, maar deze zijn vrij geavanceerd. Denk hierbij aan het trainen van zelflerende programma\'s.</p>\r\n\r\n			<img src=\"./afbeeldingen/GPU.png\" class=\"theorieImage small\" />\r\n\r\n			<p>Er zijn meerdere soorten schijven. Deze zijn voornamelijk op te delen in twee types: de SSD (Solid State Drive) en de HDD (harddisk drive).</p>\r\n\r\n			<p>Verschillen tussen de SSD en de HDD:</p>\r\n\r\n			<div class=\"table-wrapper\">\r\n				<table>\r\n					<tr>\r\n						<th>Verschil</th>\r\n						<th>SSD</th>\r\n						<th>HDD</th>\r\n					</tr>\r\n					<tr>\r\n						<td>Opslagmethode</td>\r\n						<td>Data wordt opgeslagen in cellen die maar een beperkt aantal keer herschreven kunnen worden.</td>\r\n						<td>Magnetische ladingen worden aangebracht op een draaiende schijf.</td>\r\n					</tr>\r\n					<tr>\r\n						<td>Snelheid</td>\r\n						<td>Erg snel.</td>\r\n						<td>Vrij langzaam.</td>\r\n					</tr>\r\n					<tr>\r\n						<td>Veiligheid van data</td>\r\n						<td>Wanneer een SSD kapot gaat blijft de data vaak nog leesbaar en het is vaak van te voren in te schatten wanneer het gebeurd.</td>\r\n						<td>Wanneer een HDD kapot gaat is de data niet meer leesbaar.</td>\r\n					</tr>\r\n					<tr>\r\n						<td>Prijs</td>\r\n						<td>De prijs per GB is nu (in 2019) nog een stuk hoger dan bij een hdd, maar daalt snel.</td>\r\n						<td>De prijs per GB is erg laag, maar gaat niet snel omlaag.</td>\r\n					</tr>\r\n\r\n				</table>\r\n			</div>\r\n\r\n			<img src=\"./afbeeldingen/HDD.png\" class=\"theorieImage small inline\" />\r\n			<img src=\"./afbeeldingen/SSD.png\" class=\"theorieImage small inline\" />\r\n\r\n			<p>Afkortingen:</p>\r\n\r\n			<div class=\"table-wrapper\">\r\n				<table>\r\n					<tr>\r\n						<th>Afkorting</th>\r\n						<th>Volledige naam</th>\r\n						<th>Vertaling</th>\r\n					</tr>\r\n					<tr>\r\n						<td>CPU</td>\r\n						<td>Central Processing Unit</td>\r\n						<td>Centrale processoreenheid</td>\r\n					</tr>\r\n					<tr>\r\n						<td>RAM</td>\r\n						<td>Random Accessible Memory</td>\r\n						<td>Willekeurig toegankelijk geheugen</td>\r\n					</tr>\r\n					<tr>\r\n						<td>OS</td>\r\n						<td>Operating System</td>\r\n						<td>Besturingssysteem</td>\r\n					</tr>\r\n					<tr>\r\n						<td>GPU</td>\r\n						<td>Graphics Processing Unit</td>\r\n						<td>Grafische processoreenheid</td>\r\n					</tr>\r\n					<tr>\r\n						<td>SSD</td>\r\n						<td>Solid State Drive</td>\r\n						<td>Schijf zonder bewegende delen</td>\r\n					</tr>\r\n					<tr>\r\n						<td>HDD</td>\r\n						<td>Harddisk Drive</td>\r\n						<td>Harde schijf</td>\r\n					</tr>\r\n\r\n				</table>\r\n			</div>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Beschrijf in maximaal 10 woorden de functie van de volgende onderdelen (dit hoeft niet in volledige zinnen).\r\n\r\n					<ol>\r\n						<li>de CPU</li>\r\n						<li>de GPU</li>\r\n						<li>het moederbord</li>\r\n						<li>het RAM</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>Het uitvoeren van algemene instructies.</li>\r\n						<li>Het uitvoeren van veel eenvoudige instructies tegelijkertijd.</li>\r\n						<li>Zorgen dat onderdelen onderling kunnen communiceren.</li>\r\n						<li>Het opslaan van data dat snel nodig is.</li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(6, 1, 5, 'Software en het OS', '<p>De computer kan taken uitvoeren door een grote reeks van instructies uit te voeren. Deze instructies worden geschreven in een programmeertaal die vervolgens vertaald wordt naar machinetaal die de computer kan begrijpen. Hoe je zelf code kunt schrijven leer je in een later hoofdstuk.</p>\r\n\r\n			<p>De basis van code bestaat uit variabelen. Dit zijn getallen of een stuk tekst waar je steeds dingen aan veranderd.</p>\r\n\r\n			<p>Verder komt er ook veel herhaling voor, een voorbeeld is het verversen van het beeldscherm. Dit gebeurt door pixel voor pixel van links naar rechts en van boven naar onder de kleur aan te passen (in RGBA*) en dat vaak 60 keer of meer per seconde! Door deze variabelen en herhaling te combineren samen met anderen instructies, kan een computer taken uitvoeren.</p>\r\n\r\n			<p>Het belangrijkste programma dat op een computer werkt is het OS (Operating System), oftewel het besturingssysteem. Dit zorgt ervoor dat het geluid, het bewegen van de cursor op het scherm en het toetsenbord allemaal werken.</p>\r\n\r\n			<p>Verder geeft het OS de mogelijkheid om andere programma\'s te laten werken die opdrachten kunnen geven aan het besturingssysteem. Ook zorgt het OS ervoor dat de rekenkracht goed wordt verdeeld over verschillende processen. Het werkt dus als een soort laag tussen de hardware (het fysieke deel) en de software (de code). De belangrijkste taak is misschien wel het registreren van input (data dat de gebruiker aan de computer geeft) en het terug kunnen geven van output, bijvoorbeeld het beeld of geluid. De vorm van de output wordt dan meestal wel weer door andere software geregeld, maar de OS maakt het mogelijk dat deze processen allemaal uitgevoerd kunnen worden.</p>\r\n\r\n			<p>*RGBA staat voor Red Green Blue Alpha. Alpha geeft aan hoe \'sterk\' de kleur moet zijn en is een waarde van 0 tot 1.</p>', '', ''),
(7, 1, 6, 'Standaardrepresentaties', '<p>\r\n				Een computer moet heel veel verschillende soorten data kunnen opslaan en gebruiken met alleen maar het binaire systeem. Sommige zaken lijken hiervoor misschien niet geschikt, zoals: afbeeldingen, geluid en letters. Voor deze soorten data zijn systemen ontwikkeld om ze te kunnen vertalen naar het binair systeem en in deze paragraaf ga je leren hoe dat in elkaar zit.\r\n			</p>\r\n			<p>\r\n				Afbeeldingen kun je zien als een heleboel kleine puntjes, oftewel pixels. Deze pixels hebben een kleur en deze bestaat uit een mix van rood, groen en blauw. Een computer vertaal zo\'n pixel naar RGB-waarde waarin staat hoeveel rood, groen en blauw die pixel bevat. Een hele reeks van pixels wordt dus een reeks RGB-waardes. Samen vormt zo\'n reeks RGB-waardes dus een afbeelding.\r\n			</p>\r\n			<p>\r\n				Video werkt niet erg anders, want video bestaat uit een reeks afbeeldingen. Als je dus een reeks met daarin weer die reeks van RGB-waardes zet kun je dus video binair opslaan.\r\n			</p>\r\n			<p>\r\n				Geluid kan gezien worden als een reeks toonhoogtes. Als je de toonhoogte omzet in een getal en dat voor alle toonhoogtes die achter elkaar voorkomen doet heb je al een geluidsbestand. Het is moeilijk om elk detail op te slaan, omdat er zo veel toonhoogtes voorkomen. Om toch ervoor te zorgen dat het haalbaar blijft wordt om een bepaalde de toonhoogte vastgelegd en niet voortdurend. Er gaat zo wel wat detail verloren, maar het bestand blijft beperkt in grote. Er is immers minder data nodig om het geluid weer te geven. Als je de hoeveelheid data dat gebruikt wordt om iets op te slaan verkleint heet dit compressie.\r\n			</p>\r\n			<p>\r\n				Letters kunnen ook worden omgezet naar een binair getal. Er zijn hiervoor verschillende afspraken gemaakt die andere getallen toekennen aan een teken. Een paar bekende systemen zijn: ASCII en UTF. Een voorbeeld van zo\'n waarde dat een getal representeert in ASCII is 1000001 (65), dit staat voor \'A\'. Een belangrijk verschillen systemen zoals ASCII en UTF is het aantal karakters dat ze kunnen weergeven en hoeveel opslag ervoor nodig is. Des te meer karakters opgeslagen kunnen worden, hoe meer opslag er nodig is. Er zijn namelijk meer unieke waardes nodig om alle karakters te kunnen onderscheiden.\r\n			</p>', '<ol>\r\n				<li>\r\n					Wat is compressie?\r\n				</li>\r\n				<li>\r\n					Hoe kan video ook wel gezien worden?\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					Iets opslaan met minder data. Hier gaat soms ook kwaliteit bij verloren.\r\n				</li>\r\n				<li>\r\n					Als een reeks frames of zelfs als een reeks van een reeks van RGB-waardes (van pixel -> frame -> video).\r\n				</li>\r\n			</ol>'),
(8, 2, 1, 'Introductie tot logica', '<p>\r\n				Logica is het combineren van feiten om nieuwe feiten op te kunnen stellen. Een bekend voorbeeld is de uitspraak: \"Alle mensen zijn stervelingen. Socrates is een mens. Dus Socrates is een sterveling.\" Twee feiten vormen hier dus het derde feit.\r\n			</p>\r\n\r\n			<p>\r\n				Logica is een vorm van wiskunde die vrij abstract lijkt. Het heeft zijn eigen notaties en betekenissen. Er wordt veel gebruik gemaakt van sets. Dit zijn eigenlijk groepen objecten of getallen, bijvoorbeeld katten, honden of priemgetallen.\r\n			</p>\r\n\r\n			<p>\r\n				Een van de andere regels bij logica is dat het +-teken union (samenvoeging) betekent. Dit wordt gebruikt bij de sets. Je kunt met + dus sets samenvoegen.  X (maal) betekent intersection (overlap). Dit kan ook voor sets gebruikt worden.  Verder betekent 1 alles, zoals in een set met auto\'s, hier betekent 1 alle auto\'s.\r\n			</p>\r\n\r\n			<p>\r\n				Een andere notatie voor + is ∪ en voor maal is ꓵ. ∪ kun je zien als bij elkaar en ꓵ als \'en\'.\r\n			</p>\r\n\r\n			<p>\r\n			Voorbeelden:\r\n			</p>\r\n\r\n			<p>\r\n				Stel set 1 bestaat uit katten. We delen set 1 in op basis van kleur; wit, grijs en bruin. We korten deze kleuren af met W, G en B. Je kunt nu zeggen dat bij set 1 W+G+B=1, want alle katten van deze set vallen onder die drie kleuren. Zo is W+G=1-B, alle katten met uitzondering van de bruine zijn wit of grijs. Er komen nu 0 rode (R) katten bij, nu is R=0, want geen enkele kat is rood.\r\n			</p>\r\n\r\n			<p>\r\n				Stel we hebben nu 5 witte, 2 grijze, 6 bruine en 0 rode katten. W+G of W ∪ G bevat dus 7 katten (5+2). Van de 5 witte katten zijn 3 man (M) en 2 vrouw (V). M x W of M ꓵ W bevat dus 3 katten, want 3 witte katten zijn man.\r\n			</p>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Stel er zijn 4 intel computers (I), 3 AMD computers (A) en 2 gemengde computers (M). Hoeveel computers zijn er in de volgende gevallen?\r\n\r\n					<ol>\r\n						<li>A + I</li>\r\n						<li>I &cap; A</li>\r\n						<li>A &cup; I</li>\r\n						<li>1</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					7 (= 4+3)\r\n				</li>\r\n				<li>\r\n					7 (= 4+3)\r\n				</li>\r\n				<li>\r\n					0, geen AMD computer is hier ook een Intel computer\r\n				</li>\r\n				<li>\r\n					9 (= 4+3+2)\r\n				</li>\r\n			</ol>'),
(9, 2, 2, 'Visuele logica', '<p>\r\n				De verbanden tussen sets kunnen ook visueel worden weergeven, bijvoorbeeld in de vorm van cirkels. Stel set 1 bevat 27, 3, 8, 21 en 6. Set 2 bevat 3, 0, 20, 8 en 4.\r\n			</p>\r\n			<p>\r\n				Set 1 &cap; 2 is dan:\r\n				<img src=\"./afbeeldingen/logic2Mul.svg\" class=\"theorieImage\" />\r\n			</p>\r\n			<p>\r\n				Set 1 ∪ set 2 is dan weer te geven als:\r\n				<img src=\"./afbeeldingen/logic2Add.svg\" class=\"theorieImage\" />\r\n			</p>\r\n			<p>\r\n				Of:\r\n				<img src=\"./afbeeldingen/logic2MulCom.svg\" class=\"theorieImage\" />\r\n			</p>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>Teken set 1 ∪ set 2 inclusief de getallen</li>\r\n						<li>Teken set 1 ꓵ set 2 inclusief de getallen</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Stel set 1 bevat 1, 3, 20, 6 en 400. Set 2 bevat 1, 6, 200, 8 en 4.\r\n					<ol>\r\n						<li><img src=\"./afbeeldingen/logic2Ans1.svg\" class=\"theorieImage\" /></li>\r\n						<li><img src=\"./afbeeldingen/logic2Ans2.svg\" class=\"theorieImage\" /></li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(10, 2, 3, 'Binair', '<p>\r\n				Een andere manier om logica te gebruiken is met booleans, oftewel ja of nee, true or false, 1 of 0.\r\n				Stel ik wil een witte kat met korte staart of een mannetjes kat v (v = of) een groene kat. Oftewel W(it)*K(ort)+M(an)+G(roen). Maal kan hier als \'en\' gezien worden en \'+\' als of. Stel ik vind een bruine mannetjes kat, dan kan ik dat weergeven als: 0*0+1+0=1, dus het voldoet. NB (nota bene/let op) 1+1=1, want true+true=true.\r\n			</p>\r\n			<p>\r\n				Een computer voert deze taken uit met de gates die in H1 besproken zijn.\r\n			</p>', '<ol>\r\n				<li>\r\n					Noem minimaal vijf mogelijke stappen die je volgt als je een auto wilt kopen.\r\n				</li>\r\n				<li>\r\n					Je wilt een mail sturen naar klasgenoten waarvan de naam niet begint met een r, jonger zijn dan 18, ouder dan 16 en graag naar de bioscoop gaan en actiefilms leuk vinden. Noem de stappen die een programma kan volgen om een mail te sturen naar deze klasgenoten, noteer minimaal 5 stappen.\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestionAlt\">\r\n				<li>\r\n					Juiste mogelijke stappen (er is meer mogelijk):\r\n					<ol>\r\n						<li>Kiezen tussen de verschillende soorten aandrijvingen; elektrisch, gas, benzine, diesel of op waterstof?</li>\r\n						<li>Kiezen hoe snel het moet zijn</li>\r\n						<li>Het budget bepalen</li>\r\n						<li>Een kleur kiezen</li>\r\n						<li>Bezoeken dealer</li>\r\n						<li>Testrit maken</li>\r\n						<li>Opties bekijken</li>\r\n						<li>Betalen</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					Juiste mogelijke stappen (er is meer mogelijk):\r\n					<ol>\r\n						<li>Schrijf alle namen op van klasgenoten</li>\r\n						<li>Streep de namen door van mensen waarvan de naam met r begint</li>\r\n						<li>Je noteert van de overige mensen de leeftijd</li>\r\n						<li>Je kijkt of de leeftijd van de klasgenoten tussen de 16 en 18 jaar ligt</li>\r\n						<li>Je vraagt aan deze mensen of ze graag naar de bioscoop gaan</li>\r\n						<li>De mensen die nee antwoorden streep je op de lijst door</li>\r\n						<li>Je vraagt aan de mensen die over zijn of ze actiefilms leuk vinden</li>\r\n						<li>Je vraagt aan de mensen die nog over zijn wat hun e-mailadres is</li>\r\n						<li>Je stelt een mail op</li>\r\n						<li>Je vult de adressen in van de overgebleven personen in</li>\r\n						<li>Je stuurt de mail</li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(11, 2, 4, 'Logica en programmeren', '<p>\r\n				Het opdelen van een probleem is erg belangrijk. Voornamelijk bij logisch nadenken en dus ook bij programmeren.  Als je een project gaat uitvoeren moet je een groot probleem in kleinere stukken kunnen hakken om te zorgen voor overzicht. Het wordt dan makkelijker om de problemen op te lossen.\r\n			</p>\r\n\r\n			<p>\r\n				Stel je wilt een website gaan maken, dan moet je eerst bedenken wat voor soort website het moet worden: hoe het gaat heten, wat wordt de structuur en hoe moet het eruit gaan zien, enz. Daarna kun je de logica van de site in stukken hakken. Stel je de flow van het programma op, oftewel hoe dingen met elkaar verbonden zijn en wat wanneer gebeurt. Een flow kan bijvoorbeeld zijn: ga naar de startpagina, klik op login, vul gegevens in, klik op submit, laat een script de gegevens analyseren, controleer de gegevens en bepaal of iemand ingelogd moet worden. Je kunt ook de taken indelen onder bepaalde programmeertalen, sommige talen zijn namelijk beter voor bepaalde problemen dan andere.\r\n			</p>\r\n\r\n			<p>\r\n				Als je vervolgens gaat programmeren kun je de stappen die je al bedacht hebt makkelijker omzetten in code. Je weet namelijk al wat de structuur van het programma gaat worden en hoeft niet steeds iets aan te passen door een veranderende structuur. Het is dus handig om eerst na te denken over hoe jouw programma in elkaar moet zitten voordat je het daadwerkelijk gaat ontwikkelen.\r\n			</p>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Beschrijf in maximaal 10 woorden de functie van de volgende onderdelen (dit hoeft niet in volledige zinnen).\r\n\r\n					<ol>\r\n						<li>de CPU</li>\r\n						<li>de GPU</li>\r\n						<li>het moederbord</li>\r\n						<li>het RAM</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>Het uitvoeren van algemene instructies.</li>\r\n						<li>Het uitvoeren van veel eenvoudige instructies tegelijkertijd.</li>\r\n						<li>Zorgen dat onderdelen onderling kunnen communiceren.</li>\r\n						<li>Het opslaan van data dat snel nodig is.</li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(12, 2, 5, 'Automaten', '<p>\r\n				Eindige automaten zijn systemen waarmee mogelijke processen worden vastgelegd. Het klinkt erg lastig, maar weest gerust.\r\n			</p>\r\n			<p>\r\n				Een voorbeeld zal hierbij helpen. Je wilt online een boek gaan kopen, maar weet nog niet welk boek. Je kunt dan een paar stappen volgen en er zijn verschillende uitkomsten mogelijk.\r\n			</p>\r\n			<img src=\"./afbeeldingen/automaat.svg\" />\r\n			<p>\r\n				Je legt dus vast welke toestanden er mogelijk zijn en hoe toestanden elkaar opvolgen.\r\n			</p>\r\n			<p>\r\n				Als de kans dat een bepaalde route gevolgd wordt 100% is dan is het deterministisch, dat is bij het voorbeeld niet het geval. Het is mogelijk dat je boek wel of niet te duur vindt, het is van tevoren niet zeker.\r\n			</p>\r\n			<p>\r\n				Herhaling is ook mogelijk, zo als te zien is in het voorbeeld bij de pijl van \"Je vindt het te duur\" naar \"Je gaat zoeken\".\r\n			</p>', '<ol>\r\n				<li>\r\n					Maak zelf een automaat voor het gebruiken van een wasstraat. Je mag zelf bepalen wat de mogelijkheden precies zijn.\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					<img src=\"./afbeeldingen/automaatAntwoord.svg\" />\r\n				</li>\r\n			</ol>'),
(13, 2, 6, 'Grammatica', '<p>\r\n				Grammatica is een set regels waar aan voldaan moet worden om een bruikbare waarde te hebben. Denk maar aan het Nederlands. Een \'zin\' zoals \"Gaan winkel de we zo naar voor boodschappen voor komende week!\" is niet bruikbaar, een zin zoals \"Gaan we naar de winkel voor boodschappen voor komende week?\" is wel bruikbaar. Bij informatica geld hetzelfde principe, een bruikbare waarde moet aan een aantal eisen voldoen.\r\n			</p>\r\n			<p>\r\n				Een voorbeeld voor bij informatica is de opbouw van een postcode, die is al volgt cijfer + cijfer + cijfer + cijfer + letter + letter. Zo kun je bijvoorbeeld 1234AB krijgen, maar niet B23A41. Zo\'n regel of opbouw kun je voor allerlei dingen gebruiken, denk aan: telefoonnummers, adressen, leeftijden en e-mailadressen.\r\n			</p>\r\n			<p>\r\n				Het is ook mogelijk om deze grammaticaregels in een schema weer te geven.\r\n			</p>\r\n			<img src=\"./afbeeldingen/grammatica.svg\" />\r\n			<p>\r\n				Bij straatnaam zie je een voorbeeld van herhaling, namelijk de pijl die na letter terug gaat naar voor letter. Het betekent hier dat een onbekend aantal letters achter elkaar mag voorkomen.\r\n			</p>\r\n			<p>\r\n				Bij letter zie je een voorbeeld van meerdere opties, namelijk de vertakkingen boven elkaar. Deze vertakkingen beteken dat elk van de boven elkaar staande waardes geaccepteerd wordt. Je ziet ook drie puntjes tussen \'b\' en \'c\'. Deze puntjes betekenen dat alle waardes die ertussen horen ook goed zijn, dit mag alleen gebruikt worden wanneer het duidelijk naar welke waardes het refereert. In dit geval gaat het om alle kleine letters.\r\n			</p>', '<ol>\r\n				<li>\r\n					Hoe ziet de grammatica voor een punt van een toets eruit?\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					<img src=\"./afbeeldingen/grammaticaAntwoord.svg\" />\r\n				</li>\r\n			</ol>'),
(14, 3, 1, 'Wat is filosofie?', '<p>Filosofie of wijsbegeerte kan worden gezien als de studie van kennis en stelt vragen over het bestaan, rationaliteit en kennis met als doel om de persoon als een individu beter te maken.</p>\r\n\r\n			<p>Vaak zijn filosofische vragen fundamenteel en abstract, je leert filosofie vaak door zelfreflectie in plaats van experimenten. Dit betekent ook dat wijsbegeerte niet een empirische wetenschap is. Empirisme neemt aan dat kennis uit ervaring en experimenten komt, zo zijn wetenschappen zoals natuurkunde en scheikunde empirisch. Hier tegenover staat rationalisme en formele wetenschappen waarin kennis gebaseerd is op rationaliteit en logica. Wiskunde en logica vallen hieronder.</p>\r\n\r\n			<p>Filosofie en programmeren vallen beide onder de formele wetenschappen, en hebben meerdere overeenkomsten. Ze volgen bijvoorbeeld vergelijkbare denkstappen, zowel filosofie en programmeren pakken grote problemen en vraagstukken aan die je niet in een keer kan oplossen, je moet het verdelen in kleinere, begrijpelijke vragen.</p>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Deze vragen hebben geen concrete antwoorden, ze zijn reflecties van wie je bent en hoe je denkt. Probeer het standpunt van jouw antwoord te nemen en het te discussiëren met iemand met een verschillend standpunt.\r\n\r\n					<ol>\r\n						<li>Heb je vrij wil?</li>\r\n						<li>Wat is een goede daad?</li>\r\n						<li>Kan kunstmatige intelligentie bestaan?</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestionAlt2\">\r\n				<li>\r\n					Hier zijn antwoorden van verschillende filosofische stromingen:\r\n\r\n					<ol>\r\n						<li>\r\n							<ol>\r\n								<li>\r\n									Breinreductionisten (Victor Lamme): De vrije wil bestaat niet, de mens is een resultaat van chemische processen in het brein. Het zelf is een illusie.\r\n								</li>\r\n								<li>\r\n									René Descartes: Je kunt aan alles twijfelen behalve het ik. Het ik is degene die twijfelt. Het ik is een onstoffelijke geest die het lichaam bestuurt.\r\n								</li>\r\n							</ol>\r\n						</li>\r\n						<li>\r\n							<ol>\r\n								<li>\r\n									Hedonisme: Een daad is goed wanneer ik er blij van word. Genot is het belangrijkste doel in het leven en is hetgeen waar iedereen naar moet streven.\r\n								</li>\r\n								<li>\r\n									Immanuel Kant: Een daad is goed wanneer een maatschappij er beter van wordt als iedereen dit doet. Bijvoorbeeld: \"Liegen is niet een goede daad omdat een maatschappij niet kan bestaan als iedereen tegen elkaar zou liegen.\r\n								</li>\r\n								<li>\r\n									Utilitarisme (Jeremy Bentham): Het is een goede daad wanneer het resultaat positief is.\r\n								</li>\r\n							</ol>\r\n						</li>\r\n						<li>\r\n							<ol>\r\n								<li>\r\n									Ja, een AI is een brein van silicium en is in staat om veel sneller en efficiënter te werken dan een menselijk brein.\r\n								</li>\r\n								<li>\r\n									Nee, AI is een programma en bestaat uit door mens geschreven code en kan niet emoties ervaren dat centraal staat tot een mens. Een AI kan wel simuleren dat het emoties heeft zoals blijheid en verdriet maar ervaart ze niet. Dit zorgt voor een fundamentele verschil in bewustzijn.\r\n								</li>\r\n							</ol>\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(15, 3, 2, 'Wat is ethiek?', '<p>In de vorige paragraaf heb je de vraag, \"Wat is een goede daad?\" beantwoord. Dit is een van de ingewikkeldste vragen in de filosofie en vormt een stroming in de filosofie genaamd ethiek. Ethiek is de studie waarin men de concepten van goed en slecht systematiseert en verdedigd.\r\n			</p>\r\n\r\n			<p>Digitale technologieën zoals het internet, mobieltjes en programmeren zijn relatief nieuw en de regels hiervan zijn vaak onduidelijk. Daarom is het belangrijk om, wanneer je een programma schrijft, rekening te houden met wat voor een invloed het heeft op jouw omgeving.</p>\r\n\r\n			<p>Een paar vragen die je je kunt afvragen zijn:</p>\r\n\r\n			<ul>\r\n				<li>Mag je een programma schrijven dat data van gebruikers vertaalt naar mogelijke reclames?</li>\r\n\r\n				<li>Mag je iets maken dat in staat is om mensen te bespioneren via hun microfoons?</li>\r\n			</ul>\r\n\r\n			<p>Verschillende groepen mensen hebben een richtlijn hierover gecreëerd, zo heeft de ACM (Association for Computing Machinery) een ethische code gemaakt:</p>\r\n\r\n			<ul>\r\n				<li>Draag bij aan de maatschappij en menselijk welzijn</li>\r\n\r\n				<li>Schaad anderen niet</li>\r\n\r\n				<li>Wees eerlijk en betrouwbaar</li>\r\n\r\n				<li>Waardeer intellectueel eigendommen</li>\r\n\r\n				<li>Respecteer privacy</li>\r\n\r\n				<li>Behoud de geheimplicht en deel dus geen informatie onnodig met anderen.</li>\r\n			</ul>', '<ol class=\"MLquestion\">\r\n				<li>\r\n					Deze vragen hebben geen concrete antwoorden, ze zijn reflecties van wie je bent en hoe je denkt. Probeer het standpunt van jouw antwoord in te nemen en erover te discussiëren met iemand met een ander standpunt.\r\n\r\n					<ol>\r\n						<li>Mag je iets maken dat intelligentie van mensen kan berekenen?</li>\r\n						<li>Mag je iets maken dat vrije wil van mensen mag overschrijven?</li>\r\n					</ol>\r\n				</li>\r\n			</ol>', '<ol class=\"MLquestionAlt2\">\r\n				<li>\r\n					Hier zijn mogelijke antwoorden met verschillende filosofische richtingen:\r\n\r\n					<ol>\r\n						<li>\r\n							<ol>\r\n								<li>\r\n									Voorbeeld wel: Binnen educatie is personalisatie belangrijk, kinderen appreciëren het wanneer een leraar ze beter kent, een programma dat intelligentie kan berekenen kan er voor zorgen dat kinderen betere educatie krijgt en niet constant van niveaus veranderen.\r\n								</li>\r\n								<li>\r\n									Voorbeeld niet: Hoewel een programma dat in staat is om intelligentie op massale schaal kan berekenen niet direct een van de ACM richtlijnen overschrijdt betekent niet dat het ethisch goed is. Gebruik logica om te voorspellen wat een programma als dit kan doen. Wanneer mensen in staat zijn om anderen te onderscheiden gebaseerd op een zichtbaar verschil zullen extremere groepen mensen kunnen categoriseren. Mensen kunnen privileges en banen krijgen gebaseerd op IQ.\r\n								</li>\r\n								<li>\r\n									Richting gevolgenethiek: We baseren ethiek op het resultaat, wanneer een actie meer positieve dan negatieve gevolgen heeft dat is het ethisch goed. Een positief gevolg is gebaseerd op hoeveel goed het brengt in de wereld. Een actie zoals dit zal meer kans hebben om misbruikt te worden en is ethisch niet goed.\r\n								</li>\r\n								<li>\r\n									Richting plichtethiek: Kant geloofde in het categorische imperatief. Dit betekent dat wanneer een actie door iedereen in een samenleving wordt uitgevoerd en de maatschappij blijft neutraal of wordt hier beter op, dan is de actie ethisch goed. Bijvoorbeeld: Als iedereen in een maatschappij zou liegen, dan zal de maatschappij niet beter ervan worden, het zal juist uit elkaar vallen. Daarom is liegen nooit ethisch goed in de ogen van Kant. Een programma om intelligentie te berekenen heeft een grote risico op de samenleving en is dus ethisch niet goed.\r\n								</li>\r\n								<li>\r\n									Richting nihilisme: Friedrich Nietzsche geloofde in het nihilisme. Nihilisme is wanneer je denkt dat mensen zo onbelangrijk zijn in het universum dat het leven al zijn betekenis heeft verloren. Nietzsche geloofde ook dat de mens moet proberen een betekenis en een doel voor zichzelf moet creëren, de mens moet proberen een doel in het leven te vinden en zo een hogere mens worden. De hogere mens kan dan de normale mens achterlaten en verder evolueren. Een programma dat intelligentie kan berekenen kan dit process versnellen en de mensheid \"verbeteren\", daarom is dit ethisch wel een goed doel om te hebben.\r\n								</li>\r\n							</ol>\r\n						</li>\r\n						<li>\r\n							<ol>\r\n								<li>\r\n									Voorbeeld wel: Geheimen kunnen gevaarlijk zijn voor een samenleving. Wanneer je het vrije wil van een terrorist overschrijft kan je verdere aanvallen voorkomen.\r\n								</li>\r\n								<li>\r\n									Voorbeeld niet: We leven in een liberale samenleving waarin menselijke vrijheid centraal staat. Om vrijheid te overschrijven is gelijk aan fundamentele rechten van de mens te verbreken.\r\n								</li>\r\n								<li>\r\n									Richting gevolgenethiek: Hoewel er goede gevolgen kunnen komen van een machine zoals dit, zijn de negatieve gevolgen veel te extreem. Dit is een ethisch slechte actie.\r\n								</li>\r\n								<li>\r\n									Plichtsethiek: Als in een samenleving de vrije wil van iedereen kan worden overschreven zal dit resulteren in een samenleving waarin iedereen veilig is in de ruil voor vrijheid. Als je veiligheid over vrijheid prioriteert zal dit een goede actie zijn, als je vrijheid ziet als een belangrijke recht voor de mens dan is dit een slechte actie.\r\n								</li>\r\n							</ol>\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>'),
(16, 3, 3, 'Het trein probleem', '<p>Stel je voor dat je in een treinwagon zit en op het spoor voor je zit een wissel, op spoor A staat één mens, op spoor B staan vijf mensen. Je kunt de trein niet stoppen. Wat doe je?</p>\r\n\r\n			<ol>\r\n				<li>\r\n					Je volgt spoor A.\r\n				</li>\r\n				<li>\r\n					Je volgt spoor B.\r\n				</li>\r\n				<li>\r\n					Je maakt geen keuze.\r\n				</li>\r\n			</ol>\r\n\r\n			<p>Voor de meeste mensen is dit een makkelijke keuze, wanneer je het (mensen)leven waardeert zal je willen dat zo min mogelijk mensen dood gaan. Volgens de gevolgenethiek van Bentham en Mill zou je dus spoor A volgen en de vijf mensen redden.</p>\r\n\r\n			<p>Er zijn meerdere varianten van dit denk-experiment, wat nou als er anderen mensen en aantallen gebruikt worden? Wat zou je kiezen als je moest kiezen tussen:</p>\r\n\r\n			<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							vijf mensen\r\n						</li>\r\n						<li>\r\n							zes mensen\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							een jong kind\r\n						</li>\r\n						<li>\r\n							5 gepensioneerden\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Koning Willem-Alexander\r\n						</li>\r\n						<li>\r\n							Een geschiedenis student\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Een natuurkunde professor\r\n						</li>\r\n						<li>\r\n							Een ICT professor\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Jouw ouders\r\n						</li>\r\n						<li>\r\n							5 onschuldige mensen\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>\r\n\r\n			<p>Zoals je waarschijnlijk al hebt gemerkt zijn sommige keuzes makkelijker dan de andere. De vraag is natuurlijk wat dit te maken heeft met programmeren.</p>\r\n\r\n			<p>Stel, Elon Musk is een grote fan van jouw programma\'s en neemt jou aan als een developer voor de zelfrijdende Tesla auto\'s. Hoewel het doel van een Tesla is om menselijke fouten te vermijden zijn sommige fouten onvermijdelijk. Als een Tesla rond aan het rijden is met een familie die net terugkomt van Disneyland gebeurt het volgende: twee straten voordat ze thuiskomen steekt een groep kinderen van groep 4 over. De Tesla kan nu of:</p>\r\n\r\n			<ol>\r\n				<li>\r\n					Tegen een boom aan botsen en het leven van de familie riskeren en de kinderen van groep 4 redden.\r\n				</li>\r\n				<li>\r\n					Proberen uit te wijken en riskeren om tegen de kinderen te botsen.\r\n				</li>\r\n			</ol>\r\n\r\n			<p>Een computer is niet in staat om dit probleem op te lossen. Wat moet jij als programmeur hier aan doen? Als mens heb je een set normen en waarden, regels die jou zijn aangeleerd vanaf dat je geboren bent. Je mag bijvoorbeeld niet zomaar stelen of liegen. Een algoritme heeft dat niet. Wanneer een computer moet bepalen wie het moet aanrijden denkt het niet aan interpersoonlijke relaties, het denkt niet aan de waarde die mensen hebben in de samenleving, dat is jouw taak.</p>\r\n\r\n			<p>Dus, je krijgt nu de onmogelijke taak, je moet waardes geven aan mensen. Hoe kun je dat doen? Sommige mensen zullen claimen dat alle mensen gelijk aan elkaar staan, dat is geen slecht begin. We beginnen we met de regel:</p>\r\n\r\n			<p>-Probeer zo weinig mogelijk mensen te verwonden.</p>\r\n\r\n			<p>We hebben natuurlijk meer regels nodig, want soms moet je een keuze maken waarbij evenveel mensen bij keuze A of B benadeeld worden. We kunnen bijvoorbeeld zeggen dat mensen boven de 68 jaar minder meetellen. Ze contribueren tenslotte minder aan een maatschappij. Dus:</p>\r\n\r\n			<p>-Mensen boven de 68 jaar worden niet geprioriteerd.</p>\r\n\r\n			<p>Maar, als we mensen zouden prioriteren gebaseerd op hun nuttigheid in de maatschappij, moeten we dan de werklozen en drugsverslaafden ook minder meetellen? Het volgt dezelfde regel, dus:</p>\r\n\r\n			<p>-Mensen krijgen een andere telling gebaseerd op hun contributie in de maatschappij.</p>\r\n\r\n			<p>Zo kun je natuurlijk doorgaan, begin met regels op te stellen en ga door totdat je een heel regelboek hebt bedacht voor jouw Tesla. Nu is het tijd om het in de praktijk uit te testen. Laten we hiervoor de A en B vragen nemen die eerder zijn gesteld. Wat zou de Tesla volgens jou moeten kiezen voor het beste resultaat?</p>\r\n\r\n			<ol class=\"MLquestion\">\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							vijf mensen\r\n						</li>\r\n						<li>\r\n							zes mensen\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							een jong kind\r\n						</li>\r\n						<li>\r\n							5 gepensioneerden\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Koning Willem-Alexander\r\n						</li>\r\n						<li>\r\n							Een geschiedenis student\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Een natuurkunde professor\r\n						</li>\r\n						<li>\r\n							Een ICT professor\r\n						</li>\r\n					</ol>\r\n				</li>\r\n				<li>\r\n					<ol>\r\n						<li>\r\n							Jouw ouders\r\n						</li>\r\n						<li>\r\n							5 onschuldige mensen\r\n						</li>\r\n					</ol>\r\n				</li>\r\n			</ol>\r\n\r\n			<p>Misschien heb je het al opgemerkt, maar nu ben je niks anders aan het doen dan het opstellen van waarden aan mensen gebaseerd op verschillende eigenschappen.</p>', '', ''),
(17, 3, 4, 'Informatica en de maatschappij', '<p>\r\n				Je hebt nu gezien dat ook bij informatica keuzes gemaakt moeten worden die een invloed hebben op de maatschappij. Deze paragraaf gaan we verder met dit onderwerp aan de hand van een paar voorbeelden.\r\n			</p>\r\n			<p>\r\n				Het internet heeft de wereld flink veranderd en is mogelijk geweest door de vele ontwikkelingen op het gebied van informatica. Waar voorheen mensen nog zaken moesten opzoeken in boeken of iemand moesten bellen is er vandaag het internet. Het zorgt ervoor dat je makkelijker met mensen kunt communiceren en snel iets kunt opzoeken.\r\n			</p>\r\n			<p>\r\n				Social media hebben ook een grote invloed op de maatschappij. Je kunt nu zien waar iemand vorige week geweest is, hoe zijn laatste vakantie was of wat er nu actueel is. Aan een kant zorgt het ervoor dat mensen beter met elkaar verbonden zijn en informatie meer mensen kan bereiken. Aan de andere kant raken er mensen verslaafd aan of worden er depresief door en ook privacy heeft er flink onder te leiden. De cultuur is ook veranderd door sociale media. Sommige mensen maken bijvoorbeeld een foto en delen deze online als ze ergen heen gaan of ze delen verhalen over wat ze hebben meegemaakt met miljarden mensen. Sociale media kan ook gebruikt worden om jouw mening te delen en actie te voeren, denk bijvoorbeeld aan de \'me too\' beweging.\r\n			</p>\r\n			<p>\r\n				Je ziet dat informatica grote invloed kan hebben op de maatschappij en dat dit zowel goed als slecht kan zijn. Het is dus belangrijk om goed na te denken over wat de gevolgen kunnen zijn van ontwikkelingen waar jij misschien wel aan gaat meewerken.\r\n			</p>', '<ol>\r\n				<li>\r\n					Wat vind je zelf van de invloed van informatica op de cultuur?\r\n				</li>\r\n			</ol>', '<ol>\r\n				<li>\r\n					Eigen antwoord\r\n				</li>\r\n			</ol>');

-- --------------------------------------------------------

--
-- Tabelstructuur voor tabel `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `naam` tinytext COLLATE utf8_bin,
  `username` tinytext COLLATE utf8_bin NOT NULL,
  `password` text COLLATE utf8_bin NOT NULL,
  `school` tinytext COLLATE utf8_bin,
  `functie` tinytext COLLATE utf8_bin,
  `klas` tinytext COLLATE utf8_bin,
  `creation_date` date NOT NULL,
  `expire_date` date DEFAULT NULL,
  `group_name` tinytext COLLATE utf8_bin,
  `group_role` tinytext COLLATE utf8_bin,
  `email` tinytext COLLATE utf8_bin,
  `NFailedLogins` int(11) DEFAULT NULL,
  `LFailedLogin` datetime DEFAULT NULL,
  `LActivity` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Gegevens worden geëxporteerd voor tabel `users`
--

INSERT INTO `users` (`id`, `naam`, `username`, `password`, `school`, `functie`, `klas`, `creation_date`, `expire_date`, `group_name`, `group_role`, `email`, `NFailedLogins`, `LFailedLogin`, `LActivity`) VALUES
(336, 'test982267', 'test982267', '$2y$10$xFpjIMouA.qUnjr4iID5YOY5knT9H5YLR/77O373avW2IdcWvYA5m', 'test', 'docent', NULL, '2018-08-26', '2019-08-26', NULL, NULL, NULL, 1, '2019-04-03 20:54:28', NULL),
(337, 'test675547', 'test675547', '$2y$10$WlkywhNPbN0kjCiivvDemeZgWqoXzy7u5j5DSbfdU4zvkBLzFKKSy', 'test', 'docent', NULL, '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(338, 'test340631', 'test340631', '$2y$10$zmiDwPjtfHXoWliH2nLBTudMlruRs/ZBmhpxv.ZPHiMr/2.Acs8ce', 'test', 'docent', NULL, '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(339, 'test016805', 'test016805', '$2y$10$EmBa0o.Cx4A9605km5nnL.srTiFE.QUOTV82BmHxmOwaJzvctj3Me', 'test', 'docent', NULL, '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(340, 'test631834', 'test631834', '$2y$10$rRoJPKwq2orxvfqowiPYpey2cjnmWktPlYkMm9aQVeX9OomR7IyCO', 'test', 'docent', NULL, '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(341, 'test675879', 'test675879', '$2y$10$aQMworv36cL9mioOCDU2oOjMhoMa6SrYrFfvpozfJDzebJnt5h0BO', 'test', 'leerling', 'A', '2018-08-26', '2019-08-26', 'testgroep', 'tester', 'mail', 0, NULL, '2018-09-25 02:17:17'),
(342, 'test708823', 'test708823', '$2y$10$GS1LuqsvN1KGcKBgRXQc/u2f0LRO2d9jUAj/mIYyRrP.OmqqE.4Uq', 'test', 'leerling', 'A', '2018-08-26', '2019-08-26', 'testgroep', NULL, NULL, NULL, NULL, NULL),
(343, 'test768793', 'test768793', '$2y$10$af08DHfX9zulB3xcpqR.7.b3IUPyDdwaG9/kswJwHKsEOwkw2PppG', 'test', 'leerling', 'A', '2018-08-26', '2019-08-26', 'testgroep', NULL, NULL, NULL, NULL, NULL),
(344, 'test696069', 'test696069', '$2y$10$.WCL5xXQCkDdWCExCYS2mOkVK27e.eG5eQutu94WkbTW7scblaRge', 'test', 'leerling', 'A', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(345, 'test810567', 'test810567', '$2y$10$2ebghyfjyjzQDLCEhTrRouWfVgg7dkDREZ0Kpf0L.M0BkLSEjR6G6', 'test', 'leerling', 'B', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(346, 'test600994', 'test600994', '$2y$10$Ak/vCAISCMci/2t9b1sHOOnj988/D95nEvmLIN8hg24.YotONczO.', 'test', 'leerling', 'A', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(347, 'test614829', 'test614829', '$2y$10$6XT7wjmH5qUvugQSLzPHvOoJwilUCZrOsv/wc0IWl/k6JKMJ047F6', 'test', 'leerling', 'A', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(349, 'test667623', 'test667623', '$2y$10$0.yrplDUXEitWa9KWmRE7Oc7AWbuW7A.QeGxYozk7wZMthnwaa4yq', 'test', 'leerling', 'A', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(350, 'test913225', 'test913225', '$2y$10$3yCtSViwGdqQo9r/9rSOjOOu8zL8Krr9NLuVk8neVEviNdIp/G6NS', 'test', 'leerling', 'A', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(351, 'test708200', 'test708200', '$2y$10$PMP/fHzgAQYs.hudQCjVWeyzgGZ4qKjV03vxQlNr.qtr76f5x6TuO', 'test', 'docent', NULL, '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(352, 'test952124', 'test952124', '$2y$10$cXLievMTCLMotghbVMHzjOYXWYIrw8zBKlcpoNMz5RGQO03G6UGFq', 'test', 'docent', NULL, '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(353, 'test827018', 'test827018', '$2y$10$rwKdJMl.zSf0lLEBxd26Ku0tcWmrxTVAC8DttNPGgHzUkFz990XTO', 'test', 'leerling', 'A', '2018-08-26', '2019-08-26', 'test', 'main developer', NULL, 0, NULL, NULL),
(354, 'test660548', 'test660548', '$2y$10$LCEYGTlcLBjDcpaPPsPiGOtTPgaVZyc8krIkTHEFjhHICJ8GFWPJO', 'test', 'leerling', 'A', '2018-08-26', '2019-08-26', 'test', NULL, NULL, NULL, NULL, NULL),
(355, 'test755983', 'test755983', '$2y$10$Zu5tv01ANnvvf53pLKpBDOe.zRYGVSPzGpVq3JYSfkzXKmpHTMiNG', 'test', 'leerling', 'A', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(356, 'test709058', 'test709058', '$2y$10$RhWDn2cn9o1KtOrc9IzYBeGJ9AGOPSgd9/3FBaSG.lY/G2I95dTiu', 'test', 'leerling', 'A', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(357, 'test307924', 'test307924', '$2y$10$.3EPmhd3sztVw7DiBsczoOoY1h03zMOXPFVr9XxQYht3y0W/7oMi6', 'test', 'leerling', 'A', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(359, 'leerling', 'leerling', '$2y$10$z4aq1c.uHaqblMzojmK/4eDTJ17N/tH6E4OQYerxnxdlOKzYhoEPK', 'test', 'leerling', 'klas1', '2018-08-26', '2019-08-26', NULL, 'test_rol', NULL, 0, '2018-09-27 18:23:46', '2019-04-03 21:24:25'),
(361, 'docent', 'docent', '$2y$10$Rkw/QL9pTeesIlXwtZ2li.MBLZqLyHcaXEDZ.mSo8uMC7zk9LWp86', 'test', 'docent', NULL, '2018-09-01', '2019-09-01', NULL, NULL, NULL, 0, '2019-03-16 09:47:02', '2019-04-15 16:54:58'),
(362, 'test441173', 'test441173', '$2y$10$El.nAocP0IDMrtWuV0A8mu17RDBbJcgk.cw55oLnPi.tMO3JbfSF6', 'test', 'docent', NULL, '2018-09-09', '2015-09-09', NULL, NULL, NULL, 0, NULL, NULL),
(363, 'test956641', 'test956641', '$2y$10$oJASR1zKZrmZTnVDRVsRqeAdAqm6G1N.e9zD8rufD4UVDSZCJj2de', 'test', 'leerling', '1', '2018-09-09', '2019-09-09', NULL, NULL, NULL, NULL, NULL, NULL),
(953, 'test_docent1', 'test_docent1', '$2y$10$ZcugOZs9Ds3r9UQuO8efrOlu2/BSszWuQ5Jo6O9cC0LwfI02Rdgfe', 'test_school', 'docent', NULL, '2018-08-26', '2025-08-26', NULL, NULL, NULL, 0, '2019-03-30 19:37:13', '2019-04-18 21:59:44'),
(954, 'test_docent2', 'test_docent2', '$2y$10$GCMhSHaNor6GNOtwOIhACOP1bIggWmoyjcBiMDUS5Kx4OAznDkJZe', 'test_school', 'docent', NULL, '2018-08-26', '2019-08-26', NULL, NULL, NULL, 0, '2018-08-26 09:39:01', NULL),
(955, 'test_docent3', 'test_docent3', '$2y$10$Qvpw8AE2urtJWEoyD4oy4OgDmA6ptjAwOijy.F..hJKhmHo4YEYlO', 'test_school', 'docent', NULL, '2018-08-26', '2019-08-26', NULL, NULL, NULL, 0, NULL, NULL),
(956, 'test_docent4', 'test_docent4', '$2y$10$5C2wkOUJ4wEHEQisGBh7z.4aOiQifmS1rLbcuiR4ojLv/FJSQiI12', 'test_school', 'docent', NULL, '2018-08-26', '2019-08-26', NULL, NULL, NULL, 0, NULL, NULL),
(957, 'test_docent5', 'test_docent5', '$2y$10$XIg2y2Jctkra1HQ5JoMm1eK.T1LKyxk1FNaDXOcmg/nYP/0FDrO.S', 'test_school', 'docent', NULL, '2018-08-26', '2019-08-26', NULL, NULL, NULL, 0, '2018-08-26 09:44:02', NULL),
(958, 'test_leerling_havo1_1', 'test_leerling_havo1_1', '$2y$10$WPG.G.v9aa.EGKBm1v57tOdU.3Ajgmk612OLCHHnNqzk3b6DqmIae', 'test_school', 'leerling', 'havo1', '2018-08-26', '2025-08-26', 'Test_groep1', NULL, NULL, 0, '2018-09-27 15:00:22', NULL),
(959, 'test_leerling_havo1_2', 'test_leerling_havo1_2', '$2y$10$00ghmA1BF2xYDoOB8pbtV.q6qxpVfgqaGCLHR3pleY9pRYFPIaf7O', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', 'Test_groep1', NULL, NULL, 0, NULL, NULL),
(960, 'Luc', 'test_Luc', '$2y$10$3fy89XsKcFnGt0.2YWPPyei8LspRSw1BP1F8DbdYHDaWZri7dthXa', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', 'Inforca', NULL, NULL, 0, NULL, NULL),
(961, 'Sam', 'test_Sam', '$2y$10$EF38j6hs0w3nLvtpIfTyUeOp2BC.cAM7d5IpTMDUY/XuET.dPfB5S', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, 0, NULL, NULL),
(962, 'Sanne', 'test_Sanne', '$2y$10$pjuJ.Q6Sn/UtzzuBAPB4leXeHYSalzJrsTicn3tIKQCTBnrTUhh2a', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', 'Inforca', NULL, NULL, 0, NULL, NULL),
(963, 'Max', 'test_Max', '$2y$10$YabaR610d5/OaGILCDDg0eqvPqV7c63EHeyLKkMyOpYUeYgNuWLNK', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', 'Inforca', NULL, NULL, 0, '2018-08-26 14:56:25', NULL),
(964, 'Lars', 'test_Lars', '$2y$10$xw8vVs2TNZPM9SBqNWG5tehhzJzLohTibUiCpf9YJgSKzlXraZPoC', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', 'Inforca', NULL, NULL, 0, NULL, NULL),
(965, 'Jordy', 'test_Jordy', '$2y$10$I7Aj4Ha4uy8//bN06f6wBu1tvmQubgLzv6ggRop6WBC4v8TAPEe4O', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', 'Inforca', NULL, NULL, 0, NULL, NULL),
(966, 'test_school602356', 'test_school602356', '$2y$10$eQ5cLHUEb3pLpB/ap1WvQuIX5xWHuiwgcdldbuHV7HfA3YEADRgAG', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', 'Test_groep2', NULL, NULL, NULL, NULL, NULL),
(967, 'test_school763150', 'test_school763150', '$2y$10$Y9bI4oimPGaRa2XmQT1rK.yHkpbRHdQ4QCkASyzXZk/Exgq7AtlsS', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(968, 'test_school973657', 'test_school973657', '$2y$10$pIwhehZ48k7iRY/Db8GVe.uFgPrMvyfY11MKWMffbB7KrBieZcVa2', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(969, 'test_school396800', 'test_school396800', '$2y$10$yXu4ap4y4UdokTyoy0LK/.m6G51meD42TExiBRfeNYyHTQkVulabC', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(970, 'test_school386112', 'test_school386112', '$2y$10$FCsrRYSTJewg6Fpsg3eNnegiuiN2hX5HjjBnBodES1Pkc5z.TklI2', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(971, 'test_school358996', 'test_school358996', '$2y$10$5vCJC1CD.CLXtUw3app5me58ibAiweVsCP2pvvGe6d9VEf/VmytOG', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(972, 'test_school752249', 'test_school752249', '$2y$10$YzlhfnbyrWu/JULAonTUGusNlFtKa95SfaXQeWIR/HlTpHffEBgDC', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(973, 'test_school380012', 'test_school380012', '$2y$10$IBA8EkOq64t8JIfj9.6KNubLnyVlkbYUzUkTT/689OCfSEwwcuVXu', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(974, 'test_school276280', 'test_school276280', '$2y$10$lvfb50ja9wnC/B25Jx7tpead7uMbvlW7k0tz5dfCLKod9wnE2fCPy', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(975, 'test_school844054', 'test_school844054', '$2y$10$mHuh2/M5iSYZuVuxYb7EtuYGPMJ4RNBLj5JEcZ7hVIrXwO.kZeMOS', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(976, 'test_school155347', 'test_school155347', '$2y$10$CCCLeRAnDUrivIHWjWnleehDy07mkH.W0NvMdXLtOtrXgxbjASrHq', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(977, 'René', 'test_leerling_René', '$2y$10$mXoHfiYTX5rqf4tEaayqWeIrzKDI4iP7D1AheQL0BATLh/sXp0yhe', 'test_school', 'leerling', 'havo1', '2018-08-26', '2019-08-26', 'Inforca', 'Ontwikkelaar', 'koffieandcode@gmail.com', 1, '2018-08-28 22:05:50', NULL),
(978, 'test_school259364', 'test_school259364', '$2y$10$TJqoi49P5dSbUv4vCP9CX.VYHqK/vFCpaix4QJr8uQWj8RUwNRO3u', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', 'Test_groep1', NULL, NULL, NULL, NULL, NULL),
(979, 'test_school694574', 'test_school694574', '$2y$10$NpbkiVg4.CE8auWXLe7qNu2/icFbjwsuNbmcwYZ4apNvv2lXicw9C', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(980, 'test_school834349', 'test_school834349', '$2y$10$NjNd1E6BJUxmKmTjB2MmYuKXSWqrtgYUjdjE04Koqkr9d1TZysta2', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(981, 'test_school502093', 'test_school502093', '$2y$10$tkTgn1o4RkJGky2KIaoJmOkIcGSRndNQlrgfOi.djaBCNqyseZNTu', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(982, 'test_school523250', 'test_school523250', '$2y$10$wZXRBH0XutxTOOuvfbZqC.ldETvJql6xj.CSQQlVsdwr.wLA3yRrO', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(983, 'test_school337199', 'test_school337199', '$2y$10$zWmk0RBUsotgaOTibm0Jte73VewrjH5dVvRYoXDQw/vendKFQevhS', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(984, 'test_school654849', 'test_school654849', '$2y$10$QyDCBUleLJKzMcfatgQw2..VsRyzGzMm6KR2BArbsoPuSTrzeorGW', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(985, 'test_school307533', 'test_school307533', '$2y$10$GDed0vDSjXBX27ECvOcmveQXBn6115txQErc5kEis2OVvKzSvgUaK', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(986, 'test_school698483', 'test_school698483', '$2y$10$VqBGUuoJ5i9Wn1MuKoGOveI.mF4blb5MztBG/OR5aUEH2hrRkl7qm', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(987, 'test_school431649', 'test_school431649', '$2y$10$R8fZ3AAvOcPw5DWieHpixet46huZtEk8jaVs5k.Q/4QQyLkthLko.', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(988, 'test_school029412', 'test_school029412', '$2y$10$Rys3b0m.yIE56xhlrJzM7./gWEX.LdtnS8la1mr.dg8vYgowjZ76G', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(989, 'test_school745768', 'test_school745768', '$2y$10$if22xbbBLD1oxaczccwE7uYd8R5UnJ084ehVx5V9o8YkQgNNQNvWC', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(990, 'test_school649181', 'test_school649181', '$2y$10$.ssJNf0.hnCuoyMCiVOYKuI4Spy7nJwjMVOZFpk6cZjm7ECK3RGQ2', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(991, 'test_school724187', 'test_school724187', '$2y$10$iL9Cm0haXQ12.aD07MwxSemBV3mW5dbSZYsVJg0wsXg8696MbzO3u', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(992, 'test_school620909', 'test_school620909', '$2y$10$VIkJnA7e5Pnz6qSzxvxfw.uMMMU/Jj818aqKTsxmZJfYA32ZmZ70e', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(993, 'test_school785687', 'test_school785687', '$2y$10$edJnj3rBz.Y74VwYMX7ZGej2D7tA3cKJ22jF9E4EVajsnu3icx4Rm', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(994, 'test_school424461', 'test_school424461', '$2y$10$UhNInOKc6yqD4D2LfxD3WuA8ZBFf/Elq0Z4ZqZ1GnITkfLpXJL/ia', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(995, 'test_school061823', 'test_school061823', '$2y$10$YqtORxDKWMhdwWluVYmwfuE77bDwGAhvPyUPwrYtH3RdgFuATnK/.', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(996, 'test_school975777', 'test_school975777', '$2y$10$4YLUSopr88IgPYovU7lfQeuXYhlOVmDLlmGWIEuzmDvQKERMZLCWa', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(997, 'test_school110996', 'test_school110996', '$2y$10$L5vmnDRUnM2n6sotfeOqrO6ZYmpUSxAi0O1On.kJINLXlGEN16Cwa', 'test_school', 'leerling', 'havo2', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(998, 'test_leerling_ath1_1', 'test_leerling_ath1_1', '$2y$10$56ASjsKH7u7BVxNN2xjeA.oIwd4QU48G448m8EmhogZQPm2nf4GlW', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', 'Test_groep1', NULL, NULL, 0, NULL, NULL),
(999, 'test_leerling_ath1_2', 'test_leerling_ath1_2', '$2y$10$D8Osq.n4/cYa.mJOVyY9yuHdYvDPYH/Pkmhx8WfzbuRMjdLwjM/3C', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, 0, NULL, NULL),
(1000, 'test_leerling_ath1_3', 'test_leerling_ath1_3', '$2y$10$T80kyn9pyfh16yK8aid.ru5NputidSTuIgfHpfkIVG8eGSnhPAQDS', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', 'Test_groep2', 'programmeur', NULL, 0, NULL, NULL),
(1001, 'test_leerling_ath1_4', 'test_leerling_ath1_4', '$2y$10$UrVyT57TumKyKlEyRsZDoOQhOff8l41Y4TgyRAoXdyQyxxMEC/u4G', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, '3D modellen maken', NULL, 0, NULL, NULL),
(1002, 'test_leerling_ath1_5', 'test_leerling_ath1_5', '$2y$10$LlkjdzjWG.iMHwiYTTFuE.F7200Cj/7kP26wo7gq8VGlB.GmajSJG', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, 'schrijver', NULL, 0, '2018-08-27 10:41:40', NULL),
(1003, 'test_school819680', 'test_school819680', '$2y$10$MiY1aiLCnOBS2QKgy69SSeftWl6.KT0JfevXEUme5P.S42q9SA4v2', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1004, 'test_school635885', 'test_school635885', '$2y$10$hU4KmDbjn5XvMePgIgg4KuB9vH1kJ.T35DybitzarHEjRd1.HGvi6', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1005, 'test_school415233', 'test_school415233', '$2y$10$./UOwG0.zSed6buaUZDR/uFkOwm3lls5av99lkfKNGf4h0D7UgsHa', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1006, 'test_school233269', 'test_school233269', '$2y$10$ANT.s9rvR7eE3deKB1EDG.uhsfO2lkCWR4Iac34gco0hlk3STcq/6', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1007, 'test_school668724', 'test_school668724', '$2y$10$Xctk83swg9/3W.xTVHEq.uUEbNo6apt9MOTaIsY9/bgWXApN9t.Xy', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1008, 'test_school649167', 'test_school649167', '$2y$10$0/.InCgUvzqmPyqvcLB/xe6Aws4yqYgrVCcuinyD/EI0D7QZ6Tt6a', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1009, 'test_school276604', 'test_school276604', '$2y$10$o4lqY1aAims3uhTm64p9P.lXE3uKAvIzzpHgJoblGLGOKa3yiPlye', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1010, 'test_school572018', 'test_school572018', '$2y$10$f2TDllbqtaXqL1N.54D4tOmZ83/udMyZvJs3q9rygw7l3viqfPy66', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1011, 'test_school545750', 'test_school545750', '$2y$10$IgulOVrnhijftK.3YJJhVeg8yc4OCNTshZudW78UgamPuuf3J/2xe', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1012, 'test_school474016', 'test_school474016', '$2y$10$Sp2OXXDhp4WXIfXymYax2eZO3/BT/13nsLMkYQHowH6IkOHaVPmeK', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1013, 'test_school298305', 'test_school298305', '$2y$10$xbQoHIJCEI79PSWRccoTi.bDsNj7sn5w5ho/HqrGq8d8jjXvS/Ngi', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1014, 'test_school977213', 'test_school977213', '$2y$10$nHmoe00eDF7LOcOhtBzunen2QK/qKGmFhGWiL69AAp6MmalkbTvTW', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1015, 'test_school564693', 'test_school564693', '$2y$10$Dkg5C7buO/bOP4pSftHkA.6qVpKOFuUQTcN4mz1eWs8/11fgwS9Ty', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1016, 'test_school857577', 'test_school857577', '$2y$10$7q4CrUdz4/vTIX1RDS2GX.tkNmo/0RVw/3/.OD2cyJuRSlCqJ0roS', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1017, 'test_school649472', 'test_school649472', '$2y$10$SaqlMkAUvGkqyImXn/XaruJQns.4A2g1d.Fff8OmAZh/Tr05iFtXO', 'test_school', 'leerling', 'ath1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1018, 'test_school240528', 'test_school240528', '$2y$10$8poDwXgEADrxqboLjofZauB66zBs6SIWLXcprYpRucLWFFaMIZxAS', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', 'Test_groep1', NULL, NULL, NULL, NULL, NULL),
(1019, 'test_school346067', 'test_school346067', '$2y$10$B8l1lrgyF1YqNZdcfs6p.OLvTqKUvAbt8NgYG1w9XEHc.M8Kej63S', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1020, 'test_school148660', 'test_school148660', '$2y$10$yVedu6g2.siGRafYdXmW2.MPgCXVG8SZcUAE3Ad8KMNg13GXD70AO', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1021, 'test_school571214', 'test_school571214', '$2y$10$e4Vtr5YMrGfnWH5iYJwUYubDiSxWPf1IF7DPieqwtQz.3.5s54kou', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1022, 'test_school667113', 'test_school667113', '$2y$10$NeVVEQPKTK26sek8TN03v.z.gIvxjHPs42HNg1KrA2S9heAEI/dJy', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1023, 'test_school092012', 'test_school092012', '$2y$10$bs4Zsgeb4GACsp6fpcnzleMDd.KPCzmILXFGkMjKJLwxbTACthFam', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1024, 'test_school230579', 'test_school230579', '$2y$10$Wsryt1zPzBOl0NJ//yjrZOqCuUk8ktcGOd1UkdMysjH45MvbS25fi', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1025, 'test_school996752', 'test_school996752', '$2y$10$4NQWSYbPwezhuyYSPA5Ia.o19xcNR6VpYnvJw2SnSZM1zaFnZDVfW', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1026, 'test_school261436', 'test_school261436', '$2y$10$cUZyTuQE4J3XKuZLM1L6G.cjACbF5idAPJgz0IS3V38nKw344os6S', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1027, 'test_school967784', 'test_school967784', '$2y$10$7EPhHTupbLHnQzeq9RZave3Yb0xvOejnN4fbAAJ6Lgy3C5OmpGfMy', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1028, 'test_school273162', 'test_school273162', '$2y$10$EWsePmG7kqgDy1Gexo2CWek5mF9eUkH/HoVZ.EHFremqH.VqepHTe', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1029, 'test_school938164', 'test_school938164', '$2y$10$4XlZHm/JWruZu3LUuOYyPO.rRn4lLPO40zTEC5rzHUIZaVwaM8sb2', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1030, 'test_school025649', 'test_school025649', '$2y$10$cjk5T95.5tX856cfnDXM3.YH8HUZ7sE.xV0stM1zolSeh2DzFNnnC', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1031, 'test_school828559', 'test_school828559', '$2y$10$Zf1VTl3b2r6PhChH0CfXkup7HFnXX4tr18V8KNrxbg5Z/Fd8oSI4y', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1032, 'test_school747617', 'test_school747617', '$2y$10$0LLboW/Vn.v08ysPr9JO9OB.ILUg.q63x7cv7x1.VLk.7jP7ieMCq', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1033, 'test_school263330', 'test_school263330', '$2y$10$8IOG5CjyyUqwKhW3DtyG9OMASS0tWaQ9sswFyz3StRGcIfykspyBS', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1034, 'test_school548682', 'test_school548682', '$2y$10$Nq0CMCCdWBsqIMoLzKSZRuVJVT1l/VFf0YpUNQ7H/7/QK0YYdudpG', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1035, 'test_school792114', 'test_school792114', '$2y$10$eIxJFjO4d5ZpZHzzdSYjBu4cDaXVRIN3V1P15F69p01npEqXATcmW', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1036, 'test_school504756', 'test_school504756', '$2y$10$wxWMR0gN3/IittPDATkk4udyy.dOn3Y0d9.Qnp4XHwVx99G0/hIFW', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1037, 'test_school954532', 'test_school954532', '$2y$10$MWH50iLsYjwW/X1b83jCreqXGncVGtcLsAnEgMEIxLwUL0wclRUKG', 'test_school', 'leerling', 'gym1', '2018-08-26', '2019-08-26', NULL, NULL, NULL, NULL, NULL, NULL),
(1038, 'Bernardinus374178', 'Bernardinus374178', '$2y$10$XpeZGllGzTGyZhiuGnBsDuwxEUq/N5NhMusw5/nXdU8edIltcnb7W', 'Bernardinus', 'docent', NULL, '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1039, 'Bernardinus999922', 'Bernardinus999922', '$2y$10$MQhjnBbcjsHkAHW2q6H26OvhUkRBpaVKXgEjrWvaEiXj2iS2JVcmu', 'Bernardinus', 'docent', NULL, '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1040, 'Bernardinus181571', 'Bernardinus181571', '$2y$10$1wCPYMq370cMyFDuDAEJMOera5OaPh7O6yNtPSDoHrykh0/JpBdzK', 'Bernardinus', 'leerling', '4vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1041, 'Bernardinus581118', 'Bernardinus581118', '$2y$10$M0r.OrgJ4njk5dVf.fiiMeaQ7TvqgIsuQyx5wES/h1m.Bmy1GXGZu', 'Bernardinus', 'leerling', '4vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1042, 'Bernardinus798603', 'Bernardinus798603', '$2y$10$CnYDvm095RYS1lGwcVEfNOTu/E9ahuPcB9kM2r7x3IMuRHzeG2Pdu', 'Bernardinus', 'leerling', '4vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1043, 'Bernardinus902653', 'Bernardinus902653', '$2y$10$pMXddBe07whCb6mGEBln.O0uMrgk9w5PCiujfFt89Sf5bAL5Wi7C2', 'Bernardinus', 'leerling', '4vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1044, 'Bernardinus852485', 'Bernardinus852485', '$2y$10$e5kfwUWdSeScEQsPYfXF1ekgoSt1LXg07j/i5NvZHUOI0Io0i9Axe', 'Bernardinus', 'leerling', '4vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1045, 'Bernardinus787614', 'Bernardinus787614', '$2y$10$wmTwkIIQgS8pw8gN7VIit.ENezanFubRhiXJEvXmfxXjFdF9GnmHm', 'Bernardinus', 'leerling', '5vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1046, 'Bernardinus146269', 'Bernardinus146269', '$2y$10$cWf1VNd5GRl.3VkeCoWBBe1w3zjVM4RPZfJr00tbqBTV3.tzFMnZG', 'Bernardinus', 'leerling', '5vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1047, 'Bernardinus893335', 'Bernardinus893335', '$2y$10$B1ZkZVLBboQYlSpGuo3U.uI0dNmOH63RvQEYDLOkhxY47QpidlPfG', 'Bernardinus', 'leerling', '5vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1048, 'Bernardinus591975', 'Bernardinus591975', '$2y$10$2Kst.cO37GdGKXpmMQQ4MOi/28JicgaIZRjS7m0fVUq7rTiDas7Ei', 'Bernardinus', 'leerling', '5vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1049, 'Bernardinus313419', 'Bernardinus313419', '$2y$10$eU4luOm.abMv8pCUYfJwNOPr48dUDSNCvGHTEkqs7RLq438YGKs5a', 'Bernardinus', 'leerling', '5vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1050, 'Bernardinus408106', 'Bernardinus408106', '$2y$10$N134cXo6tjH1S5yuTyscO.uchtRclVScWrL1eW5xpTtHDBJqZ.Jfe', 'Bernardinus', 'leerling', '5havo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1051, 'Bernardinus473563', 'Bernardinus473563', '$2y$10$WwMeTuKu0SvxG5na5gmsmOIrsyWoe2VWjc1AHGa64ltT6nkSAaT9i', 'Bernardinus', 'leerling', '5havo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1052, 'Bernardinus501885', 'Bernardinus501885', '$2y$10$zF1kUx6D1iKKkapYu1G8I.SmatYbM97fQPz8E0vyKNn3dXozts5C.', 'Bernardinus', 'leerling', '5havo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1053, 'Bernardinus670086', 'Bernardinus670086', '$2y$10$cQHq3AkZL0w1xHtR6k4X6On3bRgOftljmYwkJ6.P50d9OnMk.tuZS', 'Bernardinus', 'leerling', '5havo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1054, 'Bernardinus639459', 'Bernardinus639459', '$2y$10$zcAXLsn/pkQlf4k8idgbVOrocD.VSZst6752gnzUyYl7RHJnzjSoK', 'Bernardinus', 'leerling', '5havo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1055, 'Eijkhagen183695', 'Eijkhagen183695', '$2y$10$YuDdH0IpTft87KTwkxGeRO4l9UIcSkjx2jFdEmLC.V.JP8PWgV6Ki', 'Eijkhagen', 'docent', NULL, '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1056, 'Eijkhagen291643', 'Eijkhagen291643', '$2y$10$GBnXRBOG1HlnlY29glWtA.diocPPzK0rO/E9QsG09Vie3nhu0pnAK', 'Eijkhagen', 'docent', NULL, '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1057, 'Eijkhagen488104', 'Eijkhagen488104', '$2y$10$tZ9.dtceO4Sxkim47G8KfOQOwHhrLudDb9/J9K5ibycqyjhaIG4xm', 'Eijkhagen', 'leerling', '4havo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1058, 'Eijkhagen989877', 'Eijkhagen989877', '$2y$10$8CTvnrZ8IixQ7o.ThGX97eQqPF7homETgjUsyAMVPx1jpv0c2z48q', 'Eijkhagen', 'leerling', '4havo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1059, 'Eijkhagen600358', 'Eijkhagen600358', '$2y$10$3NWuNmWAfVdtvOBlryl6vunS0SiPZh.pGtTlnAAZ9dKWZYMCtz66i', 'Eijkhagen', 'leerling', '4havo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1060, 'Eijkhagen113020', 'Eijkhagen113020', '$2y$10$XSHaOkOhRMfmoV.A5JJ3x.oH1B.Zq.LvBVV2wx5DFBNWGQajd/iAy', 'Eijkhagen', 'leerling', '4havo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1061, 'Eijkhagen833026', 'Eijkhagen833026', '$2y$10$iFGtc0TOcmkdE//7eBmp1u6jawXCjIAC/Ri0ZyXbde.ypKlriLYzy', 'Eijkhagen', 'leerling', '4havo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1062, 'Eijkhagen024458', 'Eijkhagen024458', '$2y$10$NZyFY3qN1DN4tVU9JQ76yu65Vmtg28EKu0/F9qARyAXuNx5X5HOLm', 'Eijkhagen', 'leerling', '4vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1063, 'Eijkhagen123822', 'Eijkhagen123822', '$2y$10$OhHZ9T4hQ9rHmyt1vPkKZeUH867z5uHEhAf4ieNV3kNU24kbthoZW', 'Eijkhagen', 'leerling', '4vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1064, 'Eijkhagen621847', 'Eijkhagen621847', '$2y$10$E7CMLcMAsFW3cHY7uQv9DeS8ldPsBUgGdkBIvjVKwS9Hvae8kA6SS', 'Eijkhagen', 'leerling', '4vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1065, 'Eijkhagen589367', 'Eijkhagen589367', '$2y$10$NklD.bXhsqd5AoB6mRu7ROFqiZ6f.VsEZ7hy8R1o7wI1bzjZUS.8C', 'Eijkhagen', 'leerling', '4vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1066, 'Eijkhagen214015', 'Eijkhagen214015', '$2y$10$n9kz6rGPkg/3h8jMX4mMhej7dGCYoRz6eq09WCpAchPxeNUlQXegi', 'Eijkhagen', 'leerling', '4vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1067, 'Eijkhagen249801', 'Eijkhagen249801', '$2y$10$oj9MSvpn80RWUbOtpMD1l.mP.13QN4FK1z6elTN8h.M6uYCbyY2RC', 'Eijkhagen', 'leerling', '5vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1068, 'Eijkhagen230100', 'Eijkhagen230100', '$2y$10$i3.Nedu2DywLMd5WYhDjIeftIvSNsBLWK8J3XkiAlH64Qr7mqiXWq', 'Eijkhagen', 'leerling', '5vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1069, 'Eijkhagen774459', 'Eijkhagen774459', '$2y$10$R1iuD8mRHBWbLBfpwIKsCe8SYwlAW5fIWzh.nwPdHNiZ1xOVZ07Pi', 'Eijkhagen', 'leerling', '5vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1070, 'Eijkhagen934328', 'Eijkhagen934328', '$2y$10$WR8.LXdOnsmvxV/hlYtz4OtaO5puNbroFraSITiYER2ZrUEStnDsS', 'Eijkhagen', 'leerling', '5vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1071, 'Eijkhagen344108', 'Eijkhagen344108', '$2y$10$yFNqTffe0TYAWgd19oN3P.LP4kiwHL5NdCjwzEdvErNg6tTxTMj6W', 'Eijkhagen', 'leerling', '5vwo', '2018-08-31', '2019-08-31', NULL, NULL, NULL, NULL, NULL, NULL),
(1072, 'casus 1996094', 'casus 1996094', '$2y$10$6O5Dctgainn4Ndz9u0PAmuu8g/WDodOBZTi3FfLdDE0FCF4jyGTie', 'casus 1', 'leerling', 'casus', '2018-10-16', '2019-10-16', NULL, NULL, NULL, 0, NULL, NULL),
(1073, 'casus 1203400', 'casus 1203400', '$2y$10$Zv9JnJYVWRcdvTRL4CPGoeOiSxMkO1LeuyG2lOlG5aH10zqMMtYMW', 'casus 1', 'leerling', 'casus', '2018-10-16', '2019-10-16', NULL, NULL, NULL, NULL, NULL, NULL),
(1074, 'casus 1599305', 'casus 1599305', '$2y$10$BCu/vDHaW5xSrSOAbUnuE.UyIVXH3xvhWfBYM/xZ6Rz6meEmb46ju', 'casus 1', 'leerling', 'casus', '2018-10-16', '2019-10-16', NULL, NULL, NULL, NULL, NULL, NULL),
(1075, '637163', '637163', '$2y$10$9af15dkgBdYB9hlMzTMvHuXoST3eLDwSqqgSVrhlOjYnEFJ9.mx42', '', 'docent', NULL, '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1076, '878225', '878225', '$2y$10$3eDHA3e/KzXcCWBUtMPAu.4Kz8RQlptU64h1C.X8z1Hilz8Fo5EAi', '', 'leerling', 'A', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1077, '363018', '363018', '$2y$10$B9wLU3TsNV5e/Cl1W6H0TuDO5a3UN56h0fYufVJzF0uTJggALTcEi', '', 'leerling', 'B', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1078, '587386', '587386', '$2y$10$jUHIv78E5m67PzApO42S9.OpF1ij/QZlcDgweGFQkvJ../CCz5oVu', '', 'leerling', 'B', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1079, '589356', '589356', '$2y$10$Gyrb29BXiAvCni7EVq.li.vSHrcX7uMEJsuApP82dj34eKqLuEJx6', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1080, '354238', '354238', '$2y$10$Fr.vN/1qPyWkB7Ji/etcwOS57TNCP3quIMG/zLfqscwX.mXPtkxPC', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1081, '381514', '381514', '$2y$10$qJKgv.GZ8cdrpPNkaQRTIuuh4IxsXPnJrsF1KnllWpyc3ZfA56mjy', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1082, '966503', '966503', '$2y$10$N8lQNgsXSO9HvitwWWFvjewSAyodycOuAfl2tVnCNB5cAHkiah8OW', '', 'docent', NULL, '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1083, '875167', '875167', '$2y$10$cS9ExDkNUeWQgdmy/rkSueFpCGjjG6mVjnaq7qtPA9iMScnELUEsS', '', 'leerling', 'A', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1084, '437252', '437252', '$2y$10$kYSaPWI/i6fdwKXqDt8XmuLuQTevA/bF8X7Xku1JL.YsDpwa8SD62', '', 'leerling', 'B', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1085, '955330', '955330', '$2y$10$zUtsydxSrtuFbEEFf2Bm/eqV2RUUF5oCnyvIKA6zBCz5icDab5pO.', '', 'leerling', 'B', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1086, '109970', '109970', '$2y$10$sV4aRaNYznk6dTL2x9vhpu3qb.75SciJKmZfuPGx3sRq77lL5y9Ey', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1087, '681154', '681154', '$2y$10$ELPTG8truyhACYqVxzbjQ.is6EQpIxN/tsQdH7flscuGu64JdbnO6', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1088, '598488', '598488', '$2y$10$kwhO9coIHiBVCdkJAWxcpeNZtL12.T3nbI2Rh7oKKZb8Dj6PkUMe.', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1089, '858978', '858978', '$2y$10$v9ozK5yCevox176xGJhnu./5LTXczm.gktu/Sw2AN3eTcLobQeLYK', '', 'docent', NULL, '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1090, '666845', '666845', '$2y$10$qFZhfnUHzvxrT2tDV6eQEOencIpQvIGMBVPKv.wY2PDtniJLrd0bq', '', 'leerling', 'A', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1091, '728906', '728906', '$2y$10$89G4vKyu/SzWEBBA5EKnb.7eqn0Sdl652gBRo0xQ0uqT.1vXHa6N6', '', 'leerling', 'B', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1092, '496441', '496441', '$2y$10$XL5l9xVoFPa/GFgjgB4BDewQWJiMw9Xug57/vNdQAIZfaQA1SxJfa', '', 'leerling', 'B', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1093, '889704', '889704', '$2y$10$nNiN6Fw8lcKL2qsJIByRZ.mL9yGLQblspSSLX3vEsAghRalZFAGQ6', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1094, '614419', '614419', '$2y$10$1Xnt0DyvAqL.ztk1JUyvf.fAMB3ODO2BD10qwCrsr65kOMbPlzK.W', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1095, '466248', '466248', '$2y$10$65C0NV1.RK2GM1YhWk99IuB9S8JGyaWWUeEuki.3o6DkNIGWn9AuG', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1096, '716875', '716875', '$2y$10$2..MPTELOjH28tRE4psG4.pVgLfsxxKyjaCfJisbn1iuLJyh8Pq1W', '', 'docent', NULL, '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1097, '507645', '507645', '$2y$10$fblqh.n.bo.ydbHZBgj.we/DEHf2rz3jM35a89E/1b7ztv3JrE71C', '', 'leerling', 'A', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1098, '875387', '875387', '$2y$10$PaVzrlFSsRLi.osw9LyhN.xE7GE4exrW1iElljd.LSbvstSrppNrm', '', 'leerling', 'B', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1099, '535914', '535914', '$2y$10$GGRHj999SMSlQmLN3HNpPegfI7IGP1oX04FZCjp5p3w10CvV.h6w.', '', 'leerling', 'B', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1100, '628166', '628166', '$2y$10$sSEEvL4H7MJywrum2dG/6.majlMgjgPOg8V9zQ/qT8TmuM9/uiQRq', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1101, '495187', '495187', '$2y$10$XylAjoDHE1w9xv26WmpOo.KCwCI60YAeYAv7mdmRSbtZqs95waADS', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1102, '033916', '033916', '$2y$10$8GyyeJo5XVcSPMAalURC.e7QK31NWp.DiXNYoEwnUfNMg9JdArdHO', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1103, '677558', '677558', '$2y$10$uggCP4Kp3euOn2DIaZxoYOAoMwm0ZllyDh6TY2JlO8cDcKV8RsSM2', '', 'docent', NULL, '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1104, '867261', '867261', '$2y$10$Zf90a8CmxYpCUEACJgg6H.Y3NJz.iiQGD4Sj4XpuznCq7dneKCmx6', '', 'leerling', 'A', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1105, '202340', '202340', '$2y$10$0AgNc0yzbuhPP8Y3w3JiROM8tXFIcX0jENER03WmhXm8F0TXvcHNa', '', 'leerling', 'B', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1106, '330515', '330515', '$2y$10$L1NIVGjTH6Thz4SQeoDmqOXrsoWlL8nPrA8p.dsGu0X5pQDrhEu7W', '', 'leerling', 'B', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1107, '395561', '395561', '$2y$10$3fKaY5pk1hhYmZ/FHUoSVuFvW/2GO/BY2HnXJ7xpRgKhgQzlbAKkG', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1108, '957410', '957410', '$2y$10$ls15jrePdlwmf8GIa2SvfewgNVc1f3qsiASHn5/mypP436vlgD9mS', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL),
(1109, '093322', '093322', '$2y$10$rUgJZx87Py.5/7WOWMBwc.UfpQNHOi2xagQyKO6aZc0rX.o.UmQpK', '', 'leerling', 'C', '2019-01-21', '2020-01-21', NULL, NULL, NULL, NULL, NULL, NULL);

--
-- Indexen voor geëxporteerde tabellen
--

--
-- Indexen voor tabel `groepen`
--
ALTER TABLE `groepen`
  ADD PRIMARY KEY (`id`);

--
-- Indexen voor tabel `planner`
--
ALTER TABLE `planner`
  ADD PRIMARY KEY (`id`);

--
-- Indexen voor tabel `progressie`
--
ALTER TABLE `progressie`
  ADD PRIMARY KEY (`userid`);

--
-- Indexen voor tabel `quiz_results`
--
ALTER TABLE `quiz_results`
  ADD PRIMARY KEY (`id`);

--
-- Indexen voor tabel `quiz_vragen`
--
ALTER TABLE `quiz_vragen`
  ADD PRIMARY KEY (`questionID`);

--
-- Indexen voor tabel `theorie`
--
ALTER TABLE `theorie`
  ADD PRIMARY KEY (`theory_id`);

--
-- Indexen voor tabel `theorie_hoofdstukken`
--
ALTER TABLE `theorie_hoofdstukken`
  ADD PRIMARY KEY (`hoofdstuk_id`);

--
-- Indexen voor tabel `theorie_paragrafen`
--
ALTER TABLE `theorie_paragrafen`
  ADD PRIMARY KEY (`paragraaf_id`);

--
-- Indexen voor tabel `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT voor geëxporteerde tabellen
--

--
-- AUTO_INCREMENT voor een tabel `groepen`
--
ALTER TABLE `groepen`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT voor een tabel `planner`
--
ALTER TABLE `planner`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=43;

--
-- AUTO_INCREMENT voor een tabel `quiz_results`
--
ALTER TABLE `quiz_results`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=23;

--
-- AUTO_INCREMENT voor een tabel `quiz_vragen`
--
ALTER TABLE `quiz_vragen`
  MODIFY `questionID` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT voor een tabel `theorie`
--
ALTER TABLE `theorie`
  MODIFY `theory_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=54;

--
-- AUTO_INCREMENT voor een tabel `theorie_hoofdstukken`
--
ALTER TABLE `theorie_hoofdstukken`
  MODIFY `hoofdstuk_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=12;

--
-- AUTO_INCREMENT voor een tabel `theorie_paragrafen`
--
ALTER TABLE `theorie_paragrafen`
  MODIFY `paragraaf_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=18;

--
-- AUTO_INCREMENT voor een tabel `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1110;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
